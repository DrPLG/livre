%!PS-Adobe-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: MS2_2SP3_chapitrecomplet.dvi
%%CreationDate: Tue Apr 21 12:05:02 2015
%%Pages: 13
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: URWPalladioL-Roma NimbusSanL-Regu NimbusSanL-Bold
%%+ MSAM10 URWPalladioL-Bold CMSY10 Dingbats PazoMath-Italic
%%+ URWPalladioL-Ital MSBM10 PazoMath CMR10 CMEX10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pdownload35 -o MS2_2SP3_chapitrecomplet.ps
%+ MS2_2SP3_chapitrecomplet.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.04.21:1204
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/07/31
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.06, 2011/09/18
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  mtrx setmatrix TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  pop pop pop pop 
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB7C1A7BE
4066E1E941A608D1ABEE882F8B8E7E3B735838A7FE08025B5CA3639451BFACB4
AC69B3D95585EF78B1D0F72CE3FE6E475E5D061105933646FF7EA81B5026C7E1
EF4FDDFF62E82B16CBE3D401AAFA43872E4318B5DD3FFA3829D1901194DA0D8E
044A65401A7354A7986F49C5A0C4D34F5073EA1EC7BD55CE9295AE76F09A53A2
C536A9B27AF6D7165530550BFFCCA0B9F9F4F6F48DBE6863CB533FF32A5A3A5B
45E4D77DEDA2C3D32301ADBCFAAA055A4DBD68783B63126A53F3331B1FD2BA29
B2D20A2402F00FBAF7710CB7ABD989F14A2A0A5680778C147B65569977FAC818
185E0719EB336E3DFF734866D4E22331B7A992EA26DCD02EA24E6776FDCBB58E
E172A61824E037AD5F12DF23C63FEF39B8BA4FC8D858856BA0552233328E21E9
722132F62CBE183F61B9A8781F115B154DB91D026C37D53956D8522D5CE8ABA2
737590A0A17D5D3F8FB87CF3B254084FE9E4727C6CF4D4EB002DA339ACCCD2C8
9A9FA5772BD7C4C94BEAA4DC1570B980054BE7EA9AF1EC60B652CBD413B8840A
8474B66AF984EA7A8307C47400CCC6B99EA26CEE772A73892062A95DCFE71DA4
DAC87179255F610EA01186206028A8892A232A3A1E688B86065DF085726F9ECA
4CE86E60D093BF850A40F0F3578477940DEFA939BB558674039A5B0B9E2065FD
704F25EA39B048A39057A535AFD2C554475E428E97CE6242286F12B2068488AE
47A9F0782EB6BB0AA9137DB43DB52A79F04C8ACD8F00880A9735BB1145A76040
3EE4357A42157524DDD137624F3E9E697A79CF240E883623ACC79F1651C3D519
46F574EEF34AD0B05A9F13D86877C22EAB3C9A634FA880D0CDAC413CA657481D
54D21FE65BB0E3505934F7A7E2A4395ABA3406529842D49D7C6C2CE4D864B5A5
C8D79B1F5ACFAF9743030E02D77491B4F38843BE38E4310670F11871BE530835
4FABA813A36E1B382C09674B8A1AC56A18E97DAC201907B73F6F2407D7F21C3E
1F8AA5063BE2DBBA8A9A3FA9128705D6F2782AF675BC0693A324D5BD416E24DC
D24D67DEABEB2C629A81AAF47A8B889355908CB0D148E1843D354DED04FE1B8A
D7BBDAA2269A84CDF617D5CBE407FE79ABCA9BF5D1D33BF9FFBC326D9D0B73DA
26B6EA7851C9296CB3AD361DC84C1CC2594805222C9650682918C079E7372E21
0CFD3EEA0E12DF2ED6053B87BE6BB64332E2938F7A0B0D4BECA8067598CFAB28
664A8F479B6E91B8FF6BCA91E4D9CB6747B0CF54769FDE293F2A2C33AFA940A4
C13E9DD4F9D4CE29A22AC2F4474B68E68D99AD7AAFC96239D36ACB58B5170181
AC752A3CA511487F8A67077113C3474B6DD08B49F5BBB80B6308682962344392
EDC911D14FA8A266971BBEE503322DEC39D08EF4AD5A2BAD4102817D90025483
7666B2A90CCDE433486747D80C24405EBEC78D893379869BB253EB689D0907AE
A71186ED2D7EB58AE89CF717E78300A3923CE3CDD505B13C145A2C31D936C9E5
500A913486D57E134A88142F83975984385616517FCB37AAF5D81972318ED948
5AA28E77F220220C3870D4691993CB841AA30AD4E7F08F8CE621AEF7AAEF3576
B24B874C25F3B1EF5ED4969945F9EE67AFB35722AE428A104603A99890C6F98F
02D0B8063FDACC800C0F1B37A983E7E03C06853DED807CCD45643FB7042068EC
D46933A454EA17FA084FA32F3D48D38F9A3BDAC9A5FA88B2A3E31769EBAC0A48
C2579C6CE5842E0BAE6303110C195CA4706854DAB14980B721F1C595E77C3E44
31FCA2637E829BACA1B9ED39481937BFAAEDC15B88D3D830E78060A81EAF7D96
E5F1C34B99E83B420C4475AF687D5BC12919F7D7F39B792C7D98B41DCB62096F
5DD1EA5B2A9027A70844A014A2FA3B177792BA57CD548C92C60FB0E3AF4ED596
3CAE6DD3D264EEFF37B9319F09E6C20C2FE9A87515FE0190A66986EFAA000CF6
B4D759B763A5D118F4242DC3736C483AF3D840506AE8290DE212F4FC13635DB7
4ABCAB01C527BC149C41E2388DAE37355D3247F9C0273C00E8B2A3B42A4C0B08
559A3193089FEC3B0C30D53BB694239DA75A36A10C17250222D5931045951EE1
63A875F9735B7AFED6B2935B9DAB6C4AAE823249F049EA4BEA4A05440FD71666
196BA29C577350A2FF5BCE3E6B3972B75DE2B81CB67687E571B5B0072554CE4A
4964976344D692EBFD53A4F309D34F3CA99F1D4BAB1FB9E6DDD47AC17C48866C
914FE90C952D96748EB3FC917841D384EAA60FAC5E4C825518E472729E06691D
634982838C9373C5C8F07CDE4A12B56E11889E4519D143D946CE9F91E673A733
A05D3A46B70FF2877EA04C0C00763B96857B2A229B8BD74705E357793C6461DB
0FF872007703BC86CAD4AB0863AE4B0AD4CA3ABD3326079AE748BFC873E2EA85
3D0C0B1E05A4E6EAB2F24591AD71B43776BF7EDEAC3D96CD287D5024975F31BA
5B0F7326CCA70CF01A041B85767A564747FDFC840064226246A4CFAC524D5290
469729BACB8E31393C44E8CB1F5FDCD7FF7060466045A31A6E6CB44E9DAB4671
7EA98423698CCE2B5BDCA0C96ABDAE3BB610A0F42C9B0182392B17532F332B9F
818966C2158E75335AC0B5294F66AF03E036DBBB2F314BDB77B0A88EE0FAC5EA
FE9BBE44DF69AC4F8F7B6A9F7EA312E38DA09CEDEC968C31AE98D724A447599B
9BD2881734DF6C02B4CEBE9D82580ADD8145E5153665C0A989E719E779943F13
CCD7EE5037A86B263134FB29D67EE7A24CA1590EAC9AC6A52A77084A82F4BAFA
9E6331D5302A26E5385263B788C146C2895B7B6BEE5595CC6AD5F5D1A9E0C64D
574B76AF219C348B8A28DA48DC984BBE7B56BCF31B3B47DB03D6756E9062DCE2
ACF0C0D4F5D179F6376FB2CF9FD64E2261F1A8E8F7D6A863B5016323F37F71F9
FC431D5FBEF0B43EFDF60F68128F73E7291DFFBCFE0F4CA1AAD6A8BFA2AC876F
889DF49FE29FFFC0F8C3FC2867D234DF5F67723E0296611A2C600D407437B574
330E9DFB2392CBD1455221EA66E16C869DE8D8CCD48C1EC95E76A5F3F4152B35
64456C0AFAC2BBDB0ACE56DB710AA40B0C92F420D94399CA51E741870A15C665
42654C3F7204ACDDEF850F6A50870581D8CD1D39AD200E4DE80C557893B28923
CEEE718727C782EB8DC875B01588AAF9B43E5E9139441AEE4982B4E443E7D833
F4D33DF7343AB6335EB06403123E64791D51AA426AF63BB30FC77397E6C9A2F3
A97A996C32ED3AD492D5DB5142ACCC473BFEF7C8F0087465372FA3BEE120183E
EBF0B962AFB8F4EEC016DFC2858FE90A6F792062D5619E0A570C23E963A6C278
A7E0CF930AFACC96D7AF6D35397F134DDED4B3ED675FD3DAA4004754FE86EF37
62149848638A40AF5C0A33A612BB8DE6272152CB42F3F16C09F62571C28E2555
8FF83F74257FF63B636D83B6099C2D22B87B95FC22EA9FFA1A897BB573475F7A
6D9532D270CE93750F816D210A15B781D4EFE12EC102CD457CAC96DF9BEE5567
9AD319D0A93E038C65CC1AE5199177ABA3E2D23810B2708A5F4C66EBE4F349C1
7DC7553AAF5BCC179BB6F6CA2B030334A1862868FECBCF8D18006170EE7A1245
66D1D3C32A794DDB021E2D763A1C8C1135BBAF855F18D296B7351E42C4CE82C1
D45E3B15CBF7666B329AD911D74E707D1563798AAE0EAE0872D1BF466421D3B9
62B9F111EB773F569836E3799AB654DC550D9FCE2041EF7A9E40502630E1EBAD
16F23A627E240D6D7D0155515795499AD465B5AB03EB79B53C1E40FA5A596D85
71CE385999DEA5C4204686441B236A8478F58D25941351D243EFC7DF8F1B2863
D91C0B6306B6E64C0540D55D0422AE0DA9B6B0F49E901EE92545F9896EC2072B
9C4122383EF2E622FE1419F2F1851E208D5700A830DE2715E3FE5E12B4ABBABB
53FFC4C55BDB70C523AB8CBD96080D1828852A0DF511A504500B90E463E38409
C1D5878882DEAC2C72E3EB86292BDEB238B46B095F39C1765897D33B08E77F3D
F9FA80B85833BA77743FBE496358C5FB1EFA28CB933ED32C94CEAD6CE457DB72
938FB60B30D8B51EE8B2ACA1F1A3F20393AF86E4046BEB56DC0C9289B916F1C4
1232E25A2960D791165603080B31AC82505E881D436DAFA5183CECBBE1F74EFE
C3E0C489540B73A899E4E6A913C6F761BA62FF6D06DBE1FFE102449DA4104C4E
D44645FF0D996C3358402FEF356D6E0D692A4AE03D0FB495C0D4321160F7D4F5
2EA6A5ECC1FE460C4F5E49CE77EBBEA35AA121211CB9D4D98016D6F22262760F
1ECE126E6CFF0E4255E5278FCF515323509CC71FE547C7081E76FE0C2AE3BCCB
D463A2E33B59DDC8BE51FB67FD41D827FCD3A77AA2371FE3EF115E15816AF477
5EE5DA24EE8241099C3529DF09227B4C296F4438FA9BCB50F1D22A036FC139C8
6F96A57ECDC5E4A9E132F9CB67EB9704355C19BDD664E2A80672B67F2EE55BEA
D617AD80F197ABCB735D55F9A8365F9ECC5D78F303DE9C7EB74C4E29AB272F41
E8C2FFD7A6C07E69E6732DB78D737E9476D54A5D5F551F9593F55323B901999E
7A57135287AA8D11FFBDE8478F5461B4C0CF76C38C11656DC10A11038702D714
C9CD1BC1B4B0C220734BB9A74DB2EB2503A8EBADA3E9E40A8F2BC396A58B2B5B
EEC1BBEA09058379D1B20DA981C99ADA8B9B5B63BF41D40BE4C6FBD9585EB50B
8345E07603A80B27D9FC45CA1E85500D1B13C2287B09864015DBD8950C1D8826
FEA0E45E306E9E7EAB5225DFF9DB895F102D587C7099C4AB6671BAA357A901F0
85A2990504E966B493AF3C8598E840147F0BE186861B45ADA1D7BC77FC59408F
C13DCEC21095E049F45C7CFFDBA3E89D442BE9935EC6B1D6F89D2B5A5BD98AC1
15EC2D93542D37273EA4516E2162F75B0FDB41D8C67E7FDA9A83BCF3A22F1296
061DFD5D94C1D7B434891792504CAF68BAA1250FEFFD971B57628B02921FAC13
74642176E3EE8F49C37EA35E6C401A03D4940B93DECADBBF251BE0E683829329
E559D85A349769426CFF4F9459836631161F5F8A4D31BAEEA7325BF08B7177A5
52DC0BD32C6DF60F289D242610EEC4EDA8462DE407F169DFBE753C4A5DCCEB08
50A6D5A650F5EB687F2C2EC4670A786873032E7B0FA83D293F5C25D626C122D4
1FEDB706E60E5EE241CD47B0FB12CB41B06DEFDBB1488F0B50741C19981551D5
DB9DA02F8BC207D0C738B0128B02963780EAA60C6B9C41C2B1852BC2D7CC7408
D2A72A98792209324422F3CED5B9243FCF757972EB8B1C9CC4D98CBDF898AE95
716D6E48863E26F654A332A621153ABDE35EAA567C55C5F3AB22778230FCD0DC
4B681C48519DCBB44DD207FB17952A3BB7FFB01AB462619C1066951C9B25624E
0631FA288C0E37691CAA99CF41B07514FDFC21B377A293AAF254F08F8F2FD0F7
9FC09033A3F72C35DEDF08D730E14E5DB7483121AB27F59E6CBCE4307764542C
A5BB5C8A46EE3BCA65AF3D9451AB8F72031631973C2158D45DB68495265D0AD4
53AED810FB81AB4C99244A835A6851C93D36EA8EDA41F8953EF959481026DCA0
5C4632C14ECDDA3633C8A4EC1EDCAB36790F91EE43433425D2693D8FB0DA34ED
3E0169689D96481629EE3E43B606A68D92267B7029030D294094C5484AF21B9E
A56706748AFFC4C0D41465B4AC9480B3D305E1188C9833B854F44B88629E0988
B248B28577E3124F0A3D99CF4EFA5C6B86A9CF4E3343815218B6913BAAF05B34
228A1B970A5838F2FB609DA2BB684707C30A9183342ED312F5BB0FE3840A68DB
470DFCE09A3599DDE80A54ECE2290B926A27C3E421B956426CFB5441E018513F
7C778DFB727141C776E430285BB51AA4E8466DAB3F62C61D1660B89E78668A95
51368BE76A16A430456A79BC62466E27ED1217C85207D4D16D4F198FAA4D3A4F
0733FC2FB7F2C4766F60C99E51A03E5F7537EAA80AD923427277F96DC817D026
969BC1ED32ED38FCC30A8512D16036758078F2E0A400C7DEAC291B0C19E91A6D
487E68B85DFCAE7AB2C1D084F044236F1310095961558794C85814CFF7F51C47
CF5CFCA32C41D15D7DB89DE7E5189759B75730C2A6803A3E914270FAD1212735
ECB0F8C6BE9674173C1951B1079ACEF941DA45DA37C26BE4D5CE676223623DC5
E5EF4ABD0D43849F9545E57256ABEF029CA0EF31936A9D61B9953233102D26E1
3AFFA27CBE08038B61D59344FBB9031772770D093B1B4DCD890A344D88C3A32A
FB2488E45A36BFEC90C1A4CFBF7E3C8B1D3D780C4C4E877CB7FF828765D57968
879C431D4162E73563004550BA263B5A1A3185C5BA24ACE508A221F099341089
2F500594AEEED88592EBAAA1DF11CCB62A2019B1BF1A7E3ADD9305BCA2AD7954
58A124531768765221F1B6D788C9E361BAD8DE8B333252226E33E4FA8E697479
48AB2F0AD54A328196CDF49C6FCCB6882EF361A3D641972C9A7484746DBD27AF
2A2F1995998EC64123845747F31AE33434A04AE20389EC40B55998149EBC0CF9
492B000F45D38A317521E16CB9CD971E0E520A2474405B0AE91929B9C139BC3A
FF73159998B13BB3095D78E3781ABD2905DCB6043B11053C95C9613B0F6286B7
CA3BE3D49BA401EA96418AE0214E9ABF1CCC266A2B8AEFDA53CA0DD3F53EE9C7
AEC7A049DFC101BB651D0E89FF3919533F5AA4A8569249AE74E898F6917820C8
D597A456179679B83DCFC647710A2D678DFBE4CCF5FE94851F4DC9CA92EDD7E3
658AABCB662B612EE36DB4B6A3F83D71E1F6A69101925424028902EA12BC9D9A
9C1018A5DD076D99DEA2485FFF3DBEAA792E9970FD9351C332A9E58A942B22DA
C56DC93019F9751AD963F0CDC6377205F53E855D842B8AB49E9FC7158479654A
86514768DEFA5F281E418559F3F252B106C76D1A0BAB71A828E414BD69618AC4
C7EB58C1646A0A2BD2A54D284830B28081F9E507773CA203C17340B373007FC6
AD1262D01DBAE693C93B3B51934E45044008293CC3C45BDA80DB84236D8A988F
10A30C8139ADB24D2C33D2687271592F018F8AAB5A6D812C2A518913A871107B
8E97C2493F2571FD8A52B0709DF0BF9A95CFDA40CD05D97B42A4067AF2A3B23E
9629A016D6412D326DEC59424337139188FB267084B89956F2176E833BC652E5
5D655DE8FDC4516C9FE16163BC5325E0B597629070D60017C140BC6403CAF495
D55226F3D38EC5B74FFE5AE9F760B1FAB99DF5E40A2644037E417CBFA5C73A84
7A77470E21F5A4CACC8CAE752D12C8523B04631E29FA3121CFB7B60F3E84FE51
EA432A6243991D0FDA5152BC86F0B3E59CB0CF79DAF3ACFE25FCC50C2605B14A
3BEE4A6736C9AB6AE6714A8FCA691036CEB64C0C56122FD36452EACEED27E7AA
E5C462B5299F16735E3BCA45C7944E0E0F94FC03120868155F27B1340B0884B9
1691BFA373444E70C28200F376E5B393EA110F9FD93624239553B80621AEB21D
B273986A7BBD24F0B2919F73AC068A623C3DD389569C2AF6F1A926C8B447CC16
8D0A9A7D7BBEDF461F6F21138D00F2E312A36AC8A2953F611FBE66A72270160D
E7253A99A1CED802E12C0F03EA0A75E417ABB4AECE651A2A6421B104C92C5241
386240C4A1308832CB8A9A0D5E3FD9BBAE3F7C4283F023402DFDC0B88A118580
4BB82D2B87FF2E5D2EBB52C562A6D01E44382E275EB6E486B14A656865E0B209
319FCC9EB85E41DDF95271C3E87302E0E1A8FE757761368E196ADCEBD7D0D4AC
89275D0C230A234CA4F676483242411E65F1E638B3AFEB7A102B9ED342B118B7
3CB1D25A96BAD29B68B3F2B7945074F714DFC382DB8F416186D2C44775A39209
ED386F1FEECDB3E177503B7A5177592B3C34704617CA8074F0D42FF2328F72C9
E2428C7B6E4E486D87B391A94E233574A2B880E43D364646B254C6463F4E8FA1
04FC0BCBA60D8E000F9EDBBBEAD68A42CB1D669659DDD59AE8E16B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C4B19E33
F046CE97B53DEB549FEA96CF6CE66357C4904B7932F5B1CE03CFE3A10C976B9C
C9AD11D7A02816F8E11666CA8B3EE1411DF2CA94172659BAD929E3E3E5248F48
0690CEC6D8F7061608CF2672F65ABDC96B4FCA84D5C847440CF9523D3BF23F6B
D4365582E4B187B6A1A0282ED323BF221EDD0A4CE11CE7EDA738D1AF48B2E19F
EB3DA1664DE99C447C35DFD45069FDED1FCD70B4A6855E91FFBD7146EFE88012
0BFF1D6D1ACB53D5E07FB5795F561A4A3E953BBA7C03A9762ADAE18E58DCE6B3
B1A703122EF3B16963AC7CB9682CE60E17947E7E675D19901C7E8272CE4C9FDF
536ABDFFA429B820A82AEE9A73D7DCF77DDE4941D729698CCA8E164CFB07F2A5
BE7E64716653829FB24ADEB587312648943F4072013D02D833EB5FBAC0C354CE
0EC01B813AA3169B38137F02652875CEBF7F77DD6677D8266AABE93581FEE0B3
C455B0D5B1F30EC46FE8971B8450FBDD95032B9985F716E224A3C44B3E22288F
48ACCB5FD82A3607E18301B62AD95200E13DEBE6F2AA144D8D6E873189ADCE57
97F05566E50997C9560E91F7D9D228464CC0864DFAAE0AE7F9B73802015614C1
0E8926A004A31826653E500F71B61A28962C501FD7FDCCB479309AE973BB998B
BBFE4C486AD89EAB0D0C229714AF3F36DF5FD7E3659796103F5B013D89DC6BB3
9AB87477B288B5E6B4F9091D4A44F58CD9701529DFE9C88FF63A35767AC00997
A6BBBA279A16BD17456E8AEED7CFC18B3C906A1DF2D48EA482F519E4EFCCF535
DC1B776F7EA3413ECB29C37B9DB979612C2EB218957DCC9AB1EA6CDB534E83E4
85680233DC19AF0E54B574CB3F9E1985BA864B9DE35DAA1B865D36A490295F76
1C5392707641742E1B463EA18E2FC03785050C5449D652A4BB7AC68A2660FCA8
8A04B576992ED4814502EBFF5CC3E136CA276D47C32427517D49BEA0E9716BA6
1F704CAA3B98A62D883B32A636FB671E4E2186386BC3A0317B75C49E3F4874D5
C1BAFC4BF7D9766AA7E4CFBF8DC0F00728C5AD4C82C7F56A625C3EC3F1FF187D
9ED5EFE66CBF6D90A4F57980617A4CD283BF1B4AAF793DB9E52A93D49231D170
4B9867C833ED3E4B2DE1BD6623DA76E1C61EA7E1F0D63A7877E4CB0E054CD931
3F902C830FD20E31E5E08B89B0E368EFFEE1B34214B7BF2593E34B1BDC23EC74
4AED453091E3D7975FBFE607443BBE26BAD610D7A203D903D20C81580F05E4DA
3F302D70B39BFD629F0E84B5F49F326EA2E3DD89CE4DE07FB0D8302BFE64E2B5
9878BFDEF37229EEC652612CE1B974CA7BE24053096A1DCE7097CD03FB8CB1FA
267164742287C9F05BAB96F9090A595074FFD037E05D5CA52882F7204E9DF81B
2CF0B7F7EA0F868E0B1E18FA0B629E8327A68EA20601A90E9D7413E0EBA099CE
FFDA4D1AC4528AF6B5E307A147A747F4AFE7BF2F88E03DBD7C3A487A621B7CAA
6B48B328063A26C470C8F9697AA61170F345DC04A3BB886BB20A00BA8623DD54
3AB7382CAB76098F98CC1EAF81EF6581C6AA35FE530BBF2D38E8B49287A1D890
E8CD6EF325DCAF715B7335A2A07B20BF381D94A2EDD5B21E328A19B9137D14C3
0A993E766DF7D22532CF7B495E94E2E2445A5E958B699A14BC349FF6B535D1F2
F28A9FDBF61951615BC6A0A0BA8A818FBE3EEED5C20C129D64BA2EFF10D4FE4E
36E7F99E41EA600B1ADC4C374FB806F2D9978813067D64E0DF5E87A4D994DA4B
015959F1F2C8D81F0FCC41ECDE568014F02CBD50CBBFB8879BC646065505C26D
42B022B4D7A82E35AD208D598107FDDBDF4AFACDAA4306D6625ACD4251C2E097
681B644800EE7300DBA9663F8FA04B6EBC3AE36B6F3590028439EC8E5B8125CA
41A470003AAB80E1A3A054FAAB7F2A9793082246AF2F46B49774F8273B5E98BD
87426D2BDDD573535140A2676F9821158D56882769E3AF7B6C0F8F856AB4EC72
C0587C8191F05CD57F6E6382D04638FD0E69C97A4AB30B272FDDA8FF4A9BF20C
FCFC70378A11A2BBEB28AE40F0E80F7C388EFF5D2AEFB94464031A0E6307F99A
51D01F147627EEF27FCA64332B648BD285A643DF67B97FD0FEF845575E5390D7
2DA8962ECA39D29EADCDC28306FB6C5976E1E7E2E42125EE3B3099979598A653
AAD961469E4F69876D988EFEC1F840D672D92F783461D2B33FA5618C28FABB61
44AE88624A1AFA95B4D17E3B952A1455BAABE362AAF023886975102FBCED85E1
559ADF6B9880819CAE3BCCC15BDCCC9019326161A31BFABDC7A3F57C2E82E577
60327691C5EACA85AD00458FA7A17EB9491CD54F5F00835F4FEF95F93FC4D897
1AC13A65275BA9CC8CA2E266D35B6D15848581F21DB4FDCBE336CE9C5B7F2DDD
6DD510B9069BE1C898CB9CB9EB44236E0EC730F305CF075661C3D19F65934697
27EBB0F0F190DEB15F684E769B90EFA3C86E97EFA419D9A74CDC6AC9641887A8
671269102FFFDB880385A86AFABBDDE56F3C934CDBCC451BC66D90AA787A9A65
3A4F75C63447142226B4AD04FB158884B759AC9A551DE5D4DB804554D23C10F8
7C82BF7E09FD39B4341967F54537ECCBC61816D57CA46766DC230AD073B3113F
6A4435539795135E468F1D630403683A29AB26EE2212F88A0FE66EC27CBD74FF
46D6564B0C2F3B595C9F8B8A3106AC80DB85CE6631560D407DBAE644AC025A9B
1EE04B9F0458912B40D3D9506C00BB4ACFE6940A2A8A5CA976E72A2CB03EFB75
A042E75395578DC18597AA5AC1E4AA6B6E33A3AA245A1BDD66B3F5CC0FECC121
F57171DCE0F81B481EEECF18A20056F27182CB359B008BAB0076A04CBF5BC0EF
DF587B7F4F6BB62395863CF83F189A1A07946720C363E637E09F19468C1CE483
8E7E63E6D3AA5C393195374AF98B9D14650A49E550E5565495A5978375D219EC
FB28A976D5089C11CCF0CCCD63497CD11609A2E5CE9357047E896EEC28851BA3
19468FF69F2AC13DE5DCE13A37C4EFEDFF7CC2ADCA10C58400F834D9A49907E8
11D70467FFBD8B32B32B9349719252A948C5F925A127259DF0EAB20F29FBF63B
4E130A94B4713BEFE14C5B5534225184149810166D052E4A03A7EB0967005E62
9F852E5F33B05455F64D31E6E2A081E618F0BC2956BB1C3F176142CAF7EF8BC2
B92100E55FAE9C25574971375F6E7FD7F163542AD15186F56A089E3901132A19
0B5B7BBBF46967334AB3DDA93F1701EF688FE46EB76DF72A4239D252DA360F8A
4A4A0433C0BA4B1BF843235155A2E98E9921D07C7F601B0E36197BFA431548DC
233902D54DA507E3E6ABC85888DC059DBE81F40B65934AD2E4DF3C2A20F446F7
D525A2E897FE7FFCBF8C9968EAF96E734064528B38EE9A2C2FB48FF04C76B423
0E584DE6D4A790DC81CF23FABAC0975AC960D4C07E4AB64B360AF9887083194D
C83C7784B7734022650FBDC39FE0CA0596C31A90C79771C91DC4D21798EE7C1C
69BCC4C6EAC21F285D3BD320E14BBA53523C51904867D723EBAA4F7DA23F34DD
DA919B6B19814BF81A4996474D99E57AA1E588A8C8499A8917CAB23F00BC124F
D93096D4C4F9D073E5CD3EFE666EFBA5B908D599DBE8BF9DF719B2141E247D7E
76DFCF5AA31D8676440A3B00ED589B7E46D45D2D6F16C85A4E04198CFE7876BD
150F134E5BB4F8525916BA67DB98B641C929037B7A699D42E0D0052AE0F03204
E28214C4CCE81DB3660862E90F511F6D3028536BA4A3DA6685773D51A57D4274
4B83553F410565B96AB2EFC0B9BF61ED7769F5DD22BDADF15A01B991FD823ADD
E93754304CF84B48AD948E61D2C5D6D521E9D0A70DB9DD74FD0E17EDBFEA5459
985B64CB8B57E6DC8BDBAA1B205589F3ADE54C2F3C02AE2060614142CE79AD02
9A0936A941E14F2D03824A74E3640A232F30A14A7C0DAFF8625727FD5280A24F
9164B14D34F1026DFB3C7C7BC25F5953C8D6BBB61895DCCB77909DE58674C972
FDEFD62E4B03E1D0A3D7BAE8BC552A1F26283F54A1C740F23D12147C0AA2495B
30F58881001BCAACD3E575A6CFB6830C394E62423A0D22D51EF24DCBE949DE59
392029F470C83BEEF5C5DD80977F800AF9D764D8158E14D99E2FCCE6FA2197EF
971DB58EFC240BAEC20AD4AA5F29729F9B98BAECF11BDE98E0136C82108E1F7C
99AC6BD59B39AD16FBAF5636F3AE8721CA18A6F0E8AED762E4967A569512F3BD
ED9ABB0047B96BAF0BDA2522BA2EA774FD953927063A40A1D4C7C935C9E671D2
3EA3889913EB3B95B3754944C7EBA836A58B0846E02CA7644DAE010536B0D6D7
2D3EBD3C54FDC1061670C10C2692938E8B62D0BFDE7F47A6D7C9E547CA86B03D
E1B4B3E5B2E3A3F114CDE57D5183590B81EF0BCF16190B75C441B13F18F4C4E4
5C0E5FBC126CAEBF663588586B2A28BD444DD1B0EFDAC5432AA93B2C954CBAAF
6DE2F300042CFE76727E976040CED2C9348C192474ECDFA5363EB4D045D43B07
F336DE5A4C2074A17A9E8E42C9BF578E91DDBFF98C517E0767115FC64EB8470B
E87C74CFE978A095D29057F19D09DB4AF404F40C558C5C7C28FAA4E44484E084
BDDE7596A53472074E1C95F4A4B761F25B493F070730D8EF7E4B66E4DD3B35BF
99893789063BF7B01D5F186B2186DD1D4CEEE74CF6C7345A1D58CBC3962BB559
8C131C48CDEA8D29500AAE888596507F8BF1CE5232725242E9CEBA9FB90C0447
136A0B3EE4E0A2217FFC8F147690604ED0F489A904018B0507DC1D253B978E02
0537D139F741D019829AFE8637C7B8DACAE26B0CBE613C3D6A21D2C854EDC113
8901391308A5AF82C899D992688C38D5AB82AD629A9F19516AFD08C0E1739875
6AABA7CD0A4D5A7D58A4695803EEB68C802EFB8FBD6FD2D9FA38E853412DE77C
82A069A57BCC5FE3B8F0E10624CE83B340FC4CCA4DAB06CBFE578DBE934C300C
531BA9630132BF10CD6D252E32440D9A2C42ADA4DE4780055BE47C254B281CE2
49465F319AB47B6A8CDE92E4E57E6AA31CB2B6C51B30753D661883CC13A06C3D
84865BF4942D3ABE30F61DC8968E4CF49B3F896BD10A5FF65BB1E2C6DE9A2D7E
7296E0EE3EE6F8CAC9813744F07B6072193EA2743B3317398DED8AF8641725CA
07B7CD0EE1459971BF4273B20751016AC7BD39AB344D42B0E5E30F0874578FC6
1C156CFC2BAED12401F0FEBCBCEA7EE778B10EC2C521A0330FBCB6540E7EB3B2
ED0460F81AB38B9240BAE8469E6D7A0F8F53CB64A7A0812D498ADCFD33C850BA
798FE96F6FBB4381801BC733D837C9B91562857D8DA321738EE1FB9F72965C9B
452F4CB8AA7047F53D5F06679C108792E466ED133ECED633BA0CCF491A9BBD67
DC74F1C1DC489D5F2342CDE0C6A5BD8160DABC41DA079D536E876ECE876CCF89
8040FB612FAFF429437A2E4B1753C1A18E61DABE3772FDFC1A47B8CB6BB9ED09
F5946B2669B264A5104AB1E1FBA14DD553E34FAE8003112771A3852BF36B7F35
2A877F875BE56E43658B1560626EC670194F031ED10507C4398E7DE3C42A87CF
EA861FCEE1BB912459E5DEFA0B5F0B52A43925553F2709DFC30F9264F753BDA9
BBF1964CEA1F6C2B846F65BB1359B7459EB222DD385F94FC88D448B9E4B44715
8316705FFE8D0C41B5FD59CCBF967CAF3EDDCF79AA52B40B9F793311B56A16AA
4DA3366822A19E77DF2CBDFF02B126FE0A6175D92EB8852B4535535CF7E37EF3
FF2931D796F89C5D10CBC2237A21C56178EAD7424BFB22B681A69BF0F2F6CD3E
4A4EABC0D236AD1087A1504A5BB67CB2C5BC34973C66955EF4E6A84D922C8272
3A5B16FAEA0A5C376217C1030D79ED0C80FB0BCF6EF8806E036D900AB76C5199
BA8CDFA85E1E9BB74144EC24C09E421E263BC198512A77D96511C6539E42BE24
9B70115278ACD152664DDEAFA71F5AD69B2FE6CE0495C98B17D8021A4CB3B052
AB49A5052EA2DA13C6EB2B8A20A13A54487761A82F692041B214024EFE2D92F3
E84B5F309B77FDA513DFA9DC78492BA8F683F07CFCE2B470138026C32ABF0E43
88CC83A2322EB8F5438AC5DFAB8D0CC18C737A65FE5E2F826AAD3583F357B565
DC33E12832220152C90348CF590A027A777524F746C851A41C3FCCCE0754112E
BDE5436F4FBBEFC948AB9341D4455CF36F69D486CA532E43C479E85ACB7FE821
119C205608F868AC43408619B3804D83A9413325EB4C901E5255489C7AB5B355
D5E2538C13506FBB2FE2ED659A2B3C058197EB54CCF37F5E0FC77BAEF4D7A737
6ABAC28E959C1741B62002D67C9738E9AE38ABBB368BF65E6586AFC924E8517A
EC114183C3838D9401260A743447D4F6A3EB5A3F665C5A98F578A03948821E40
D1608FBEE82B4CF803672EF0AC1A4F76C8B2A035BFA7760362439C0B6301B190
2F233736792B3CCAE73DEF3F7438E925E67F742EB7A807172475F15F1AAE6DCA
DA9751CA5722B7748549A2EEAA996F4CECA9D43A2BAFA4423177ABA8AAC9420A
7F114756E54FAAFA7A308B95E6FD08B088D05C258300B9BB455AA872810C7948
B1EC866883E78F2481D7DD9C0DDFF09EAFAA8D67F25F80B39F4A584B90A4EF42
C2A0A38A5987ACF479E0B9667825CFE64B843C878C3C4FCA7B685CB9BBF818D1
40C7D6C640672801A457C60115898F910F38FD25CE03F740C969FCD8FC6085A1
7CE629F307A64B286C02409330317B4FC830F541558BAF32F0F0A3A02D479C48
D67816F04AD0E3DC993DC7B7316D4D169C9B15DE33E67B25F4627E796666D985
512EDBB288EC31F7EA36773562C37E2491C59FBC80AA5CD32B95633CD9F59D56
FE6359BC8E246C19F604F0B28AB1B186804EAEC88CC05BBFA8339782926FFA42
5B80DCBD26DBE5C3729BC718416514400EB4FB72BF33CA77F3603EC393FD2581
082573D0BC385D8ADA50ADF09D8FCC0747566671F04ADD10C478B7F8D9A56248
7A9FAD8D2C75CD2471A01D77C07385C9C27980E709E4D642D169A45306E533DA
E0E07696962EED3A3A13C4041ADC5F52005DF7DEE7276A6B357A892D84A875E7
EED85012819DD2FE7C1807FBBE33856ED29B9AB43114453F0BD680956111343C
12CF248189F74E3978FBCD193B0C3A934884BAA0E7492DED1588EF3E31E699E2
8F9EBF445F234EEA8D04CF0CD0246E250D2917B01A4FCF52F32E017E9EB5E294
B9559556A974B884B373D14D7134EDC9C2975B4ADCD6D9099826F363FA87CC67
DE15D31A539A987993600AAC662E767D37B3376124F88E081FBADA15B871D8EE
AC0EAB134DD682DCBC9FA759746E13EB000DAD73C64C1936A32DA881E68915FF
0FCA661632CE15CAD67EA78AB7E80316B269223DAD3581010BEE8D7D335B48B3
74BA8969C0F653FD1F267F5875BEAC6DCE622EBFF358E63D9F6000F11FC2357F
A3ABCFD76C3D1F7420ACB51B0096666727E6C21ED7BD158B139DFDB9CBAF770E
42D324E8CAF8D7B3F407A86CC0DF90019C50E2D23D75FA8653D90DD8E29CC460
BCFF396F491C992B3061D71E2CA93C19866DBD95E41C04BC8C2C0F7796B3FF18
1058A150426089EC7071143F5174DF3BED3865537505EEF3F9C3082A618AF781
2F05E76641BF2F8DA0E23913C29A0FE8B68178A5B57A6B9756F1197D8B120E37
6F6CDE7947BFA6242222D6E23A144226B5681919D45DFB7624F5E48CF6C0C004
BA7CF209889043740852B4B32F9EABC29B3A87D101BF45706BEEC3AF2213142C
FF6E2A4CE1F47F0B760AF91E7ED9BF69C5BB80849B85FCBA9F02741879CC5807
DFD2B48A92F7E0BAD527DA6B544DFE4D172EE348C983EDAABEE93732D2F8F1BF
086F85463E288FEC745FE270D8B659CC86087AADF73413A2621BD8980914FA70
34D7EA971B56353CE9DCF31ECAD09518A380E43DFEEFE15B8DD913FFD8A3232A
1CE7768A9E0144DC18071EBB100F3D113C2E7A8DF0AB9C37A3F9517BA182A84C
7DDC12D1A654935680C29D75CE1BCE91C3B4E76AAD8955618735CD2A532A8B3A
5D0C5F6390599B2E1927EAB85CEB83D68B8918F25CA762F49785DF2B3D2C8BF7
96E8403631869981BF445D9CC47AD2C91B0F26CE52BD93F1CB4AB47EDC8C18EA
FB0BFABC38A153C721060702EE1268478FEAB9A40F520A00A83CC3EB41E49885
F8A6443F407B376266C585B6F367CD2083B9AAD51D36F6944B46ABB80C45B9F0
9CDAAAF4589EE7E392FBAB562904A0FD4644B748EFF0D4BC183F269719C09EEA
C832E8C0F4B26BFD7BB644555F8BD525772F5D79D0872CCDB6882A2EF06E4E72
C1376A839C59F5A8FADBD6494B47C016D6D7C00BC254788D231EACA81DD5BC0D
D3043011B33D4BF1B6DFDEB6DF9C8BB5663DC552D00A4089997DA6BFAFDDF0BC
9E92171DBF9964BBECBF020C0D60660B00B6C6B89A260737AD27DCA38C8EB88D
377E376DEB9A4CE3BC74BBACAA12A16D3B008B1B5476B69B53CE06234F77CE6C
6B2AC1725D3BDA019E9AFD3D55EEFD0CAEBE3C9667FE7447461BB6758AB06E34
EF50417E00129696545BACB946414C91A011304D111B82F6AAD4767B7E90621F
52A0DB48F8DF83D22A8820D1AF1253A96954EC167A6F63525B6EA71399B1A077
003C4BD53477FC18E5C5A5E797185F88F29054DC4632E392461925EA33CC2F46
8C4369A52012454F10F0AC1CC7874C46048CB50E052E518B287A5826458DE108
E9899BC6A21FD87E240B9F363ECFD6EE1EC54941713039A3B9FDEF15DA1FCB0E
1222DBFAC9F8C9B94D05F7D9F38B8F88D8AE0B3405D41817647B7D2CB35C6241
10094F9C1BFDE495A6448C988EC64C5FD04FFC5E9B1D2F70A87DFE7A2FC974A8
2A3473BE3AE90B7FDCEEE33F7697EB5E4D8A83063F9C932D46F107334F91FE6D
91719110AA412B62A691D7A9A7F67BE083688D5A45DD4BFDF752FE8D3B9E64FC
0500C0BD7663F352450A897882971D1E41945C9389F094C2DF6DF8B46EF99BA9
BB62BBEF9C72D4D369010199BFFB00F48C54499AAB9A83F81C9FC79D8FB290FA
F9BB91D8DEE5D187C37B45B1325A77AC93984B9D34F264266F2E7C580030EF3E
C850D5C0C6CACD61CA14CE1E5AA9C9AED5D726DA361ED1D06ECED7402622D86A
C48326609A089B0D0BA52EA550DD8D0DE78B2069B8758D0569522129D6D24926
0776E621A52C47B14AF203AB3EF7A4B4E1035DC7CF7493939FB39A4D4D6E7A1D
6509333076CF897B31CAC3E3F5838556DA8D8D9CEAC3A5569A5DE3BA40C5D052
523EC8C785172FFD760136E919BC7923ED67A881589B4B2205D49EBED1196728
2DD6F62383C0A4C777A16FC6C81981D9A1A5B2313E95594BCDB9CA66322FD206
2E163D0C35FF64233585375F5315EB54B06A8A81D61DC29B11CE4C3F21137710
ED70419F344EACCE12C23166B64966AEF9C6CD3240638B06FC1553C5BEBB9B9F
D9EEE1635A77D096F33CBE0DC8848F4DAE4B87AFC589025577E5C89B3A971662
8D76CD1D0DDAF85D5737D336460AE1BB051E4BB2B85BB87C3A90EF239D9B60C8
AFD4AC98E90333599B41121CF2F536EBAABE35B01B991AE9B6B3EA564D8C0040
DC943DA3BFB5A814E216A0927BFD066474763370EECC3DCEACE0BA1041E84FB4
7796EA09CAB208A2FD0E3755C75248E4DB744FC4F0122D251B8E472CDE56DE9A
831D1822C9A3778F73220CDFF1BA5AFF56375BD6E746AA13DAB76934B0582844
D79E5EB59A44E4E5D6AA1C6F813D68067284E6F32532D0374216352915148A91
B7B03D4C4A546BB8CFEE4DF82E01F6A929D2A790ECCA727D1AE78A1CC0B6F3A6
3DDD44F38DC75767956EDB891A2DCE6E16A528097FAECCC1F813FD605BC4D3EF
C8ECD914CE4D5D5619F1150F86D776C1169D0DB288BA3D575E78BB8C5EF706D2
1527801D6532C611B2F56EA7CF4F4DB948A26982A1B3DF9A0200C6D9D5E585A5
C4A70C354ADC7AD52E67A7ABAE7B2EB6D8D15EBFFC56733E7D6B1CAA8BC4915B
F2B207F5721F39290BA10D758667133B8800E5D9734BE86DEADF3105D5ACAFA2
25689A17C0C81C0D58D5956D9B5EBD6EE672FFE89CE0D3818CFBCFF6D0DB3AAA
D9B78916D33F084FF4D65220C8303BE4812A692E87EE0CF521662C15EE0EA173
8F9B83FA1212E16E56CBF06B59279008F225678C3CE2E50AF3F45CF607FE7AB9
5A876A511BB2FEEE11AB583D9E6AAAF50438DC3C20C6E30192350588601C9DC9
7722055FF5CEA6707980F65FB96590BDED66F6CB0B6AAEA09D09EBFEDF319700
7BA3B5357C8736AB384B5CAFB59A6B5DB9112AEE480C3DEEC937526816B72EA6
387B718FC2DE00F4C90CBDF91DAEF8124F58A958DC1AA00A7EC816D98EA17802
C6CA875B506A13BE1D2257E1082F8D3E1D3C257990557AB57AA9B779073068D0
69FFCF1719114C08EDDEFDB2C5E1ACCABB145F57104170507A71CEA1521D32F4
0645586C541EB238868FE351887C675DE2EDAEF40876C1432BB13168B93B7C2D
36781BAE94F800A5737330E7F16845A23A1A4958ADE4977CBD32346056F7D27B
CA2A0EB33E27E4D5ABEBB9783D48B9FF15FD8A729FD27F224F7D1B54DDF101BA
3AF6103B8090A017C2AB438ED9653D17D2212F253C69A852FA1A433D874A5351
280113110D0E092D18BF4AB4769A0AED35C6A1A3D53F62A3E2B86AC72C9C034D
5BFA7E6DB28EA196D32FAAAEBFEE0F7CBE5A16D4DA066C91E2D3F2A39677B4A0
B0199CE085915C76CCA4F1168492066D8EFF509B94CD8781324AD9835D585034
8F1952BA914E9D19F939C8C597C35463D0B362E29743908B9FABAAAD9A4481E4
424DFCAB096C836B871222A3FB0059F050ED73E8A49ACA64FD77142C2742F122
C9EDDF111785620B5783A3F5297C704FE306AE74F00B083B96756BC0781925C4
4B4AE7D5814555B0A9211F386B82BE6F07B4454D0D298F38F3422A094C67E134
E2F5FC751E9072B29E8499502A1815BA00A0BE423CCC790388B70EAACD845B20
816B64A4C41BDF16C1E82EEA5CB09BFAE54328AEF905814D4D26C2B5248D3254
D768BC66A695EAAF6630F41DB8C9F6A6A155F451AA398916083C652DDEB1A36C
E27039F0296B8D1EA646C5DA6B8DBF61808303292887BCB9864D1C8D0D0004BB
F2D098DE85FDA4F1047AF067A094675319ED28946FCE08F967FA8035E60997FC
7137A20134A9B8ED58F4F044907D9597EC10696A30A3713A85697DEAC36D1EA1
5900CFEE6F4C25A84D6F42BF354ADF1894CDDF357F3A256280E9447A1314A13E
456CAA04027E66B392025AFD62A20D3D1B81E4170C6476970031B1C12CE75584
90587EC9D630A5B888D3B46B6EA6CD04A009674D3973F49EA0C9DD7EA0BD92D6
8E95579D14CD313C3E069A4CDEE94B9FCD9FEF9FA2EB0C8FA61DDA78DC2BD5D5
4B43343D4C1848DBD5256E185E2ECFADC35D8B266241AFDA0F666BE290A96595
C7248ECE340727D133AF016C74F2713A1BE8F98867E2406D66FB2B8F75C02DD6
C5D3BE637D4071CE06F1DDBF4757CAF14B34FCA46A1E4863582C649CB958A995
54298DED3D6931BBCEF98C5837C12FF63FBEEBD4A62F58DBFED0F47A09ABC407
511A51E0050D9DFEF5EA7E514D4197417D8919ED773CACC37424AC7A782148EE
E0C3E0ECCFB53C0F4B02A5B706FCC4032564E30FCC1F759E0E265646E5C18EDE
8D62D4BB4472D3D5FFB3C307FBED61B47D987B4830AFA4D99028399560FF722A
82E8C1860515B629B5BB53C2DB3DBEF745120515EF4AB7CD1CA55FB794371A8E
48388914F1A18573617243D38C78C1451B553757A29230258AA82480AFA43C4D
9B642CB6A6514ECC96115BF7C3080E6526E3439FE2A8D3FBE9FC8C4589B008CB
ACA3EAB7449881325D7544F5B8FEEF1DC45322C179298B0A1769983B6F92310A
DBDC997DCD01028414618D771AF5602A15C7A255FAF40F4D8EE7BD3F8B0DD61F
EC14F3E1AF7A7727922B6AB63451784FCD34BE75F79A919AE2CD04716912181D
979B7B8A5F5E8BAAE0A0765AE444523D2B48997A7A55FEA124FF621A7750594F
1B4C5FBFA8B9591B661400E45720ACC3C5D32E6A49683EF45C456F8AB01D3DD9
E906252CAC0EF6C8C2AFA636A39660C266D5C7F0EACE69159156EC0DF9FDF6F8
B6EACEA315CB77F49B2D075683D6654BBCAE024583D679060D3FBA6603511EFE
27D69FE074ED088748C9E0B081334FED0ECB9B72E676ACF5B1CB060D1DF7C8AA
9F5B8869485A5764EF240417F24BEAF118335FE065ECA741F4AD1FC29B0D7984
C8117A9DDC7FB5894EB1803E3C1EF42D93FDD982C9E2576F36620672ABABF880
C7EE2A38CE4BA5CE52DABD8FB25AE3EEEF471AA912CE0EE037494A56F2430184
C42C1587CFABD8697EAB9B519D1D4C749D06386D6777771CA617B342EC92A2FB
3984B8DEF39C120D09EBC23A3D33E4345C4837EC6F57D3E830EF1AC074FAFCE2
56D92B56166BA2499F6C8DE8D6164EA7AD280662E53A27AFAC4E3EE75E25B8E8
FB5B80B079EAB1AB81A246E4FC08F10363858875357C572360A6751790F7AED2
E3C30CEB815A9442A4A3F9B276AAC3ACED1B614333DBE502A2281DAAD5C15181
43B4722201EDD10FFF8FBF6EDE73FF97721C3EDCAEF00CE041CB9B7407688DA4
5D021ED67731DF28E63B0C9A7668DEF3487987BD66B0FE861443EDD811F9173B
6F3842D4FED9F64C9B58DE9A62C7FFA53694B3C08A9EA89C99731DCB13E08DEC
2D6540D5BFE9F98ED943AA178D019DB80AE3951175233DD40FFAB647679EE294
7BC265D499FA596BAEA5C91A8CAE5567383282AB7C3CF19A5E25E0AA1822EB76
25B4B16A66CDC664BD5D3FA0BED50D9B16E7E6CFE5898A612B8525F5830D59B1
BC00310D7E5420881763A086B29F94D296B35EF73B4C6F230A973DA17CC6736E
962C0A950B8D8A2B1704604C90F951EA7DCA2DFE2B2BF2EEABB8086250DEE450
A45821E50AF1E0950FA9CA32DF3E404F7E958AA6D0E206F670C33316BC01D783
5E5D209896CFBE82A71A9561703F75699534F08A12DC3E46DE77FE4DB7B18E3C
90C6D99D5BB8D95F9E22D6EED511DCBAB81252D241CB96F1923E9D0F54EB4C1D
0CA4D35DFB61112CDD3D1BA2B523C2FACBE7E52A583B0ECBCA1ABE536898F320
B71B016A4B9967DF8D2F24647E971C6967425850BF3575C09E531D40E2D9E04D
9B96A873FD5824B2E4AC9266147A6E9968E8F5836B312AB3FA93C9C3A4BB2B6D
20E260F69F25DEB1ACDFB06B2B3DCF7D364DC4C2C0845833292D5C84FA88A543
B2AF4CA34AC4425E1B39017851C91136FA12ECDB0B0BF58CE30E46500BB5FF7E
7B62E36C269365FCEFE7EFE81867FDAEF8C4778E97EC4386A4CACFAF684F9961
51287478114A8495A573F018076ED53BD134A9C3517C462EE2F8C1EBF2180881
A002DA424F0DB9FFA13A5B9CF405F593B6EBF1A2EAEE36EB5A10B24608C9D540
34E48E73760D03B2E0D2CFA91BCCBB6E8BD3500475AB1A96023EA86A9CF9BAE1
7CE4553E2370EB5635F7F76C410C86B6C397BF37AC0B3E175811A923B6A98C82
839F55BE1464F86324E62491E005DA7F08BCBBD92A036BCFE94C3F2A4182527E
16342AAE0AF1519C11F90FB158A96FC36EE110F348560B8BA2AAAE24CEF721CF

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4ACEDECD8D9ADD713BCB89E89FD5FE649B1803E3C1EF42D93DBB6
D27B0E21B6043AC73B6FF214AF5B072166583BBA69C7965DC0D8F838ACEF3534
083DFC32E5B188AC9145D33F891966459629C28959651D899B9DF267A46260AB
1ACE2D780F5624CF53DE6A33988A6DFAF89F48E9ED6D9BC00E54DABD29CE1992
FD55E0F38B8C3202D3D4F36FEFB4AE1EDCCA00299CF085F2E5A1F36DA5C25076
2E98297F6D6FB6A04374984B8A4A9609F11C71B3BA30B22414DDD6C97819E29C
1B183955048D80899581AFD736FDA1C65DE434A689340D0346E0F7873BA3F38E
A4E51A1A1F2E93F2F5DEBFFE420C7368C5E73A0E5D59097418C1033DD0209362
8A1379F54E5D7551EC62CB89BB4C9DE430C659868C979C475CF59579787EA053
B62FC8F4C33339E05BD7E50DBD13CB8F058C9AC51A7A1B288841E63778246280
FF82DABC96B0C8D6B05DC04530E33958CB72DA28DAA11A07D9D7257CCE2A6747
A62E88B4F3ED2665FE6EDEDD0B1B2F0ACFB39A66686AE14C09D217D1C3ECF64C
1C95F866AD6FCBFB38535AD385F3FBEE31DD19A86BF97195C267454702C59351
0BBB7AE0A5F4125C282676CFB38E41D0055A8BA28C5262CBEAE15984ED81596E
B2039CC1A9D5271DD673D1241DDDA5FDA97AD809021D1EA243019B299765A6EE
F8A12E6263CE2C7A75806C41BD8CCC4FBFB9C8CA5FBA4E4E99A88103935A91A9
10B6AC680A8D872CE89A2FA7CAE9AC02990882F3E81B9090CF23C4F1B87D58F4
F7247675B2391F4610A58C8A18DB8D5AB923D1CAAABD63C49E665E9E9B22418B
330B24A0523396463F528D5160C7E9F656D93EB214E1FA04F01B6E219421EB70
55EABD746EC148159823E67B18643BB656BCDEB0F3292A8AD108AA64FFEB0CC4
106C9881083F76F9FE0B6D85C50D9B2C4875701BA03B7B042C7A371164CD8376
433E9D2556C8FD15B110E435A6C93FC42E6678C5048808436A6975645A8D0668
BD40279D4E233E77C42CDE50214DA86F8414A3EC521002999ECB6794E6DD3AD9
BC73D8EE27894A1B19B5E41617DE991A6278646600CBAA57E8617241F4ED7522
69316451D65011788297EEBD7853A935A1AD00FC93B780A5A1A40F8803D89AA4
F15A63CEF1A332DDF10639F3F84E2CF9D650B3DD5D8A4131AB3EFDCDAC63301D
F6B0A0CF28E918F844C7A8E197207BC79A05951D15AE650609334CFE595E725A
02DBFFDBFF5B71E1041E49B45D34173EC3157374B94FEF8E77173E5FBD8530DC
9C5E81F1BD231E6DED7E8241C27D2C9F792B3269F8ADB1EE82359D114C1015DE
4E16D1305DB36392AA8C477BBC994389D806B3E19297E8F9A3B5D1D841A976A9
CC1A125C8A2A10CAEDCBD4D30ABBF774C856F4FDA49C67C57A135C1E62C497A8
C5C173F10B3A681026367F07665902B7963DE71D8CD53D42D84AD041E64EEA67
9F78F37398409E62E48D1F6853A21DEFB1FE0913EFB087B698901CCA4C0C949C
DB0FA884CDF665D0494FDFF49A4E4B541F92B0940ABC31B5F8111BA5D8F1D816
4CDF3AC045BA1227ABF00FD186B16B5AF15074E4829FDCE10EF651C222D461B7
3B65B6B23C17E54BA57792883B53D9B5F479B25795674572F3135F410D9D11EE
39E338B20C864D769C0B2F3F2E2B5EA81D6BD12314AC2752BE793A852ED6B140
D35539FE4541F95279F17F7CBA93C154A19957D4C843F94F52077235E68A65BB
D8144B53E69A0BF9E2643FBB340CBC2CB2B78D188BFBB83C6AF09FB64DAE767F
60068B127F512CD94B4A6DDFD89B501F212C04DDCF14013B39F641946EB21E62
34BC1B1166547B306FD0FE5114372015A8CDA28AED5EB78B4FA50064D7A01485
B458622B220631188F989103E4F6F8A2D93136D52CF079EE5EB741A76FF8EEB7
E309A7071152823274A655F43C10C9E8824F3038D43DEE9C4106E3E37A9AF8E6
E8FEB1113E9690AFB2B82FF75CAD9FBAF64491CE33E250F75311BEC3A1316865
EE7DEBE396116230FE81972C05F20858A2E1071C14C88C1762DB09ED57A323C0
49F7785143575804E64D10C387410271209DB80713C7D5C2AC2560D82B1302A6
DCCDF9D948506716B3A5040DD93391098692D53E870A5DC504B51EA132515B35
5A1CE24C24EB30F877FF5EF944F62575FCDDF3093BF5CF3E702C215A47AD18BD
54362ACF2D523FDE5A4AD93B648F6F54E5F7E7C38086DA57C75298A4E43A77DB
572F71818CF7D78139BD1A407F16749653D1E0C589E143BF5B6F014DD28E2B60
F06B987E0323E8B487E76B765DE428609D27A7F793FDE80E5EF0194DFF8C3545
853B60E754898ED8F08E232E3E708809142812FF64F26466D5119135FB8F1700
4376676A200917075663076A9730FD7543E777F380CC1E735AB8FAC2717F99F5
80CF25C3A64982634C8ECE94395C28EEA275244DC7B1CEE17957997FFB4B64B2
B3B6619FDC7541557E4BE3EDAB572B816C02CE2700205D7E1D43BE82C5490942
52A18ADD5626450A2914B9892E0147A245EE0D48B81B39046A34DCDBD02621AC
20ACFAB65C54852B96D04ABDE47EFEC71E4973F629B392CE3475109E24AD14A4
CF5869C16F750F4788B6B3C3C2776D4DDE23DAA9ED3B44B090C731EBB8E4C903
AC30059F04637FE5EF4AC76A7070F1256E6DDD52B18DA4304B1B63AA7ABF4EF7
7A0D68AABE3A561F18CF4794538D07BF00C85167E5357A9C218E27B603E870DF
B15B31C0EB8C9187D145E1FD9E009E98A97DD3D6B59687A56DF34CB8BF3D5F6B
39FC7B17706C2876E3ED8AE3BE873992E63B3149FEBBD2FC1051E592D423910D
8FE666C217A87D295C658D171584068106E15CA4690511D117252678EC171A14
725DA7DAA9F253E41E006EF9844C971537FA892833B1692F8AFC46F3CCE4A28E
3DA8B16415FF507743B10C9B85C4EAB489E2B1658CADD1B0A3DBF6E9517D480F
3BC878FC55C33D5DD045FA7B95DE5A47A7CAEF9406DA16A1BD6B4FCA677F5F14
63ABFF37AECD69BE9AD7B87EC13DF7B6618C32FCB4DCAF6F52EBA08FFCE2E1FD
CCC892062EF7D3183F477B739EAAF07C36ED3C28CB70A7565FF6BAEA0FECAC82
80BDB3F7925050F10F1BD1C11C1D6D6E5F3C75320B4A2F340319C00D49A7C0C5
C4AE3CC9C4638EDB91A8DBCF2730C10173C1C482AE170A1DFCC1C343358685BC
20401C63CFBC1A7A62AAA2CB9F5F3CBD8AE94E8D9B5D8D3EFA26D7FFE96E3DD8
715558BDC1AE9FF76A67495E8712C3A4E7E9377052A7BE8271C7A5DE429CA909
C859B9BA3658D0708DFE60289B32473BED83729603AFDD41D10D8B5C94672228
77E6E6212C891803DEA862020FFF434EB26CDA15C13AE4269F6878785AA92612
7DA4CC433361971F73BA92BFC83793A0677417A139BE43343D316F751BA05228
D88B7A01E8B9306CB9F10D1EB888D157388E7C54C8C90CEEE5A3E69465E58CF7
3BC6886BE23AA1833D2A527FC19F8695A97E7AB80C1CA92219DB34347F11DCA2
502F3F83942AB56EEBEC0CE2C3F13C5CBD3FE5AD1F7D9D6AE4300FB869A656E7
F4E76D76342B2F38EC9FA74DDD80A0FCD06A0B4EF2F9A8ADD112143D7930DFA1
8ADFB81C0DC5B2006D06E80401D0F103A8780A17D950A70713AE1C8DEB8DBAAF
6564A3371420EA9EF3FC3CF0EA593F7057AD057071696E29AC2BC907C2EF647C
DC0DA2007D31581937DE2EB24F3BD976F25F62274AE5A89BB0F0936C8EE93D1E
9701B6EAEAED2239FFA0B56E3D370E5315528F2E71047AD7F931AD47E4B524C2
FF540169FF3C9D0CA8E69F214509080BF28173AB5D8370A7175BB6F2D7436772
53FFDE4B6494897F2F82BB20ADAB34BC0D0B9E83485E44F406C65977AE100145
9461D428AC334947DA12FE85ECDB306F2265798760D3C15BB56A702870A3694B
56EA087CF39EA825E6DD151F2980382178217879909DFECCA6D7164FED8F166A
4CEC1EE342EC57B81CE85520216DBAC6EA1EA9951E0849D5C3BAAB215530B064
95BAC03135A05EE114FDAB9BB1B2C48C1224FF69D02BA2ACC22DDE10A61F8D23
26AB3F011E787205BBAA2E3F29539FB7F8E16596FFD4151B332C718B1732ECD4
7A8D92F0F137E33EB9D4229CBBF2AFB51DF41B94660DC0614C77AAA035608BB2
F1956A2892F71A1B3D33AE7ACA876303E2E02C012CABEAE8C2CDF058FE624EDE
616A94D35FC2AF9A36305E36412A23FF5017A3095217667527C2E8E7587CC217
F9F56E40CF6296A4C14468B701EE1159480ED6CD214AC5C02442B4FA0419AEB8
D6502956CCACD44D5DEE39C288F234ABF6FD1A960D24399464D2666CD328C68C
AE5A330D8AD3C9EE43DFA0932B65C1FF77F5133F4C8B703E6F564201A98A589D
9CEE75E34DC560F9DE0820EFEB02CDE5BF22158A623139AB9A300E53F44C030B
064916DFC91F54CCA23D666659B959ED13F66798C942302034B9B6A6BCF469D8
DD54BB84009EA9BA50FFDFEBAAFC82ED2DF20981543C6A90793C3B30A22ED06E
8F08CB5E72B4E21211A9B74266532C8F64BF349351F1D5C64558FB8316A55B05
511C960E029D70C526E49FD2D79B26D4A7B276CDA0FCEE03F0C05BDDCD64321C
EA4AEE9717058FEF247C579F971C62807B390CEB5828B11EDACAEC60F78E0D16
33F0E075183033C634B31E84CE01BF39F0FEFB17046361B259F884CAD1EAF0B8
4E0BD091BD830E1C50C9EE4CE57CF3EE4B34B024B2778875924598973CB64210
43F7C75035FCDA1AD2DD2DD72AEEFF81BF32EE913CABB9B2A1C8F233A2B00E5E
6F7F3C437BA65A1CA0C1D6DA491ED2E778E6DE94E38C871717C3F96C2726AB29
3CBD643E041786B68A16D6BC870959E5907E975F39057B61EA058AE12BCB47FB
F4A726D3C4037E21DA3D02F77AC211AABD450B13CB95DFA35C2CB5E0E54A9A13
C1882B285BF0EFB14B68A1E5AD77B63DF073D3D8DCCAD2CD94DD050B07DFB061
A2448D0AC1B8EAE51898BDC7C1CF51352EDA64B97F63A4DD9D4C46B9DBCCC45C
AC35E42B64F1DE8F7B82C5072AC073928BAE7AD1BD801515F3FCAB2B92190F81
8C99ABF685A634431D9F4C66C06BD5B95C7B4C5CA2043B9B0E54E3604C2D79EB
ED8E98A4C8A60B0C11417DC5BF52CAEF67B50937BF33358AAB826C2289D31ACF
5AADB51C830DC19C78E9F120E8FFA46F2290BF30945396DF7BED0FD6F3AB7D03
7E509CAFC90805419C1F82BFBEE3408D38C8E6A0AD9FD70D801D30B1357C3432
A488E492FE4E10F1240E884911F452C33218D6774B585603B92C1EA90CAC8553
D048584FD6635DB7895BC40860913327FD6EEC9F06F87D1352E589DDC2D10318
C81F76402DF43DB170D589DFCB33CCCBFC147A9F994A5B5ECBC46FC4F1CBCF1E
1D03F3D8D2CAB48E69AF8AF523BD127C14BAFE1EC8E4D186CCC8F1F15F55942E
AD3DB6A74D3E0567B93A4F915FFBB9E1C2EAB8484878E1AF01DC008D72BBCB47
0DE68D4D7CD492808EDF8727244C59138D53B115C7C8D4EFDFFF1587FB6D6305
F0B135AC4E8ABD33742890DDCE3F8812CE4E93CEFDBA9482EBACA6D8C3D83526
5CF76ABEA77B1FF35110C7E305EAC163090F3BFB840A372BA2464D679D68EF06
4EDC33D02A7327232A397FF5BECDC098C7D011DAF6ED1AE0ECE6A43A73429200
E5F7A3C35D2DAC2AD31A4A8FE8112B67C5DBCE4BA55DB6D86E691B2CA7B82F4E
D2802349FAAB03DE87D25A5AF03BA09CDFA6EBDEFBCA00A47E7C02DFE34024E0
35D4468AE5C73036F3704B16222179BC193D40E5604C9580910F6742AC40A7CB
3E08E73FA1E9D052A60FEEA3CC3D11A56D1CB957F27AE487F8CE784E978F194F
0502B7E610DC069791E52CE628CB545F3E8F262D3B5D3B93ADDCB366B3F06E7E
7F6D9B01F11A89B3B60737C546E9A01A591EA3B121B082110C60DCD6EC465275
91BFB94442A0146D8F93A35D8AA21E41EA03A5D6704780155DE7E7B00A8B99E7
33AA64BF1C824AA786C824114BD6BCCF2321C221DBB896113E83744712F5F723
5A497AC316B10038C608B4DDD70813797E968A4CE41B89961BBB7F30C807B959
F9270F7F526BF74A68D04C38C598D8626BFED7CB672F132E065934B31BA01325
A524D676161B14D376DB237618616EC4ED582479AF6E3ECB544654C43CA7BEA5
B305B1BCA2F63C291CEA22C286B7F058E8F48EBFC36AAD3511F899AD70C3DFFE
0AF6DB142F9D944983B19A5C42053282E1FD0A9DCDB9D4B68D4B20E4C272E487
E9D0D71B2B06D74B7A0A9B3CAAA89039F2494B3B4406C2A477CBD1EF75B73BAD
6F0105CF821C0B3CDBFB19FE2D0349FB9596AB501B1C5C9B833F41DA40D17653
B80730495803061FE196AB9E3309C0ED73E498CD7FBCAC60BA7227D5A1C4B1A0
169DC16C12CD2A46F5111DA9D83893DDE7A8B1EA14731D39179C3D416E5E034E
36D9C57F088EFA53447855EF9417CD0BB47A64D3316866094259416F609C27A9
147FA8C3733144A20824833C495990AEF8AA8DAF25D25A7B5F817D6C9F052D6C
66D3FA6D4B2760AABEC9A5970E3A429C29D7082E3976B95DE622EC94BAFAE52F
670153C12D459B19603AA092232EF5F19E1CD5D3D94BFF471B4C5A48B059E1D0
F96A9307BF3FAEF5FC449CE0295FF343E0012CE7A63DB64867DAC6F0363AD984
C693904B70C00D95E1F9526A1E7935C24ADE03423FD0BB04ED3ED11A07C6AC01
A0C392E886DA9D4EC955073B1B02DAC949179FC788FB38DDE244EFF52495B076
9B95B362FACF14C4C822553CA82F64F2D03FA70C53F80564C1AA72BD95C83EB8
C2158E8CF2DC1FB9F3E0AD713C4D7FADA0AF6559E653F9F2B3EA83A1F0E6B728
F26F2909184ABEC0D139E3126B24C5E3561BDFF89136385827B7980C2FE0ACB1
C476C009DC6BA2B619CC53C1F03C57FD98E1AF689A22DF10E76328A2120EEB29
9C276199E8B6756BBF35C9B591362ACD27C72DBB13E8DCA0604E134B4A8A4D2A
CA49DD202041672E20F039456CC298540C144147C33FE0C9318B5F7F57DC9B82
9C70DA4BA7FD0E520741E02C1B162F64BFEE1989A09F9F9F753EE8A1A5944F2F
414D6447F9E8E6F671FD86D057AC1F8E4110CC19F7B430E7A74037DDF23A6222
51E57BAFE12AFE5FED4E2A045971D213CDC2DB3621FE6CDAFEE3D3B22EE0F076
06DA710885C3BEE0FCA40901142B171E1FED254926859634E33BAC75DC4AA0C9
6E6DF7A1DFA830FB16C81BC1636D6B4D6D280B4B84778FFA7DC977146C4884BB
74EB11E606954B3A36E32E7D4C8766EB4F2B77B6CE5CACA1C98CC87E8404F412
56B3DF22C3C0E1650A1639CBFE5C10268E28689F5468F6EC80E31E0B0351777B
DEF8154077BF0646F8B3F94876E0EBDC2032CCBF448F92E9EB110E133A675B24
F5550CD8331AAB4410E287D49B8C8BD6E9CFC3307D5E836923450D665368D782
1779CC84029922144BB3BE8DCDA5CEB0E5E7BD52292E6028414C7FCAEA0A7E62
E4DFD5645313CBA4AB73AACADC529A2B37845CADC5D1C00E25927E85246D1EFF
A358EE448BBB24E1B44CE0BB474DFA01B0F4CC1A7D368B16ADF045E0AF3C46E2
761BE8C5B6C5520C5A2786C8A12789A86A7F9DDE753299503D72EDA0CB544358
03C49A08AADED39EF42856D970C83192E4F2484E3D5A8544F67603A1E99FB7F0
B6AA55864BFE1F0728E73E99839E29E9810A4C29CE6A5F836FAFF71E84D35DD3
BFC0C0074221BCB33C0D58B395CADB102CBDC87BBA4334E11BA9A74CDEE023FE
A051AEFEE5DCB52CF065EE27CA86731993B581D3DE3CD424E81DD6826084499A
E906E6777D42E24D625FA09D2DE49226CD887D34B4AC5B5FCF3A211021A1D92D
768DF7B22322DA264D63AEB0594FBD38292B8DCF8CF430A749D8D6D4C66932A3
7DF61D18564D2704D132545089856E54B6BDCC29C4F57036E8363B33932218C4
955BC33EB7543C7F879EF0D8AF161D0E0DE76F7DA05FE11A43ECB11D072C1C3C
0B20AE01A39FB67EF1BB9BD903F4D86B9770C52BF11486FF59A27E3464930808
68F56A02E438943C34790C299303EAD4F6926C627EDB9D78998BDCDD3E3B616D
6ABCF6BDD2864265DD1CB79CDA2D56284629F1EC2D34AAE97800B84CF16DAFE5
2C7D5D0787D800C3C6217C1A9A8FFD7A7CFB841F5320E1DC78C0B20675C5C56A
101BB47F5D679F771543C01792F8DCB4696E55AA2E2D4446336D12468BCA480D
564D4210E899F2E3D489863DED58B2DA34A6A88B3896B8139F39A44914B99CFF
3B4AE177D03312BCD5DBBCE3DAA1724AB95C20F756EA3B0F4876D900471D6F74
D12C7A7F6ED118C8BA35CA6A8CB8F15F9144E36E456648D754560459B7CEC64F
0254FC7FB6D35742A408FA0B028A1A87B02D0F1FA772EEE6EC7F3B3E52F66621
1E0B005AA8F2417E70CDAED2B846A96DCA0443F9D6884C91CB91B27FECC79BB7
6AF053283E77936077273568023D36ED992DB4F982DC55B5756CBD3E210A0544
33F306A2B95E86A840891DAB443CC2E492E2DC0FAD4B2888979050331045AC5B
60B3BBA3948AD79B321162D2C2C599F984016D0C620497804357269F7E0FCA98
4F7949B05FD385AFF871CB571895B77CDE35A67751E922FC318CB05F5C32363E
832F4658524B0071B5582DB34872C321F5D6A82C3B0AF5315275612949369F96
8009CFC06BE214032A18AC2E9995F5ED5EA0F580BF0C0E015D2F2940ED5CFDB9
FAD3DECA045F663A3C778DD0CEBC37872E3BE250115A0D5B97AC91BA086BEAB1
AEBB2DD6FFB61489BE0EDD15F2629D352D886FCBDD75C616ACA08F7F2B10AA0E
3D8547608FB7204E32C86968D17404F880F97E3E0D97E46E70E7AA4D29E22100
0C17941474D1D9FB8D329620D47DDCCD6F2892E2B95980235B120D6800FA73D9
78E23A228AAE81063906742D7FB56041DCECA38D27B2A759964A07ABB95735F1
C38247293323AA2D6B3E3EBC8CFC7EB1EFA95E3D1612F75FC35A3A74FDF91A0D
2996CD5E3EF84892BA9FBDB632356A542F9D2FC04C095CF713E6FF386EFCE82F
F378419EA1513313423E1C510D4DA06E72F4BAE588ED330CB3D8D067A1408BF8
EA9ACE924DCE47858CC153586456BFCAF75CACA8C784EAC61FC883AF85C0DC4E
069CD42937D7FDF0BEC708039CFE98BF563DE117F52AD342FD6574025D28A2DD
7BCF882E9BC785F8FEF8F5FCB729AD850886435E6999F605B35E58240DD4487A
8A0194395A3595C7C3C6B2431EC43F787FED70B0431D35DBD77022C5B15C09B0
13F448ED78EF75B3A436BDE5E426411D44508D578234BDC461D8F78E6D002A07
98629A1A9794F97602A69B85F86AEC6253DA395A55DED9117BC7564DD6544595
D1EA952901FDD537C1B1EF54E133B52E168F295C1CE0B5E19A665BEA628E5C36
1F4CA0CB8AB85491F5C6DA1BF602A2FB59F293CFEAD3E55F65BF2FD59E7F1AAC
B6BCEED9171CD817476967E255F808AD2827299305DD002F50F36A89F0400BFA
C3A533E44F41CA433CBFF264F2F8A60EA6030C5200375455834F3B0AB9D7BE95
E6D4243B15B7684D7B507CDB27EA8A147257AA11AB6B57E47471370D2195B074
5F3CF14F0FF5CC2B737C0219CCBA736821484AC6FEA20438F0184647BFEAD3CD
ABFB71287C18CC525EC8574B3F295C71F79231F93CFF3D70D84073DCA0C72047
48B39BBE76D3AA4F76FADA81DA0E311EB5B4BDCC1765EEE3C2BCF46FBA30A15F
333407CDD04F5BDD894709C9A2FA778269D393716E6A716B2838AA60A377503D
7C3E65BDBC4DC3C08D1995FCD3C0C34A2B4426279861EE730CCEA194C1A0E882
81C2C263BA8154A81108ACE6C414EC5516A549FC78BEE42E887A2E74DAF2E9CF
7D23CE3F199B1E26D8BFE42312D8C323E5C8AE87480B1244D999AE75D5B192B5
3BF3E745C7C96F9BF0C873A2CAD29079FFBD66123707EEB9D50B6B21F43E9D0D
D75DBBECE3D63C883ECD89B392977FAE554471F8B2F0F9D6703F3AB7794878CF
B5920C4F3EC7E4474E19259023F4E550AB69AFC01FC47753244B28B1A27E3521
C498D3E216ED5FB7B1D37BA13752B6C9E6B24B64441F594DBEB12CAB8A5E0EF0
CFB345DD4F897FE00F779EC1A895514D638A6886D5EA7275E88CD1B0AC017184
6B7570803990ADA4961A1D9DC4BC468BDCD6D69D3CEC7BFE78CF796CCC1C77F9
65D055682610FE7D42CE55774D66B24CC683127461F07C303E6DD9FD89ED141E
E3F0CA9FF81324AC2C67F0616B555C99E2DA90173585CD7055772662FA12A6C5
282DBE9B63D9691D40A8A3F21ADBEE7A4B56ADF78A16904CF3A7977247693D97
EE62D2874F15F2B199D20A171D75B60B2538A9F3CD0D92DF99C134A3858B229A
6B66197E4191D2401BCB1AB3C75C1758CA50D420016FBB3A2D108F16FCBDF673
4EC628DD8768329647EF575F9FD4EA6464FDB10C9DF64D9BD60BBF3475F1BD5B
730CFEB32246F16C0A1733EA8A1787F13556C213E429C4070AF59EBD9EC9AB80
E549E64494F260367CEB8C4D06F182A3DA26A75E92778BC6C80681CF769819DE
3DE16651F3AD7E4997453F864EDCAB9064C777E2B2B1896645173F90D4880621
9B7DB3ACF4427FC7D6C640672801A452C3923C6EBA0DA27F8DF4AF8726A8B33C
EA2338770A3620A6D2192525F31B31056980245EFFDAF624356023979F5B8096
042D18A2DA41FBA430B166CC5FBE8225CB7D118EEA0450293963C1B664538F41
782D7E93AD542AB9D6435A44BFDF588DF93B6925E3AB6F787EF495FF435C5941
76C4D1C45DF168D97A5D7C83CE622967C86E630C5024FA1F7C054BE0B599BBDC
451FD03814C502CA9940A652C24E63E9B82996DD34B9DFE7B1F79E6B35B03A2F
9F77FCB6392799544ADB1C1A0D7F81097E14E0578F16763DE888102BF51A4061
EA1C4AF256C5455220B5752A3CFE81BB53D49B5CD8F9D2B1E8F2C1B2E337C6F0
710E00AEACF4B3D36D0CC8BC90E0CD91EFA62FCE0B991E853518820B4E7C5D00
7626E9D2EFFD000649B99D72CDE9C91A688D44F5F262880D6A11F2D202F85672
483989D94AB806E96E4BE861A6F992AEF5FABB3982EF4862003AFC9EC243CDD8
6D4B51CEC1232558BE93CFD56B480A02418D5B313EAB1F7F3734E77EF9DF36E7
380620F15DC8C8F041825ABD849980EBC6E9990B1B5FBB39124B0EFFC96C2560
84D6DA1A0FC42410016EDE2DD3774D9030242191493070B9992650A7AA260565
1A5DBE20161FAE467B881AAB32E9A11CDC2D508DA4121E2EEACF5B12C01E7851
D83FCAA0539F66406401FDDCEE183228663F7801E6320B21C263CB5A10504C99
EDF24A372F2B1C5CF64686150B4055420D410023C3E8BAF572925ADBD430E47D
081800F260AFC20EAFFF94806920ACE3FA96FFDCF562DF99FF305D28BD8071C9
7999F3E665AA573E6EB9881D0B12D55859CD17EB731CB63B3B143C7592F27350
67D8C0F31C451FD10284A8F1B3225511FEBE1F16541BE680B9C44A2A00554667
CFAF08AAFA62BF7EE36089B9482A7BE501D97F5A331AF6407787EDF78E191893
0494A42EE60D88BE9F1ACA6688039F6AF6639142394B5546A124BEB60E1DE59A
A94961A548C96A0A1934AB344B19FDE624793F04D7C203981678592DDC506BB9
1BC4CC20850F9E1A2813C71472DD4D68AC7ADEBDAFF49D7C38CCBE4B84B9445D
EB411F73DFC16F8386E6F6D8B55C6971F31A72442EB3517AF6EF27125F0BD123
2C24B232F3AF83E8680C42983B44D51494B6C9C0E81FA3E31382EB2FA5E5B3F4
E85CD2A35665259A4402AA48C853B83734D159522BB6E8A5E347A760B51AD508
F47B1A6CD3C58004805E2F6077163E7333B84EA8656EA741D0C28280BC0F52E6
DC9E3D10B32A8391608FEA57B04515626C45D64AC540AA7016531CEFA47D41D3
1A8E4BD7DCCEF17D320FB033E80BD0F836B03E5F9FB0254378BA299516FE8E2C
7178D8A8EC36D00AE1EA880EA3FCF003077FA172B7E7B2DA2986150DC07CE926
AB1BF388F5697AAB47921C9C43B468FC262D29CC44B180C6D514872A3E952608
4A1E96120DC0C2CA6EF3AB8D9E3637D433376EDD4B473298A6F4A970305EEA10
33441DA0BD3DFE1534640AFD502DF759BB62D82F19A6A77D5D31434A09C839DB
F314E93CCD9B04D039DDAA25EBF3F0BB590C875CEB8E971AD71FFB06FD2C09C6
4CFD9D1DFF29C0C6178645B068657C51B28EE9EF802D1ADD21E0F0981069FC5B
3C2167F414393C3166F5CDA1466EAB1651516BF53316B3AADE212EF4A4148587
005BC065FBECC4F44C3C1E9DE03E7B0711E623D6D858AFFCCD43C82E7B56048D
257F22B3D1114F357C7895725869BD25B2DB6EC9DDF7B7E32B7F9E0C9E9896C7
6649D0A462A103DB7C65046CFDE494B8FEC24C4597589DDE579B60444EAF95D0
ADDD9785408DF04F04C9A17D0439ECA6B49A6E98ECDB6ED6F0CF5A312852770D
AB7DBAA43B1C8EC71CB8627476F03C8EDF660FA98EAF74A87B9A6C490F925275
EE6661C4DE759B67ACC7621E202003469068A5BD82C5016F0C76044CBFEDC3A0
C00AF6E3E66E8E9A390DB038B27112BC5501A0AEAE58D3025E5398F87ED22B0E
B9A7A92A1DCD6681570E3164EB4E2CC68ED8F0C6955211EBB8424FE656A85AF6
5D50AFD09BEFFA3258B16AE5D3DB4C533BCAAF8976CD03327EB7B12D0A0D15B8
7191FF848C6FF45526E8D3454F199E8163F97B51DE23E0123050A47EBE4DD5C1
A4A740CE1CF340BF08021FC4FE83B1A6B865510896B0133C9D9C98E813E0B142
0279770F338A531A7A874DFB11A5F1CA109CE8784A5B2BDFB174C0287AD45948
B2225F0183BD481A526F5680F6A67FFB2976EFAF5381161659ACC94C2739E423
290FF87FAEEF8AE939DD00EB511CA34A70D944561F1DEB1CA2969B2921D44F13
761959249E10508177B1FF8B21E21EA2810EB152C0727DFE340139F3D874DE4D
10E363B15E239ABCD0FDEAAEBB5289568D37943CFE6B7DE09DD4E823F2BCB383
76ABA7407CC293D890A2BD0ED6CB619DD55DA7048B58FBC1802B0C648C191F49
B0445E4D9172E115DFE5D7DE9EB00ED82509E3729E878F186171CDB17A20147F
9544BB71AD967C4B8437470E4D020FC6E8677252412C900F8EEE4A82642D3006
7D42CE88A5A5C7792D8FD4B3805D48E87054CE92EDAD3E4E503B07EC3DF25243
5269F4E8DAB9DECBEAC369D71E76447BC024B5BE29762D03DFB32DB77E1DA2E2
F92EB1890FE6BB060A0F1F92E39DA176DA59B0240FC0E7C02D0BF476D768D438
A2C24EEF51FD460941BA40646585044FF7C081DE0DB753CD38FF7A6AEF112861
D3ADD4E922057E060D592492534DA6ECE3EBEB91D039B84C44166676E96CC45D
40CFEC0BABA1D086F7C0CD7E79B6D697D9F3685AD4CF39B4F6EF7E487EC9E99C
FF820DE3C9364C6FD785539AC64CC03A53C7D8E3C246E61B512DB7C881BC0BF4
51E5FAB3402861C05D34698126AA71F35135D73E51E9F06091E9837DBCBF1EA6
92F12FE35E1043197BF63EFC21EFC73EE4357A42157524D67F8F00A7D7613AA7
C519BCE19BFA32DA93F792DBAE7F0CB284179E82B79A41FA0302CA8D8025EA87
3936EB693CAF05AF7049C7BCC72CAFAED1EB81A219C74349D04F6367E04C3CBB
B7953F64AAB0B0C8FE29500285533B660838A744C505C324413CC9AA021A2974
4185A795B94414A7B3B8C176ABD527ED3EADA80F1E9FA1E349FE9785FF0A19C0
75EA1926A22A207657951139BF22E71FD5FBA5684EEA18DD0DDCD474C35CCEDE
F16C8D4D46F5C81F10392A44BD121F030DE2F2AC2B228BF8D312E31240D571A0
BDCF87589E2AA88A2A60A9C6F1788357A80AB455AAF87976242928BB40948C30
2CA07170F0C02A9CF135FBF1B7390B831481560AD95A83246B63E4E5B8C7D552
FBC771FD1CE6C57902B7CE4129BD4DB9FDD8C3B996C4E78E59961827750F0B7D
8C5F4D3CF00E04542DE83914A30B2740448FBB029DFBFD71573581076879890D
0CB5E3795EC4B6E52A7491F85D6898012762532640200EB48B707EDED071F8FE
37527B244932BCD87E29AAA32171523480B21ADA2DE818BDEDA3D741907D58A3
D4D164DD8BF7D7541264844F6FEEDAC0F7B8B386DA7D58CDBE50701B87752564
28028339F6091BFEAC9181A6C434512FEA05FCA96E5B723210D0DC75FDFAD81A
A210A15D1FA67245800DD13C04021FC9A7DD9A5615D1800A480A588178B036AC
8106A90A76EC3CC439F65980BBF08129FC9E798D02102F63C6B2FDEACA5A433E
AA684798E24F49EE478851762DBCD42B3E375DC205CD8FFD81E90BBF30579F13
EA06A3699DFE24E4E17B87024BB6B520B3FF60907094B45EDA06B2B3B2D63FDF
71131FFF47E4533DA66CD991640317676F0B4E26E89E6BA8CDE849B5131E1930
7559490FD9016E45C261D93DF47B1310556883CEC750C615EDCBCCDF3FA0B31F
34CAE2D347A1E93586EB95FDD3D1DB7157B21B7A9DD8913DDE9F3B04019CE0D7
24C1F6521925BD4FDBAC36DB8E02835E748597CD52F41C780BAD637C4D7580CF
C0320FF03F5CDC3DB656367432F670E1EA6757CE2D6C995F427B31F18A672D31
DA3CFAA35DB22ADE1210277ADD20804B763FDE9614BDB2EDFD18C10D3E6FADA2
5CCBE7F7924AFEC7130DE52A490DD550A27325171953B66FF7FC11A7338F3809
27E5F20F65E61032E53BD00CF49E0C42221FD0ECA5100F4FEE2DF1F839B2A5D9
00EC8D437D7E968A4CE41B89961BBB7F30C807B959F9270F7CC39CEC484577AC
6B2EE3FF223DB92A482534A58D7FC6B399DF8584D5DB0E5C30E5A42DB22DD8E1
3A29F907AA15E2CAA936824217A1FA558FEFF0485CAF90627DC9C0AE474DAE89
0620BF249A218DE01B8B920F09E9FA8EE38CB1CF69858CFD235685341F0D95B2
7ECA06AEA1C215927B9B509F7B8ED0F3447145128EBAF2B73398289AC6CC9AE7
912CD3F2EAB2010152363BF9CE7D96355721BD5810723ED1EAF9B88AD6A9CCB5
F6F72FC0614C2512DDD4832204654A5104DA365956B096C1DF51E9B76BE1D020
1A063BE99A9F49C1D826BAC0C51F85E9721656D1E213B2A0E953A7A13A83BE2D
5EDA062C703A602B015AA1A2A42329671BBE991BC5C9FE203C53FEC5DDD30813
11268DCD5414100391320EACE2C91E59F76B366D23BEFCB709973896C9DC1797
D32FAAAEBFEE0F7C9E92D28D239FCDDAA906BA30A1CBFB933D2C0C9B6E55C214
5BF59693AD2B57A35AA33B5B843E8F180BDF49E09114480A8E3EEE44C3C850DD
4BBCC18133BACD0F4D746442D9CB44FB778A0797EE91E4A4F305ACD6B16C3666
46D363A4BF1EA359A515B2D8AC508773B3CFCC9B42130B9186E34D1710C0179F
7B3E02A3D070D6A1FD61457239A76EF8E7932718E6AF3A6356603A8642D8BBA6
E81ADB5CEBDABEAB56BC495DDF101FB8E64DF04DC14EDD811B10AEC59FEF1AB1
D3E5EBFA81DD9C1A8838AD07317657F5FEC5F495DFB3741E9E293FA40BFCE7B5
EA272B4DDAC2A26AFEB8905E68EE1EFE2B0B8A550B42E4BDA45EC9F32AD432F1
62BCEF0C0112BEF34533C9C6E82870BDCACE59A4FA50B834CFB8ABCE925D9908
FEEDEE304DB9D1EA8A652F94925B112B0D2F53BAC2BFCFDB3C418AE9FFF3F592
BB13EF379CB5BA9360822CA770FE5EC7D76CE6A7A490C010EF2533CFB4B3E68B
9516C4C99F5D74A9DE292F9C4E2C940F18B626D4A682DD7118F98AFEBC1391A9
1F6A175017414524925A70ED96BE379F746087DF9E0BD3C00A074323EBC4862E
5F8CAEC9D24BE2E75A51B350D466B4D20EE1B111F58A9A7EF42F57FE909203E1
2CED6198C1E8C23DBCA777AC4DD0F7D9F7895147CD646223EF5D1543EECBDCA1
54A428AEF0BCEB594F90A53D88C875A3ECEDD7775DFDE6FC8203F851BF811A5D
A95A5034F56A796445EC799F0B8D4D3415222AE59EB68AF17D332DB4097FEFE4
7693DA99001EE94C78F04941FFE28D04E89C45507BE1B5B14A42E4C17E7E0CAC
FCD114B0C70697B92E651BB576C38CA97A8F710939C0AC1EF56BB1A0E289C7A9
1A7D45C999FEE1A786CE64B207CDD8567591419E8DD0EDE51C88B12462BEEDCC
A27AFB40595396ADF8059823BD2AB80B4AF5F18066259191A1A1147D37E736A9
6031B8D11FEDD10E3F4E2CBB56DA0001A1ED0F5AB8F1CD712EC46352ED1B9767
06A6AE560AD6A82C3B09CBB7CDE19E8B67B5DC829278B1120A3A5D37A68E599A
3E032D157087ACA414D2814717BC297FF21649EFA534EDF3B71BEC0187D666FE
6E2B211C3BE191D526E21F9E819BB0FFFF2646E94179D30EBDF73A25B991A8B7
2030A9A99B4E66C8E5A03D5F1D98DE47AB51DD77014C292316BEA0113472B8A6
F11886174A37BB8BC122F8F3D7E5E35B8661E7B3514429FF1591E4D18BF9B3F3
E0842FD86ED7BF3A248BC9EF074637CB07B405BC6D7D43475626A577BBF10450
55F162A009CBF703FD54101BB80A110B74DA8B93ABA65E2850482F26B1DB6D70
B1A52B91FB3D12F6BA1E216D1A74EF9C325E5820D3C9EF826C2CABEFDB7D2D12
BC8A17FE3C89841584D5BF8D58CE5E34B90E3B1FEFC69766224D83461F0530CE
E3B17B32722B35C8F21CDD66659FD7F848C2A7E0DC4D69B6793520439F2B702C
BE9E252A4A13C1842F8BEBDA94A37CC16F07D89E90D8AB3EE576DA9DF5499B89
CCF9FBE8251B5C7BA4C53EF2DD63310C27FEDB8664215211AE19D76D4065A2A8
56D76B3DA2DEEE139D06D45DF9C35CDF69EF9BC98EC379D64B10798A1CE87434
BDC79A29F57BA7F9F30FA675742A1B2D263667156AF5755EDE0212862CEC0BED
D6CEF76C08F15F973A5281B1EF9C63EB82E5162DC70CD52CB3DF40C829F7095A
78C63EF72295813EEFE0C12ECFC9A092186CD60B16C94CF8AC326817CC906885
AB059489549509E4DF37F7B8FD8B789AEFE644F929E005007E343B10B76787E4
A2F56EEF9FB845A2F7E97795A15160D54BC123330E4FA7E65759489A8C1A520E
35CC383CE5CFAFD042904CB71AC037AECD69BE9AD7B87EC13DF7B667BE31B3EA
E57C27B1DAB7F691529194054B3709508F2E2EB2636DF51B3F92F4E3681F40F1
FE8680698250F9CB0A6F8C0E5C575727665665C88AD38E13EB02AC3AE5CE5BEE
C54063AFD716088B6E8FE0CD1702C2C331273578FCBBFAD42B86273D30CE80C4
24CB288CBB7155E850C59CA473607978FC37793E289C5BF323A163980518F13F
2733CEA34DB3AF1B7E5A1A273E279DAD980D7E754A30250F972C7D7C4340C809
7445265D1A8ACA31347AE170C4ECC63492962B685FF85C0A9A74FA997E6C091D
EE5EFECC8B177574C626D3CD448697ED68B35ABBA142746A695B80DFE83C2BA4
1390E6D2ECFDB2238854DC1C2D1749DC634574FE22DF1CBF1A4293CDF3A2CE06
8892765E96D3BB3D354DED033C01496EEC3691240B7BE921D1F67914D94A4AC4
645AEAD16CBB2F2F8BED9C7AD8647A15B1DAD182F6155F34FDD9BB4E92D54388
CF709DE6BBBA287373EDBB248FD8EB9C321835BEB2F17B2EE77AA6620FE319A7
2766E93C235F4E9313D01B74DE04DA7417CCD768E5312A380E5EF5098DF5F4AC
22CFDBCEC84F40FBD93A69250D6E633461C090498AA706CFF8E140BA63A35E80
A50E700B9A05B720B0B6365F1CAA841028DCD2ACDFFBB151FC20F914C6170219
E248B328CB54EFDA16BCA05F4EDB04217D25073BF52A79FE200D8020EED796C9
A68304058E83EEA341ACB628F3C6FFB8E5046C552C909431AACCECB4DAE6B652
E90AD25A5DF3E09571553B455B33BF56AE6BA1143FB308188BDFDA900480BD68
9CA4F326D85EEE2E3A804CC3FE03C7D9738E03D9B5DE922234C3AB8B2DCC9B37
69E8CCDC7BC2A8FBEAC4A8017A6E7BDE6BE19ECA64E2419840C2E6E1EF0FCFB0
208C7A0645DC66CD18EE7BDA50F2333DFCF3D97A98FCA949B1DA71AB27885183
D964E75D6548E39FA117B079C8302B574F7897D9F07AC76B476817F1B1B8EA03
80FFD693EC32A37BE8C392366A79C56FDC5D794A9BEAC101935A00632EBD9BF2
F6B5B71F146A8C9D3BE19AA46784F2788D084443B32230D2F4B074310C9E81D5
8583119DE448F09A7563E18B2880411989EB86684AE1E58DF73651579B955E67
EBABD04C98B77EAE240D4F90FA9889C73B6640106CB727A0C18DA8A43ADBDBCD
7FC5FC5621042F5BB3C70680000E5E90DC6A9988DCCA5CE767A5A523773AA06D
47215E0E21BB128D2E19D1CFC086FE09FE62E886BE8DD13F41ACF3C93A194DCE
B643B0E28F78CA9EBC2799D67037C4E53BBCAB7838E7FAC62B8EFB0756659FD2
460A6D150560B3B5FAD37CB927B3C13241B051F4AEBE3953763F5E11E71D174D
7C0FED7781C91FB3279905D6F08CBDFCEE0CF87A8D831C4B9A0E56BC69D2937E
58B35A775ABA553A65DD7C3C449EBDEDEAD5460074555ACA3D9A067AAB86DA36
6747176D5644333F9B4BCB822844076B55DCCCC40F513B0DD0644FCAAB8B6EC4
4292E10449AB2DD1AC489468C86E0147EC9A052E55663F8329B09F6428B9BA30
E7B1CEC08C960C4AFE69F39BA06CC105BCCF12CF0EAA77A3BF23AB150C0F449A
FF3C960E6FB6F2C7018F3E01841E9A6B7B4DFCCA4CD55DFFC8607E86B2A61579
4B78307D3B01140164D1B4098D6E9BC79D4AB26B43F787A67CD5246A5CC77FC5
6DD3B93CFF98F7F1F43ECE2CB7D145EBE892D441FC0DB1715CB50F29ECECF9E0
F5BCDD9EF5019149FA9809EF72BE583F2BA22E3685032E381EB9B499A17A7883
D167AFDB93DA27AF332A04602E1AF858A404D5A1ED8B4673785DFB5FBCA100E6
B6233B4C8BD73783FB0323F94832AD0FEB39646EF57A63532E1E9EB36A964212
28153567848751C876CFBFD5AE7E4819F6CDA77CDFBE9D539CF7A98B23F120CF
68A8418FC841008292750A37FB7C645EFA7D8867ED96398049C84B9FE6870927
E3286153798217B2F7AC5AE2F2D3EF075DF53BFBFFAD4B8E8F7A80ABC0FC912F
8F155EFD1E69A52FBE8542F1174BB23054ED0110DCB03CA519B66CA3C0250056
C2065FFBAA9FCDE5A099CA2D9E898DBF222C9B7EB96D4B682BE00631C1A48641
0EB4D11030A010A59DFFEF914875AD7C4ADD867C53AACE3026AF6DE7179AC7F2
402A2617BE0F6F48E0889764A4DABD4DFFB9BAEDA3729B8591DD84E19834BFF2
859D8807BAEA87FC7EB4E13EA747F202A576C0E7B249263A4AAC26052CD7FC45
697DBD2B349CF34357FE6058F178F8F6047A0A9800BB91921FE40F2761664DC1
62CDF16D7D64FF4D3CE3D7907C8BFFFA68B5472252582783B39DE74B9105CC38
A5E21A416341F85E5356D0372326792E50206313C87B154AEC8507F3A2A6E893
8C677056B8546F704C1477D36268FFF4C00C1E197DD4BA7F672BC191CB6B909B
50004F456D925865CF0FDCD0CB0D5516F615FE6CB0C197597B9A3AFAA6D9BF47
E9B52F28CC84AE092A9C03E35F1173C971F8F9E515A7600EF218C55166786623
C79CBD36BB69C8E4378C77776940A0C89C8B45515EB77BA88F357A2E5D7ABF16
AC9819D602EF333E81D66F8FBF83610BC8D1E7F348E6DAC343430F52C0860486
D1046EAA26742F2E2CCD1843E206B1D138E48EBEC9CB205EDD918547A89BB5F7
91A035973DBE56316C5A91CB47E3B62AD07995F52C3C832A3A1AA8D6C27D1B64
3C2470DE5D1F185ED1C7EF5436888228FC6EC4D80B1206828897FDFA96A13500
B7397323A1B6461D0F26479DF262CD031E9A5532A19829C8A6EF0195068837EC
61E4211BD94748457F645BEF634032BE5F0F6DBBA8EF0C08B7D400C6C23AD54F
D73040DAF415638DE5B83A16BEF3F8703A40BDB84308B9C34A61B893616A7A1A
851FF0A0162CF2E10C3ABF63D9C038156250F7E022E829FAAB47B05003861FA1
24559475C455135E860B3FA87237680B6AC808EFB8053C0C6F1023C6B4D4C8FB
CFD89578A16766FBA55A1BDA74A21952A33A6F5B1DBE1D7292DD98A72E82D940
2D2ED5D7623430E6D22CB3B3CCCBB7418E2F8181C9104B519F3CDBEB725D330E
3DCD04EDA57508267590190DD37A279E7E5246CBE4EF0C411EA6E81DA60CA732
4683C00A4956FCF67A7901E788ECFEC6E8D30F9CFED28B19217C1FF36A9044A0
B9EABA59D81313686823DA95F8C8B7ADE726C770B6DADEFE11145E53D2E17481
E5B15835902FEE8679FE1F19BB3C57E656C955E19966EBD0B812F99B65E0B306
721455A034F6FB36FE91CF21BF71A9FF857E07934CD74F475D7C8A45288CF2C8
F1D22E5288EDCABF448F92E9EB110E3D4D841DD5A0E81512B56853ED8000E810
F1BE05EB195005A65A0CB0A7CA8561400935925849B81189A613FCEF51E08E1B
1803C8692AB8BB487F945671A018BCDC3BBF55335090342D9A556B56635B2FC6
F33EBBD565889D1A65F18D596658F9163A07844D3E299BBBE9EE509374454654
E3AB7A02A38F9E752CF50E19C11EFFB2B4565B856212C67EA42E450C5083A78F
71C4C90AFAF8787E7A5846D0C451943B71D50C3F6B82D517628119B656985AB1
4CF8CB80AA7603318253AA6AE6784F7DCB1915CCE8C206CEB8E4D0F6817B08F0
159A168CE63F1C2D3E13B9979079C2BF812EE8DEFB9B7DFA2098423FB3B5F0D9
BF56F69B777EDE644A2F31D3020E4716FAD10604D0F705B91302A77A6CF95D16
8923E75C67FAD5D81C71669FFC082E74851F0A30F45191245654EEEC0C2AD5A1
5C4A67675A2DB642AD02E9DD8FFF26FAAD7752635CB47FB785C246E9EB9DB098
8A8082737B08C3B4E2DECEEAFAE5DCF3DB080BFB6ECED13B324ED51B2237748E
C92F88C02C5FC72D2DC7B550DC59BEFEFFC987F09334FEF14D90B0ACED8333E0
D9FAB5FB00F28D7848431D4309F6AF2C451323BC188B98AF8A3DAE771A2B618A
7B4D05F3AB9FE13CCE299ED26ED0DC4851CA85FC2490C22DFC774B04489E6977
F005D897D94425BC8FE890595557CC5540C2E9EE9F9505FAA51515BE6BDF5E10
D899F2428EE7B16BACA57573F6A96EC33021F62287BDC4CDA0CC3BD6EAC8FFE1
581F63DDE33C87392EA0237A8682C911FC677C62931B1D1FC91C70889B6398B5
3F4BC04590ADB02C7BE63E04F8DB2D10DF957ABF610EA0571A31BC3D9ABC91BF
580D076C5A9DE423415362AFE49EA982C54FB8EAFBAF6FB37EDB3D4EC63D5F43
27A2A6878672178003AEDB256C24D3762954C9CE0BFA9B8A8C935F5F5A5DB287
A4BCFB0B711A7715E27A9054A352075C4309EEC6F1527AB72A12B984B4D9BD26
79E2DE70E23CB2043EB5CEEA1B6F9E5EEE5E3625FF08F4FD31BA8F6FD313B749
4CCBC852583143D76C0871C36D25BAA7DF3FEC619FFCC2ED6E663CF408780FE2
0F1E6AF71D4B8F12D4392292C91BA3B68F108488A668DFC537DBA735961233AB
17FCC9EF73C7781C623BCE7CBFB2F201EBD316004081095589580A8ECD3CBF11
C9E190586E56EBF1CD280983519DA95A572C4351C6EF3869F60026EB62C30731
E2045B7882128D1F41B77A681E2F3620D1B561DF10E862E19E6A2DDCF143795E
2A0F0A3069304230508E2E17B8C7A4911C568067E36EE9A617B9E7A6CE89EA7C
92E0A0B98CFEB20A02E3BCACD98410D99AE017C73274CAFE48104C322503F37A
5A2C58FDB7F3EEC484162B759991449539923152ABD2827B71E7D1EB27C9E953
F76634361A8B6E638D766BCC80870F8D9965004384AB52214962C1A43B767886
A7C6CF842705937160003B0596BE746616F3242C0310CF1CE28F0FD53194E2CC
26E8D651FA1808309620F0B1A4F2CEE3BD80A468C0F833BC8F51BA6AAD6E334B
5AF767FB3188008C892A7C735CADE3A541F12A62DA6C089C7763EB890B543F66
8A1C36B3FEB207F57DD34B45A693E4E6A99A9603AD1255A180E60126DDC9E796
40EEFC4BEF7E4312CEE0732325CC32DD7B1C0F5C585F37BEC6485E8FE7739E4B
C645FE753DCB4FFE4C53EF2BC8F7E944CD8AACF7BB171031E8BD83A1AC6F2E5F
14EDD7E9B8398316C082D928151AECCC765F244691C073F097EEA3E6EE242394
66153D3C5AF0EFD993F9D74733E5A5F54E3FD04E1D8DF743A70AA9396CF96443
69B4EE713AEFE592BF8EBA9070D94FBD0B2BC4321030752BF64C3BD3225BE378
DD608869C6B63A855790376159EAC473F8F71933A1249F78E12B1F19BFBE2B45
67FC22C9E3AD74E7B9BBE96C6B07A1ED9BAD291A3032F4198BBC3A821713586F
176E8BF88A2361314379C4273C5DE64AC31C7B04436F507639266F6567E340EE
9C60E78B2ACA3FEB6813F2160B505B96D28A4A661D88B625A8C4CABEB736CF04
6E302FF9BC6C41C487DE442EF5C436C8F59BC07D5A5851E19CD805B301031F25
3EC62370F2D30F431E9034065E6436A25897F479F6942F99345B074F6F45AD68
EAF4D2A564009D1A3D08DD5B0ADC9496ED0A8487D94347B4A0ACFECB969F08C3
C25AC89D9EBE54F925D8AE9FEB67457C8811BDC0A95D1A0D196A9C5BDC467629
F80A09F13826A9BF09C5854529D52485B2AED76117CA26949D3FE6F2C89C7129
6D1033D135EB61F97BEAD1845589D17BF9914FDB9C52AA87BE4E5BDA7E781CF4
F61986FBCB4966A3DB17A7686774926F030CA5F4CE174EAEE42DBA6A76A435FC
F82C6E9E25EC978B1C8AEF9D1D572DE5C3150FBE90E4EAD77221348B6FF7FE11
59C4313F16AD5CA6136733BAD986260AAC26F10D4B99DA90AEC31D6DF43276B3
7BC784DC6048CDA6487B9D3ED62494BFF433EFD233E46FE6CED7054011B12206
0F6BAD79EE952C7F930EB32F55F539A491ECA6D94263289F5FB13EACEB54AAA9
4FF72547FB2329CE8CCE30C5C110C81E7174C7AE33F70D0C1266534D702D72D0
FC1840C9E0C7D76B53B97167759698C27EBA9F3E4249165B8638E9BC9E16FE72
E9228D5F118DFEA258FCB0186F3F627448276FDD4A4EAC63075BA424E63A26B8
C34F62F41AC993AA7390D5E451DED6AD2AD2DC60B5017E8D50BCCEF91703B9ED
6D64A223E9375407BBD19CADFCEF8071B9F1BE8FA4EC2D98F4B311035036FD40
A3A91F2B7BAB70F5C43985FF5C27F09CE31503D351E24E449021AC00F20C4EAA
240E9B4F729597D1E6CD39A6061779AE0AF413557EE289ADC0B9844E685EF29B
E593C0E553A659D3C803FC737591CC7A97F68BC999FEF065C700FD61C1A67E44
070DBC63C33334EED94299A0BE7193494AB19B16F62BDA16B23D7D892ED8922E
61600DAB26C41B98FF68C12C273B220B253FB65E2A3D78ABD0FB7DA4F518B88F
6EB27B8F3716F5F27AA04A34D207A9708B2BE93E9642A5279CCCFA3BCDD161D4
34240D7272520D0908550A33ADE0407813CE16F637CE726E6B03BEED8B239BF7
688DEADC71BE9E4828C12E9FBAAD60CFD80131E1CA4BCB2EFB6E4E94D08712FA
4107716C1EE56E545D9C73E94720C27CA9AC60DE2B4CC42A259ED5B0FDD4992E
3B46EB492E0DBCCC2E96CED2B8F43806613BCABAB2D76DFD26D93F3C4E8E49B5
C9CF43473CBDC78BB14551079549D4FADD90BDC51EB990D70757F64685080422
847FB14E76806279CB10F7BE4E10F433FD10036D954EFC07E8F518F401C1D408
C675A705629D60C52AF4E09098213CBC1933CFA6EC1C39CC6A7EFF7408E4C1C8
3E271B5E26582014F1F3625FEA38E6734DFE7CD50BD6E28B85154378813A6BAA
4F7CF2CCCD2564C4AAB87B16A46DD647F2FBB83A6534AC808C5F02318ECE8077
7A5FA589168A56774EAA1FF1AE4FECFBFD0AA77C76D7469631F5E06F04608760
D111F446BD0C09082412C6023AA5F8DC5B26DCBAE9E4D5827B25160F711C1139
1AEBB5D29FC25231E3646690612A6C401974FBBB1138BBF531DC27A4C8CAEA48
498FD1639689E9026ED7DEE2D9236CF887E0412BABE5B53B57CFAE3A43E3F9F2
41C5890A1AD9DB1A3D7FDCBA6587FA9A3D8BC9FFCA638484C8B74CDFCC2F8545
12C515EEF3F79488FA4ED4A8BE5E37DA0BD84E3F57AE2464E7AAB54935E69002
8BE32C81E9B4E10819EA9128C9C8F2E8319F0F7B890AF74732AD51F64255637F
D209EC1C192A86761934FB970F7B1108737313B323B8F58D8FB1015683C071D3
DB8FDAB4D12C6D6D2AEBDFFF3FFDE9A155514A89D106DEF304C1E98A9084FB59
745719B82F9C9EB06552FA35CFF99FC95740E18D762579054B12AFB53D872247
B0F4DCECE27B0A42F883C85F4E67C23A4D68D723F959948D5008CCD6D0B0C95C
4EB44767251E60B0EBB219A2422AA9C7894D8512ED936F1E801B36A1E55745F9
932FF73382E253149355870A8F2EED287F6AA616FCDB9B534B21AA9B01FC2393
E4C21929C1A94F8AF113298AAEE4E1C704312516182F03287DD091B6EF6577F3
721618C1B671832B9065F502B19EE067A98B2A018F0D843140EC2F602F99F4E8
A352A32694F1478B005E4F93791B5E510CA19DB210339D08838D9E0C4930379F
F8EBF9991A18E0AD066B5A03E074294BDCAB0B5097D6F2F3D202F6E31EF557FD
FA2AE905B3200F16952D722D8FE2BDD797E8C5F61336CEFF2499796058A5F43C
244D6FC193DFD54BA07CF9A56400E7DB2A75AD4334FCB63E469BB116D50D3206
1E29105ABA001E634AFE0195AC2D3E0291CEFFB0AD389C0DAD31E57F32DBBB82
422B5A1D390073CD517D127BC4EFA371E3C685CE5AA050606FFE3B71E9BAB4A9
D0AA9CEEBC4A25099EBAA685B58966DCA960EC62E030A3319B083AF3FF0BAF2E
59BD89F1D42B70A9F9887377A69AD86E60E92F6401EAC92977E21232924E5E97
56C093F56166E39FD5F75E4A6FF889FC685B5354AD5C7A3BF83CD9DD6273E585
92394173DE908E461E22D95E9F024D12FEEB90874AA45495908382CCBB973982
5210A7150D73DEAE438FD72E90431E32C2F6F32BDB52066EFDA4C123919EF021
2393E1C890AE933AF60989D1449619769746134DAD277F912EB6013E1627D691
D29E7AE3CDC9EC7956FF6334AEE097502991F159499D7B6391F9B7F3D5D2AF3D
D050D4BB9276881CDE5DE94DEBD07C1269B1F55F95F7AE614D3C1BB2DECB4A99
AFDF9175BB814FC9EFDD9DA23C2B6EBE7DF335271BB59F6AF92316401107CB38
42C937FB8AAAA6B395FB015BB0543926AF5AB76492D1A41D6807B032542F5D30
A916B025CCCCD635849E8B499D685AB84B0CDABAF4C94E4461EDB0D828905FEC
64764D5888FDAE5DDB31E132491B72552F52889E66ACE8EA750CFB261F7B85C2
387AF6917F29C4FED76BA4ECC75383C436E25B1615499DE110FD1E8BCB9233EA
E0C27CEB9D4BE9614C627AF09EF4D99E58B0F8F026AD34C1288B7C80E320159A
6B561DE9C668A7CF1C824B1B9E112E43B1AB8504CCE1BD0D659529C9137B5C77
9D08A1987FB81EEBAB365C44190ED23BD43996AC42EB41C4A4B22B851D6AB244
183C2A8B91E9D4E44DDBC2622E167DB53EAD1714FD1A0222A32E80E0D8B947A5
96A22035136EB092BDE2AF96FBACE460BF5A9FBC233EE881D85E755BA4A1C2F6
78AD4E464BFBA24EEF343543AA94ABE5C96FA949A9243F90945AFC7013C5D51B
29C05A71361CDD9EFA30A08C23127D18708DF59FBF6BA7C704ACDB591EDAED6A
535812FA643275C9D6F665D9D6B115B79FE668F3089E17B653EC77894FCB6409
48004076F0A1959CEB3EE4A036D2C9FFC4E526442DAAF860004D873C75A08552
AA296E54673C2B35E033B4DB6091313D14CA076DA24D8D562F28B19535280E4F
96F0C1269C10F3BAD101CA38A74DE6208E502A16BD7E408B907E374D86F1567E
68645E7C5FBD36EC45BE8E7E0F428DFCDAE0A1A1E97E0EB2D233BA22E1DEE3A3
C69548A40466224CA3D7547BDDA0C96FA041F9222DAC1D34EA58EE87B17BB550
CDE602843FA4D38F6937E2130463DFEC7E9FD0F074F41320CF375F9DF1808E25
B200B4675D75AAEA72EF9877B4010460AF5A2488BAB59ABED1D315B6F75C90CC
AA3E49EBFDA09BD249EB080C896418CC8A6D23EBD0579803AB708A403E905F94
CECD886B8A77EDB6E5D62A23628DAF4763C1FBF32C425E2BB155877EB1AAACAE
6D231E966C983B5A5D7D70C7D4580A4625D963DDF285874B6375DBF88CED4A32
624B8A037DEF6C040604E010B990233478BF9E07BE98F775FF40CFB95982A678
5EFDCA904D541B6EBE3A67B6B62D469E6A2335D0B60EDE4C6AD1A4234E1DAB9F
D0F6903039327CC51FD89E1B60B0BDE064BE04E6B8A23E6A1866C67CB55216E1
6B3770AF7A4A2A663466F8B55C1D436E4978E51A1A983828CD7B9CF38BF66449
C2CD279A18701C8211378A10D79E435ECEE8F2944DDF43199AD2802CF6F1FA2F
FEA1066608C35CBC9966C564E165CDDF84DD568A4DE25EBC2E904467A3935C55
8458992FC2D2C04B2F245B83782D72AD4E7BC93BAFB7BA5743747C25371E4E11
DC3A9D91ADB415E64E117E91E5EA33991B1A04DA4AA21190301F7CBD6A756EB7
F41DE730DEC2189C5A5EB246E735FFA3B26F4F2BE0F04997A25E00B41B296D6A
5B0C1D7944DB2B2B827BC129CE5352F7EFD01B257FFA81F86B7C67C25E929860
4FA2D04580D324AF8954100FD5379CFE7FE5BBB04362252933CB814B18951D6E
2CD9A80D80E00D2064CA66E705EF13CCB430C3F09FFC6AAAFAECA5D588EF1F2C
37426AB335CCE2E1F929E0D681564659F28396929ECD90424C548B3C50DA7334
E31E8BAEF4793FF76D7A31269896D10F8733D19B8CB46412260ED4702C3FC8D2
65BD831878E5BBB396152C5400227C561C8F3C7BACEA8BCA4E625D19DCD92F7E
03823EEB54C3C6021391937CF245004B218DFE95D10EE389D350380E0B84A264
88597F329B606A66478D28330CB5491DBB5C9CC16F944BB666011D3C21C0E5C4
ACCDF9F42448D3263F59A42DF34A3411F6329DD094770C1A1B84CB7A8BD5C32C
D9193C20AA7FAC31FAFEE294794C05AB1C6BE1946AAD922CAB8BC1C1A5DBB43C
C6966B438A538510EC94A01BB96B7F858B25AFDCB8F2FB37F7A42EDD77BDB2BB
97E3D89EFB8D27EE5607B1B52D4D95E94566EB50224069FCFE9021D5D08EAD8F
477670266C4B16DAE30AE9D0106EC3F908AD71FC222CFB73B857CAF40F4FD191
DF5CB221D40831B878A0EBF7791C21163FD89E19F19DA2DF648F9361F9960D7C
64077CCFA2F01073CE40F96F3B61ECD90AE02D989135CBE177BB255107499B93
A2F6A59DF3A0E470489AA6722CE5D6863DFCCAAA71A8384DC728824EE995A770
15C4873E9F512B3E6D16149AB3C532E0EF2C2D6EB945FB190B2FCAE085CD4534
0EA3B6CC035AFD3F248D5F4B0CCEBC62F3438D7406607F774ABD8C943D10CF7E
72D0C7015382BBEC849FA105E27C5457550F2EFC7CA1EFE7F73305D97035874D
2B9A696D2102844B5BE674122B17BB170AFF6E51C11E81A20066D83EDCFD7044
A936E03D2A40A39504EB60A9FD58FCD98C262E03B8974416E963FF50A7FB7184
F1E3E926AB611ABE3D6C74C820FD93928148398AC38FB97EA3517F1C16881A19
A59442A9783F612C1B9866E8FEF364B36FE379FF38FF071FC619DA5B657AE4CA
FD299106D96DB27190A9AFDBCC06B8CAB1CFDFA97049173FEB5FB80BA645070F
66C6693FF4C2AA08EEE6DD39EB5D982944C0485C05B33175645AF67BD880A975
5A122D1F956069F2804E2A38530197479F5D9D623597F38F15C55B2FAB360177
662BBE1DE3BF367E8609B09BEA0584254D94BF1F4B54FC8BCE3B9F209F7A664C
124EE7D072287B06ECCB5FC28F895FFD80678BBB2F4ED4D091A9EC2B7E6C0613
08542A12AF1049E5FAD340DBE879857B6B39E7DCD91EE1E50C285C99B4E603AA
F51ED035B18E056AA7F2F6D7462294082605DE47330E543F903F2665492CA0B7
344AA2442F70F57DEEC40E71305F430019EB744698E7BBF7EE6F58E36E4687AD
8713091D65D3F9920F6571F18200A0B5F1AD0BD5FCE8A43E3ECDCC5AFCF5EB69
BCD4305D5B500944F2C2F1E6C117FBA7426FB54CEE93278EDC95124CE07CF0B5
27D14F008E8301E9600B6CFF1B20A866C5338ACE65FBC6F1925E860CACB68CF4
2EA5662DC8D6BEB52C33C1081B5D349771C2183D9B3FA1FC8AF33E66301BAC97
CDCB7B4F6C98E7DA99AAC2526F689CA396510E64A47136811A86B5F9CB60A2B2
B7D3A52C797C66750D047F617F7421347C35E2394B46EB62C66663E25BB5AC2E
28AA6C68FF6D80F5FCC9265D4D6EBDFE426777131A2A10C92815B24BC87F1CC5
6001D713F10308670C0058E7BD0BBAB97C56F2BE41695D5736CCD676B9F741A5
F7A6FC9E0C6967C8A3A6E507D9C822762EB978D0D24A03FAF641892C00E3AAD8
505E35C02CFF4CD259113000E7F0637BA1844BD03DAFBBEFF853BBC5C788CC54
0E9B1F71901EA7A6F4CABDAFB79E1BE76AB62BE648FD6B7CA758928E44D2E216
53C877A5B8023EECAE1B42B98EBF811C7AC85FB8D3AEFD5FA9D3BD94F38F0581
2BFA0C2C9655253FE726FC3F9C15E1103A068295EB26B6C1C4394D78DDED6E03
AF5A268DD43CEF6DF4284E3E17638B00884A46D4DF73841D151D135C9C1F5809
FD7BD3E89051B6CEFD984AEDDD990612F40D0060E937B694F26909D2344CF7CF
42B9C49B33D63BAE19F9EC61D9B25B64D347C4DFE95565E463D425C95AB8F062
75650EBFB4E0370A2A27073CFAC939FDF750FD70D14B5407138FC9CCF4C27901
B5330CFA95B5444B391D791D3BC5F63C8FFD9A496D0B01C00132861124F0BE7F
6470ACA0760075AF125D482B71D0F93FA91A660E1C7B6FA72D5FE395B6EBB033
984AA557B84085D2D56FA5282A4A4EEEC6955407572084FB22E33635F96BFEB4
B646B73B7DBA70E8B9479C49DA29FDEB9B8E079087BD3A671D3AF1DFA108C1DF
9C6ED171427EFA5E54DD48288A16F102F13E6E1B6A8B7435C1B012DB8B7A405F
CC722613045445DF97CFCDBCB88311232486F108053A082A4052AC453FEA43F5
BE96C292EC3E1A75482D7E9449F098B6D2D11427FE113130F87DA9CB8B6DE8BA
BC824B10F25785A6AC4EAA6D55C5F45B3A29A6EFCBBFA1048F6538AF997CD4A5
09A5D7D01049CA3C25B913C30677168ABA32D8F38BC72635B7B2A330C9B93BA6
B9978EC4BBDD2F68E09F6F5BD9B295A591B1078A9B8030F32607954879707D42
04FC2E414920D13D2369D953AF4835B90D49FFAD01BFE9F692A103A5342989B3
A07B37E0E1AFD1D51E980D8DAB10B42A8A3622EC04EC920F86AB43839E2802F1
5E2D2FAC9CDE587D93C9AF3AE491D944134C81CBBADDBA8CC7F2DD9AB77A8A60
3FAA4CB2620D7426C52CC34563FABA81EBDD0ADB35485709E330B20D3BBB2C9A
8FD97A695608BF1530371FFAC10F5AFD5A43E58CB07437476705E49D1E25A1AB
FBB022FA54C7DA116457071A33464FE70C7CF03D7DEA2BBCF929A7EABF0FEE4F
AA370CF77A3C51E0A2D684F301D5D6DADE888DA3DCA980060D893FFE18E57006
D9061C7CD8D6AB10407C990B79757FD02A7CEBA4988F34D46E2845A577573454
4D4A9D5A655178DF3797F338101401E57080AE2800ADA838D06B506E72D223
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 114 /radicalbigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F3DC7D72BFCD70D2998C697029D149A6BF560D
B13E1063FA336E66B267581833A721D1F474D7361CA1D448637464F5CC53C479
FDD548EB4F3D641F461BCDA9672BDF53567466C41353BCC7AECCB18B5A8B44E8
6248022ACDBF549725A61DFCD1C4BE72B09D96FAB2AD26B0E4D5956ADCFF5D8A
D4E7311C3BC327EB9D2A0A6C307F4E200F19DC87E22A2000288954E1C5492196
55CAA0F6E2084D9D72626B129EA59BEF210BDACDE2C9F2140FF6384341E3C7B5
5AED0EF176D54F653437899B913BC50F89FC9955878ACE712DC34CCE432A7B4F
28F999C2CA26B2B9B988513E19DB077BA99AE776E482E3977A70D79638745E77
D82F642428B24D7B9FCCB16DDCC5246A7EA120B5066DD14AA83E7D8B9A3FC459
7FB4EDAE51A93D03BAFD313AE854785CA37132061A28967D34734EE96A6C8FB0
384F9FAD94D808165E5F0FACCF8EF1BEE3BD7608B9FC6A6CEC90F3875E7E0125
D03784BEC98BAC5743078759C98171BF69EC65DE65101E5E605957EAF5A2B162
1AD1BB0F1F1FF33B2EB3E511A967E67D5CF22101A8097EBF156A039F35081509
7579C57FD8BAFF7EB2680C238C354DA37FCF3276669ACD019A56FD5EC2511F7C
054A190B4D94AB1F8162E4E994828302AC64CCE46BA91F866C0F3C0F62BA103E
1D76B0B6204AE84D77DE43A9714BB40EB07F2C7346EE22E70DDE5D6684391CAA
993DCA8ABCF565EC4B1DAE09FE175458E2E1BB5DEBC7CE826D9725D7AEABC00F
6D21804E64651394370EF6505A1C1030BFEE199C78571A047F24C66874049AF5
B5FD5C09E6B706F45E3A00EE5F46CE1618
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FF8536EAFFE3
51E99FBFE366A8105105F3ABF883222A8596B5C71A798B4C25D89E1A97DF22AE
7F7C5F36F1025EB753B8EEFB121487E91658D1692E96B6A021CEA623CCF6C9BC
4ACF593CA80F3ED850D167CB091D6F95BE42F08C85CA35DA36AB230E3D91EDAF
A2B77B58F4D04FF628190034DCFE58B45A71579F9701691C2A5A57BC5C6B1992
738F39E279ADDF7FC21D76436C5E22167202C94B089B617755699EE01A4C7B87
E4F5D46FB80565D7EB65EFF9467A98BB2A1B06CD5A8AE30297EAD23237F1A1C5
F538FB22CAB1E57CBB9EF520D4E82FADAC6C3829A77B21282347CDE770EF4CDB
A6BB2FBF3648C5F5A0B3BE75E98F6E719AE4A222E708C468F8B757E3E4224BF1
5C2546FC3CD2F4C08EE304C75F8C275BA31E999ECE027C3F34F3A7994822DC58
7BAD51CF47D76895919973DF3F8DA82E7835A49860EAFCC0E659A9082991DC31
DF0B088BE04EDAD1872737624823085304CA2A9E9480BE92186290FC29C3C7B4
C27598C98A3DF3EB0CD389A52BEE29FC22398BB244AA98E0534CD3FD1A44C8A7
4DD5CF9B41D608FA42669681F72A3C3B7CEDF181D84B0776AAA08091644905B7
43C26A74C90C77B605EBAABF79818A68219E858B6E4B63F8E9BA65BF43438EF9
F52AF893BBDA215450E6174C5C555DAD5EEEB9110AE468D1CC587A732FFAE035
6382226C92B9537DF8C4F37383902B4E1665B01234AC83DF6D4E53F991531228
15AEF3FF77045FCD774A4F81A5577BD4B255CD6114AA6A305C8C2635D44EED34
55C90F1D36E21D52A210FECA5F50626F2156ABEC6BC7453597A1F20DDDC346E1
C4E776557BADF9158C88A253D74774970B11342D30A798FFA9B26E48E4728D19
5114A9B35634AC999453690C2945D12A5044CB0AE12FB168192AEE4AF696EDE5
4CDD8A7B08A1A0E70E5CE0FB43E820AACF407DB268F2760F36F91A050899D71B
F8873C2203C7003FE088725F37CD5EE2122D79E9E395F5CAB8B4637839E43022
2CC6CC2E73A8B7B88E1A128C703B117F616F6E9F716F0319307A660C06E76820
33B4376512D85F65AD30E430DCA35434BF21A4362A89E46F7DC96AAD0FDCD2B6
0FF9E8E2D038E6DDD5BEE6EA025BC7ED8AB2AD965E8A5A3ECEEB801B73F312A8
24384B68C1E63595042444FA75A02D07082A94D3B28BE10AE301CC183BA579E4
45175C7443E08C57B73429BB93964F504924FE9C00A60C733E43A02B47AFE712
90BB2D5AB03FCAF6FC56C26256B9B2FE8226C32B7662157E6D94CC34A4E8E3C9
2492497C65597085592B8B31A138323C4E3200FFFC58752B3FE0BF95441544BF
0944CFC4A423BCE1E467226AE0B39365CF469876B2D5045B1D100AB5BC1535A3
7E6033EB313E70DBA5FAE90AAC299B0A3174D32B6A82C3B240CC99E5E90538D2
664856D62E28396E84AD58C190F60FB936D01BE8AAD0DE0462CA73D02FBE71F2
7FF5C392E2B9166DEA6D6D320CC01FB1A40155887E252E8CA463348449063293
9E8288398C8F511B6D315271D10F2A087B94C529F5140D0B983413B5B2E3B1FA
05FAB8D5443843F1A6D6B1770EEB97A9EC1CDB6E0A5C046219CE2C7AFADDA494
1AFDD9F34D5E092354199A5574614FBC4584863FB63D37CD7C376462235F0B3C
CD4A35302FACC60CAF01777F4C3D073FFF4BBC2BDAF699BD320493CED607D5AC
16F335E35F2943A4925A7BE7ADF4FDB0E89F6924852C4285E0DE285E63C5A868
A6F39E6F9BE5567DFF012ADCB39583CD69A188FF8C5854200F256DD8FDE34C12
2592353543881A79445E2EFD74B0EFEE088266F9E9B8C9CEAFC0DE3FBE9E9BDD
4AD21669C8CB5A418CC7E8761C4EC57D628531D07DBDD17CEC6FFEE3F41252D6
E5F455419EB964D2FFE47EB91772F1254B39B0F4D79951A3D798EE3BD83019CD
38795B996BAD800210043D13AD0EFF0C2717CFF28DB99FA0878B916E25C685AD
98E4C1338EF89B2A464511E3A8EF24B846229B5F8AEDEF7FEC09FA20CEA73FE0
8D1867A3578589A939A0B9E63F74BBA9A961D5669B00D76A28F8E732D208E548
44EC9B612458EFC5CF443D55A389058F3E4A6F5A3313AC34A06DAE5E8BBB9C39
8DBB9E22D50FAE58151D8AFB0CF8CCF782D8C0B9A56FD3A7F768D29951166E78
42CC737495F33CA41077848FC0CBAA6606E892B2E41A173AA590B6C92E254E2B
37C053334806B316A54FF378DA0558E3F66391B521345B79EF4311A81B01E988
2822BC80A55EFFA1764CF132253C51B9E6E27E63511004A58EFD38E701D36EBA
399743D35021FDF6A848FF71AC4935E79D35E678D546FDA83928B3BE98031AEB
E6894AD20C707D6E9DC307E128A76B25716388C24A39C5E1B3C64C0A69CBBAD8
CFF61BB6F90617233EFBCECF61496F87923E23394E6966BB1DB680E6E63029FC
E2CF0251EE1812C8059EADFFD09839B0D89F46CBBCD24D7D56069C1F58DB3440
CE8EC1F099A653A65517C9B58FB6BDE41BAA98B4675FB0576610A37B6F951FC4
064D8B664662F3219973B50E022C6E52D7175A80B2F60AE03C2D35819B7619DB
E08DD2EE3C007463730DBE8260970F64491E1E20F202321AE8696A2B452CFB70
04015910DC3909AFB312986143729B7AF7AC485D5B24E105393B3C777CEF27E6
31A9252EEA25BC4B0F86A034F5C64EA96C9C79539574C2C49EA3A32B7A2826CE
A8A852CD34590D81873D531DF4FB838434FC4B720582050475B9094808F6F111
5CA55B7BE5F2018ACC72A4B70CBC87429FD1D9DA6F6DFE3B7B5B4A1B7CA05420
725DB27A975BE804C5563DFC3C67C8166A935E2DFDC56BD56B774E1ACBF2A592
49A4ED17141E8776F8B18AE3BC29EC531D24870365A38AA8C5EEDD3B47482510
5C8E3F28E77309B1D0E6185370CF1261BD2325B000A1AC2522EC18F41F738AC7
FD3ABD6EC50BFA7ED45DC7BBD4035EF09CBDC0449DCC82FE0D088B81C2612EC3
309D390181D900F59825D71AE88550CE68DFBEA8F56A2BCA48581E8F72655089
6830EE471FF99023681ED06E7AC97A386E3553E3E1EDF01B884A02EFA230D472
5D7EAB1B2A90A44DD54A940AECA836F7040560667460A9461AD0D85D5541825F
89DC7B4E6FA099198C48720E675631F5C39120D16ABA9E1A21E8BE4AB35B9C84
FBE4B94EE12DD2C73DE628EFA62676CA283F8D738E0ECEECB018991B3790D105
D3EE27FC27E1F2315785D8A135F22FB2DBC798887990213258C0DBCE2278099A
110CC3AD0D6F2A8C13BCAE5E447ED29DF10FA842EFCEC4B7E06F3897CBBF4FEB
EF878EF78100EBFC18E0F3FBDC045C7A6D20CCC663C90B24A31AA78A3AE37EAD
D38A48A46452F45D41D8A265C1F0A7E9CE47681306B41E162676E04D4AD72BF5
F55014CCB40DA96A4C51AF2721FE5B9A59C8E69E93556A73D93CB4B39E700B0B
8683A9C960A17CA12C45F433A57B13F7F9BB7901918C25C467DE8E6592C65630
78A9CD1572CB5E98008C9E474DB0894DE7939E91037DD68FCDDB8ACD4FB6B8B0
8714A4B5038672DEF8CC5BCF585874F70E74AFC00767CE1BC19F391E08E575B2
EE78E04C5FEBDEFB90F3933689ACD25EEA2A6125867EF523C2D6CF2365F26CF6
367091BD71D7EA1069F48D987D3E76BC1A459A99071FBA4C4973E7B8D9D29175
7F1898CE6804A8FB9D679B921F0616F272F26E0BDB8D5F6FA9E78F6D27BB12FF
9B399DB1AF4BA9A5705502F55E4CCF7D34953BF07472F27BC0D111485D941164
5CF36592A94A199CD88A4BEB6967E255F808AD2159095574E930182C021C7CCC
BF99ACF28BED0A065E97657C3146927295A214272A663653D07F4100EF35FDAC
979DF0E0CDB536DF87501EB9EB2AFC2DCC2285AE07A467F2E54EBF4E52ABD7C7
621F673AA698710B36DC3337E21A936D51400994A0090A8090A8A39D719D8BFF
6C02011BA5E26BA9A3637FF1F0E45542CE034C43EC98F0E6D380FFBE03A95B72
8C43AE74531005660396138C19CDE0D7F03EAF49BE166BA3DB1BF765EF030C94
8B0C66B3794C043AB6EB1898B8C9507A855F91887098205E85BC528D1A33F8B0
F76A1EC6011368DCD867B458A47AB5FDB14365B551D5489030C1FE92774D022F
67F347B370619420089D3E755785915CA903CB08F97B90CBCAEB4AB5767307DC
68AF2217C2CAECEE88DDED690D96080BC8A4AB8CFFE1809DF7903F6849B8356F
66B6CBDFE9D437F55F17C33AB41E835231B8932B80368A39D854E8841836A407
C3243AB2A1A926D5D524D135E550E0E9404E76C95651ED65838696F01985F85A
E177F1CA2958718576759631D8A0E1DB05ABE823B29DE32EA6B940596E02251E
EDA8600201A42B2D23DB41D95C366B9580053E25009486C377A6061E9E9537CE
44D5D84E9A18DAF2A99D8EE950A877F08244F0B691350DC0E4B38E4B5B5868A3
4E643E6077A2C9F12912B16B203007F4E5A56534D8FF497D54824EF1D86013FF
B560C6B96CCC5ACF55B7175117B32C326B3FDD5BE4582B4C98B73630B967E414
8136D99ADE0525373C9F504F4B02A95DD4FD063AB4C38C1F07CEABFAC6D527BC
F9BB1AE6F5715FDCC38757056512214E37679613FC79C79EC2E13B44602369AB
74EF77341BF5205530401B3BEE72F0D67A10232543AAFA3E7AC77E51E1E4CD7F
DB36A224FEF55B06A6036ADD54CDC87F9D2587664768E539BA2B09EC01BA12C1
6350A9F5E215EB4853B5FDE9A06507DEB2E8D3E620718FB4D374EB6A1A43B2BB
8DF638FF758E781B16E78E2D20F0AB23705548ECB4D1A19602849452AEE1E6BC
CC71CF9C16003E2AB8B9DA4232E01A4B3C732E6ED65A9A041BE6C4F89650B652
6588B1D36424CF58F1224BC33AD4C8C61AEF51A2BA973C21B6F2C7F3D7E4BD97
877E69784C72F1362CA84FBAF9529C67794000500618A96F93773BDF87F24F66
C3477F7D2E6B47296DA11AA6E0E9AFB8332F4F0D403EEB52B5943517279BEAB3
591C96C115D148F5217ED4D44AFDEDDB3E2E728A916E798BA1DAC8D91EE596FE
0F91BCD590BD2A864872ECCC97511123C1CE659E9AEB2D77B486A4E068B61468
E0D78D371255EAE5886E05315EDAA0EFF7F3E9B85D7BF5A128A69E599B10EB01
6D50FDD2457EAA9B81409C3D3C0F9CD81A46C7A5CF06139629D5C59C63B10C84
0E83E9B419ABD9CC8E69776EF4A456EEE955D2550A1E22227D4696C6908AEFCA
FC2C9DDFDD855116AFD66EA16F95FC344C6D18B2339223DC051AD6F040CD2A17
7C7B27F9D914961E272D00506E8E854767B174387E1B345A81239A29470CFCF2
5D070AE2A8E0DA1603969F8D10469A0E6B483533A897C24862EF358A37196656
1054F7CFB59AC4775D4C7454D57F3670A11457E550B1E5EB5E4E0683664A8112
ED925C55E4B0DF0E5BEE4B29E5DA8177D46AE4A0B1E93145F56A06B7A32A8770
B7B2AE12CA40CE4F6BBD101270D15AA6590DA4E9FFFDE23B9AFBDC82C3C8FB46
334BA6EB4E7CA147569CAB615C61E1FFA0ACDE99F3030682758EB76975A74A0F
767536B5662C61BF17C1AB1BEB0D0FC5BC9721317E21378E75D88DEDAE45EBD4
0297EB86B8BF729B4B7467486C673EFC9F867CFA5CFC62F2084439930826DCB6
C68815D85E4AABF120ED2826366F97614EF00EAB92CBAC25AAB048F0EA0B18F4
7C18E7997A9FD2E324E8B75BAFA9673F5BB3CC348AC52F4DB83DE9C864BF35AF
FF004977E13B9EC65F0D6EC848B39A85439BBBC34829EFB4604097EBEAD0EADD
41FF95ED82E0BAE950FFDE5D53ADB1DD728C02742D0E51D69C7075C76DE6CACF
4C3FF495F0D3B1317D4933E1E097ADD4462D31E1530145D80BA78103E405DD21
F19215BC8F695A05C4E1A3930533FFBFA7D387CCA47FDFFC5090F00FCDFE2F96
0F9C8C5FFEA64DC4D70F813095C5B91657719746462EC82FD09A8E0CAFD55E07
71E6270A4762ABF22B18065B1C34F194BEEF9EBCFB78E2A5303ABC91E6FD567D
3162354EA90C1DE9A956B8D7E6CE1E8391C4BE7DFEFE293D3B4B03838698FC6E
D501AA9B209D88117EA9902E5BDF9C99B9BEDD9C0EF5461772D5C486695BF5AE
2E36A5D3D76EF3B85760EF0B4142A46613B8AD5D886B7D02F8582B61029C9FB5
0CE54BE9BAD9B7508388DD936D11FFFE6E983CB566D63D97119CB34E5B87902E
04E195A3386F84CB56870EA2BE9D0B1D1F3D34CEBAA0367AD81663D33EA018A2
270622DAB445F2876A1DE2884E34EBAA1601E1B48BD6A3C0EA6FCB065E298E75
4A8B86D3E245C7E474C7610045F52300C533E50FA695EA1AB37D88427130ECF3
9E2A1A3CBE12500936B7694656FC43535E5B592C7C51096681B77121E7DA0EF0
383B3319A212AC11C183BB3F88ED6B4B88EBE69BA08937D66B3714B8E9095AB3
9D994564DA6C51C3F01AC85BF6DCF4950951FBD53422312E2D15E5335915D1F2
C0480FF9881EFF28DFE535D68ECB8973F2E52D384CF08640FACB3F063E4376AE
F7374AE1D709FBE768056D882CFC5745047EC2F5B8003AEB4CCCC6915FA2901C
4FA039ED972F118EC62B12D48CFB28AC26461A15EF08AFD908765961E465A0E0
41F52FAF064828941A7E508D9F90554E3B5AFD56D095E0D6B0BBAEB13164D340
B020B5C37AF172E1E09D2588CB2ED24A21173607D4C5EE2C4448CA7853BC8887
6A14B121B85BEABD34AD6C11615EB62B9E20E144D2CE25717DD4776D3F128B94
1C782528FDD5DC49FAB15300BF8132B8A37C73A0872B7E5E10F672BC0CBEC683
28667C38371257512495CD7BB3F8CE357640B13B0C57532648A5E341E6E376A6
3E89AE1EEC9442F9EFC88D77D02D399DE79F95D10E5DF919ECBC97FD1A9882D4
E5880D7E39735DE256A5C611A52AE12A46A55C1C82A7BAFB434C97D6F35AC47D
A2FBB8134ABE05A9A459E58B35FD127C11A2DD0B0ED4A5B6CB870F3EAB8ED175
4D49E32DCEFA0A44FF143A4021649B67C0EE4B3390ED2A159731B864963E842A
1CECCBA8120BC62E8964329842B327F3E09FE498EA1C20F5AA911EFA40888A19
129D9B70CF1F0746BD0A86AACFEC7C2D4CCFF39FAC7EB56BE27A91D159DC1BFD
423B1BF490E440FEAFE1ADA3151558EF6616F37F46DA118C0B578FFD41E2AF19
079CD3E77C3E0258FEDB891F79982A07AEA209BB8838DB4305C22BA68B1A596E
F27A7A11BEFDEC8C3100FD08A3A0E9BFCB0B7A0997DD2B9ACFC3FF359C3856A2
28C3B5EE2A85B7ACCF789BB894F911B959E9A7D4A164441B2ED2FE4D0EEC9CF1
A1CFF7287A8C9946FD16E693D3E6929A2F23026AD041492BFC57D47C7815B5DC
D53EFC7E0E41EAF61191F01E85CE640798BBB3F049FE4E20CB3E858126A2CAB2
72165352645772C951A7971D344AF170E47866A95C1354E60BB69F60CBD3B731
7CC9ECF04CF861C2155EDB3C6F519D7B55793AD9F0E57C6D1570969A7BB33FCB
3387C86A50D8D90070C818D23E38121D382EDC73A41C2ABB507197A68BA12F20
9D9FD47AEE6DB88575A6D86E7A1B4D552708F11062119B7F04706EF303B6548C
D5281FE86A2AF954CE455DFE4F45379D3BA5A4B124CFC395FCA71C0B88AD3C6A
27B75191126641924DE6DD45BA3B73DCFFABE86D2C8B29AF4C09DFBB600FDD40
3A1EAEE361ACA3A0583EEA2FB90DC0F4E716BBB804BEB68B34C6FEE0793CA71C
9BD82D057C7FD3CFFA37FF627F4756AFF88FF10A172C60310C10FE88E9191311
268DCD5414100311461396FA7530D5778811EB62668F8D8A3F36DCBB5352490F
ACD6E9EF0C8681C06F310CAC413DD3DC1787AB92C9E73F964DE3D2A4F222611F
6D63762A9B14F265572019A20ED2BA97369F2AB531DC5142B6E0054BDC0DF4F2
F86DF6A8340B29B7ACD8B3F2A1BF99A87D722B224ED706DC66B0F4AEA2470C48
614B3680CF38FB3B488F831E0814B74727C6F3C1F9F71093450D19267E31DE05
54ECF48D21D9BFE25248E97ACC50F1ED0633B26AD6D5426BDDC3F3CAC487959C
D477A5EE95949E07B104540071C4ECA2ACBE5CE970982E293E4D5B1CE6936AF2
7B3F62871B94BF6A3319CDD3D3F40D5E601775CF6CCB71A88E09F2382BD916E9
CBAE773FC5C3E21C86B365ED0459E5AB473675F8DB59ACEFA07CA9412FF8627D
C822B7294F11F5D48A2CB3F3248DB2BDE1A2038CCC141F8D6EEAD72C7D9D86E5
00D2EDD8B15BB5642F9CEB88DC7864A8BE82AF3D1428C870512F628D997D45A1
A03812691348C9121A0863CA4B8FDB35670D6D7B035AB1467B293F9315774960
A9CD2F03D33FAE3D9754547BF88BFE534379722980741D0855372EC5DCD9D41A
0D089E18E358B024CF68C55C460AEDC2A13FB27842FBC1480B18A6932A27E3FD
DD0C3963F2212EBBFAB95F8D9FC6F54558B5A8BCD6966A8102EFE2A49C16194F
91B5FC4FB0FB2AA351B7D9F4E4588B54B8967BC0541399D510D7150CFE0C398F
D0AF6DC15979E8DAB7ED8D85CAC81D2A6B20094834005D17B0B23D5654F1A407
E4B9274353F36F6AD37F35ED697B288002998FC59BE4B93F47C54DEDE547F8F2
5827C65646C14441C97DC31F96470C817CC9DFEA8BB0E39C3E9C6D2F7025A9AB
DD3784F56FA58059FA6144BE37FB1076319BB9C06244EB9E0D1939E47D7DF715
C0C17957358E7C9A8660C3B02120D7D7B40B5F9DC8A9903A481C904FA62520DB
1E5A38265F992722BEFDA8D1EA7BE47E9A722117650C8F7ED57684A4CDF5D554
B1CB65AFCB32B47C66D8C40BE57B43B38CF6526E92ABD57D4F643A6320E3BD7E
F1CBA472270B4D082A1E33222F1F99A470CB51481ED7C692CF08BD1EA6C5B30B
E280953FB8FC61266C5ACF068911EFD0CFB268307F4CD1C56B30138207AC246C
862196D27869EE01D11878AAD11F136BF8A58C6D66EE584791EAD7E49B3D8B81
CEA93E01FCED315904149416BC5E7FF4ACDACA0D6BA3D6731A99891815AE1275
55365CF5581A74F9577202DDC1E52D988F093B0AF2F0EFA29214C6BAB0E23485
7FEEA60ABA59AB1B188C76E4E85B42CE89518384F2CE6BB15FACD12C10F29720
67F64B3385EB01AFE74C4A2E2F4DC7706182335CB805656F8C4DA01916DD5026
E7231C3D0ACE7755A750EDD67622BC5CA310A3890841AEB2DFCF2450270BB75F
691EA98D68641BE6457AA47AC07B6223B0A6000CC54F1D2767BD0D84AC367612
5C0CB0C903862D8792A46CA5E08D32DC44E8089DD89894C0D92079AB36F681F2
A1C49C7151BA79076632D94EB6FEA5F2E03F164FF60B05E8E3251CFC49762BB8
5D6CD623B815738E392DD2FB1F4EFE4492AC0F94284ED80815EE3708AEFF3A0E
6E577F93D7EF83A3DA1345169F1EA8AAB65F552E9342951FC8A13AFD4CCA4DAB
06CBFE57FA652B5B0BB11BB24AA025A86B951EB81044DAF53E72C8A2142C0D09
191F8E0EEA8BA9BD90164B9B82981A3F218478E17C14A5B7E8981DC73BD6689A
0657DBD831AF13104FFE76273D0A94C8B34B6B8732B8D3853A0B99C39049E475
7955742D8773E7C5FF6EB74EE0DAB47482D0DCDC98DBBADC85EB7345BE842D83
D4EB61F219F10459AE2A1877143E0DB6F206178B7223D5EB186EDFE9AAFE6FF0
720DAEF27BDDE969ABA8F346BBBD289BC59B3DA04D6A56D1C8E48DAF7FA0CC46
7B2539FCC9E04DFDF675C7914B2D9E64844E8835F40FA9C17EBCB6C8CEFA148B
A4EF47DBCD44378C4BB6E0B7DCEA6583A939531E72BB9D62F5A561AADE200267
BA51255AB093D37A8F97CB5E5C1A049F0B46F924568EAE3B901DFC7193127782
371D3D4884B50E1295C517FC56BAC435BA0E02AA42C71D9E27302A88E52BB8B1
924F0579286F357E843AA41FD2A7DC0244ABB09915FCE4DA65A1A953B75E9F85
F6D97E297FF1FC3CDCF9A3CC69C76B1CBAEE29D97E62720614F7C2864E75927D
E4EF96AEFE800A0A37FCDBA9FE0446AE6AFE07A1F5553AE4F0B954212A58570A
24B86F46D7EBF24DC37681F484DC7088B6E372BFCF38B4F4FC0803BF6176B216
B0548AF5225498500647555D27BCDC453C01878274BAF10530B2AD398A98F137
55DF3B2247144F40839FF356FD990D7DB2172E7B07ABE7CF22C48D74DD85E83A
3C976FE83802D4CCD92BA1047D0519CABECEAEC5AEF9BD164D507ECAAE990D78
055E5C532ADDAC4883F517B56CEAA33500D6497B38B7693B16D059F2BD5F29F9
8634E432A2E11FD0DEF1577A955CECF44B9D06542B9F9833A1E36C15301FFDBA
AEC98B87610797BDAFFE1E626FCD53EB2EB03400B20F87FB9F72CC978E88EEA0
CA70F49B517973916884B791DB366137B64B7D1A70D83A06C101AB379CB47D6A
72839E70A3502E791B87D4136A05069433055575EE2B52D2DF375A829FDADB33
032C1FE6C3F486108289E9F1B5E29E5C5E75005B2F4608EC1B5CC2A72778AF0D
1376B04486A796DBAC4C90FCAD1A887E071087DECD4DB7E551DF7038FF1E60A0
C3D4B521916C7DC880DFA1EE1E270FC43E315393D284E6B82BC7CDFE0189EDCA
472BDD5A7B8E16D558F81BC82E285FD99B6CC9808D4BF6C5E91C51725CCA799F
3B8186EE2454E318F5CC571A951409B0E69BB7A370D7E9ACB79888AF725FDD44
F3B23F8FBACF1E5FFBEA47B9C0BD21E3F9CB72B99D5B72F5453E5E8E61DB1897
CAA648FAB07CE7C933BD984EB713405D2B3F48124431FD93608EAB1E4645EB7D
1271EAC040A9272A53548764286434035C957B2F2CD39BF76BC4D69F4AC8C93E
2024A58F673306E12ACF74C3602B3AB3BA857E2028EE56949E91DB77D0F4F962
CDCDF4E88D2637EEEDF2AC2B228BFB6EB035824B77D3B673156848EE31E114F8
8F7D23328A618A62487A9FAD8D2C76FCA8779C3BD9B1676110F9C89A34866F94
62A04D259A99477732E18BB9F22510987F3AF63A6B261128A97E34174144F78A
8FF1662FC7533E35CF685F41E83C8376BA18203DF559F99BBF62FA70CCF2A956
8E3AC7B9A6354295CBCA154AD2091DFDF2FD32C072BC2B4E253E6A0A776E288B
EED701892D4970FB103CEEA24A2F1E761423CF91A92759077C60C98B807B579B
B6A0C8F61F60728208BC94665EF43D16914212BA387D89E33893697F5FACF329
6865532E051D4E6E39E8816E3B684EEFCE297ED708BAD5FC5C4185013F420403
409EFA81F6B5E80114385D6B52E2CB4D5EA1ED000029A07BA8C9297BF8B0B016
EDCAF80B90454C606F7BF8F2C0F92CCA49C489AC56BB4FAEB441E3C27FAA80D0
8B77A40CB972E74299E2558DD70A36B6AE681090D3894D4E5BC8240049B26675
3B194C29B9313EE06AF3F73F954505CBC76B9127245B79FB2A1CF6C47487EF16
05F5CA9D62127553EE375832C57F9ECCF6D8C2CA22970F7C91F092B209AE35C9
1CA49AE879DDEB6991ABF99680726F63DDB4ECA19DE774DFD6731053FA140615
2A8DAFB7983BF339540A8D8280F3576CDCD4F2140BCD50098226C915CBF178D2
DF1AB51173128ED3E300042ADD864E1C505E451409F058BBFC0301087271EE7D
CC7972BBF47A320BA4335D4C8672E6CB0C819A797C01F88802FEE246506B981C
4C25D9FB5C08D065EB272EEEAE2A3327FC80817B67E939CF690133EDE92FFACA
E3089C989E3F88B9E7E3262FB036E1F51B26BFCAC3915932AAF3C9640B08B8D5
86177DB014AB4D745196AAF73F063E1E4C7DA373F0D51E81DC69EFC45BD40DF4
EFFE581421BA3CB3099981BE8BECF9CA510B476BBCBFBBE07EFFEC181A5D43FE
C68E9E3DF1AC80F8FFCF4B8DD9CE727EBA8A66F8D9DF3E4AFB32361ACAB13BAC
D3E465D094B64844A4D98D00CEBF2730D812FDDDD016B803C38B892381646CB9
726C2C01AD1AB2CAC1ACA73FD1E6619B3AF0FA9DB0E6B2EEAD5218376B679510
41CB6C3B3F93392705189DF929FF69A8CBD1565CF3B86A0455B9121D1B79B387
31DAAA559BAC06FE38E3D3AFB6B950C284946E38ED3277A6CFB6830C394E6242
3A0D22D51EF24DCBE949D469CA640B08B8D586177DB014AB4D745196AAF73F06
3E1F7F38C7734795D322D9CF120FAF88391E1B6BFBCF68DAEF9EB200D9C0527F
9576C9CA4DCA2FB7C7EBBE81AD2A1051D20F0344E6E5627D613B229272CCACD4
E30FD699CDCBB90E225B9E736C6776E2B37CEB328EA9E707B012A05EACCD2D76
CFB7E847986485B5DAC172074527E2605149207C6E1CFE28F830562887FDDBC8
96D9F7CA55CE30F8FAF78A251CFB781A26129AFA9DF18C62EB7116C532D99E20
4CEFCB3FDACF30BA32DC5462438D9F9E76453BBE8FD563B467EBB28508B13777
2858D1A89AD21A4DAD367B21D4B71BCB10CCD9786F929BFAF65B9F093F66AE01
98DB15A1E8C965E23C189818822E6CD053D8118AAA25FC998752D9D7B1A40449
444EEE34A923562A80CEC3AAC0FBDCEC1FF1BEB631091594C80B02ECADEDC487
C429496930A270E0A92B8D5AFB7AE91E3ABA2784B9B516FB6272363D29CB4324
C54F177EA0EBC1EADF964E504E34D3060E242C434A786062C2995497903A078E
E7AD49877F9ABF3E4C0708983B1028EE4FDC7E5869D1E0E8714449DE281F6B93
7CDE2766785B6939FB1FF0BB2232BA259FC908229E1AD58FE29E46A3635D2AE3
390593FC7EF25EE5C589A720AA0539291B9B8004F29F21B2A9D8EA7F0DAD2494
C3188A06D85305F4994827DD1017EEEE54B481F061EBC2FB29FE4D5CC6EE8458
FEA2FE94385B2AF841D9A75B90C304ADACCABE3D5AC2F814D8413A9C3C1072C8
19380A5C3386D1D094605C22E58B9F9C3E9C6D2F7025AA5CE039D7115B409DDF
FEE275FE0A2E022331F1457585E5AB65D0026672F7DB32819E0900E7F90AE93A
0D8A59270BEC9A164C369C237DD28FC4BE2843036E872B2A03145D071AED3C0D
409CB163EA4EC26EE2F867AC5947D657CFDD7015B4C4BEC14BE403299463C32D
52D9EEC7DDFD8AF302DF65A337A60C1F7C2E743954A17D26C0DD1922574F22BC
2F6FBA41D80517257610CA9E08C0A5CB8A60E535135D445153AFD3F9CADFF576
D65850FC5E56557DB21E02A128DCC9D51903ED585E1581310C8DB07D33EA8C83
F2F595DEA5468CAAC2B78E5A1993F2B6373BD19E1C07F643040264442F31881E
3DB985834F028AB83AD30EC966CCA91A1736D45950AE1DF665EECE2BA7DA0EE7
D2727A88730D6AE8D68D1D5B530C884868B78687719D07D0367815A62E64AC6F
0CCE9A7043AFC60C1CEF5338B3FC528CCA877F264F9CD0A9842A9410A0895DF7
591B4653EEE73AD08E20791CDD3CF827BA903093EB2498B3FB64E859A014650D
D9C516FFEE68BCBEA7419EE8EFCD627E7A26980893FEB5496F9D7C6BDE291A2B
B4189C3ED05FD7704B9867C833ED3ECB005A96DC5D8D10E3E2CC4607BBC94AE5
888A7A4FD92860505B4F9128470809A4454139B2226BA59807A4E5B3CC008C51
C13560F141E83045CC09C9417A6D014C32D1DA4DC02F8945783A3EB913DE3A54
7E16A8CCBE3E2F865EE8E446C3691A53B13CCC80D1E9C83DD4C8AC4C76553C50
F4AEDEE6941CE055BFF56E2B1E6D718D50CE18101A05969CAFD3ACCB546E32D4
39E5109C4256E14813707C96C369F883A6E099DEBFDEEBE8D06A555B642D686C
B0F0DD3CA419BC2D320D3CC5022CE64D636D0BDEF9A08A4AFA85AB3502A3882F
0159823B33BA57612F379BEDAE5DE173B15C52008A84DC191A96A32C4175B6BF
B279820B7183731DE8C1D96966C6381B934EE4B5CD4046EDFE36A6E658BD6D9B
F19EF7B761070D02283081A91DA1D968D71B9A7B1357C8C8391C12719AC36BBC
5D7AF45B4D9F831FB5B051B7D6BAF4F589AEAC6B5BCC2FA76C09DC2125BB3784
24FAE6B3B38AD98E190EA937596710EBC86B64EDE4F695BE97E6FC940B9B5E8D
2F8122933744B434BC89C06B9A9511819D1F2CAFDC8863FFA9208916C644A7C8
57291D459C841D41CA9C9CFD6F2E06EF181E6DA2E87CAFD34569B4226A4908FC
091F7AFA9A7CCDAD0A705FF4ECC52FF2FDD65B730A06843DD7FE42F04D18D133
6D4CCE8421B992CF250534947157909932D83A826A7F882AD803EB2ED4964ED7
BA7D74FA72C7A9C90265CC989FB9E03199B392E70641A42EB778A400B9BCDFCF
D2D1F158122A3CE433BBCAA7D43DB5142140D875DCB305148682EA7FB9DEC36A
F13AEB03F981C1C91EAB5B2F9F2FED344A867232B6088634814EEC3F2CF6D0C9
64CB86EF492D950115366278A8B3D742CC50DD43FECB316A16884CABA6261D56
05D1CBE26178B668D360F22C834122731174D388EEACA46E0DCEB2A858ACB165
DE55A8B03061FCB374560D950457D0433098EC8FBB809CF5F99D66C295CAF916
BAE3DEF8F193EAB30D2BF6AFCF88BA88D6EB59E6953C30DBF9049793FC341961
B5B25F44D6F2B3F5BFAD9D5104999738AAC4B52C437B5828AC1CADB3BB194694
3FDBC68BD4DC9C37E57B0764AA1FF4D517AFC779F96465E729252B6F3D283F1C
1C8F3578A01425ECA3DF84EDC45828AB3B0BC85E9C8CD353BD6AC16F470BD380
6ABD4A41A5D7A5DDFE7D9FB25CA36F41899242D36764A8D87F580A29A27138BD
6CD2FB9419DA31196532A262CBB9442849639982F2F88E1A435406BC244446F9
5543E9694175EB73B29F11EFA720A8C6B36797ECA73DAA2BA1E16E9D0498D14C
8EB79DC4C8B62AB7E9698CC662A5B415DE4271273CF3911005477F53B779A33F
A14FAAF5C872CB983CB5F650AA0B82240A080A71D71CF87E33EC207724F1AD58
84ECA5080091E2F43E93FBDF194319CA61D229ACA7D5BECA4E4ABD361F2F0F36
616CF2F532DBBD236C43840F870596B6996C715D5585658DF1FDAC8C2CE445D7
F22D03721B1C478442186916E4370CD0FFAA02CD2164E0FD4655DA1CB1068B02
1EE4CEB1F7D3CF1A2CA3539DCCC6BCB31F095B14AE33B35F4D3700AE5AEAFE59
DCD4EECAF7C0FFAAB6E866DFD6E3AEF724C63A58E74746CCF70A58F6D989F213
6E35323C2B06B039BD7A66DCCD9B30F171DD5FFE3FE30B3ECB233B077CD378AF
CADB743655A6A0F1672CD10024F331FEDC51FE0E29B4ECAAE8D8F278A5983FBA
D812634B0AEF27E881F994B1C0C40BDCA0E39F4B6B67502A1EA6F271B7079C1B
8580AAA40265A86933F8B05B92362ECC8A73B2993246589A698041704B9CF35F
EFDB3B1398E524C5618DFBDC521EB8EEB0303B79E4B000876AF71DFD5A53665A
4960686887512823675D3C533C708AD468331877DEB3D863567140974ECC81E0
C73C11E07AFAC988472DF8261245A72F6733E0D5DF8D04FF3A094992F7D10B0F
EF9AF1148BEF04874C1E009AA7808650C68EFCA2A0733B173AE46D54EBD58615
A267FBAAD09980F86804A66CFABF23557F32EE80FA4440483648C89C17F42F4A
6EE2AF789AAFFF1565DE455BAABAAA9BBB0851BD5D7C492B6931318D8147495B
F50E2DD2D3F31B395620B82B32FD5647BD0786CF84B0E38C65A72AE8FD19A19C
AD802E4041339C2037CF6834EBFC959F86E0A11687AB9BAC1CF4D7F8B62FBB99
C5BCCF101A6F4BD470436D8B764D93DEAE3C079FC68536E41784B641722ADAA6
B305D8DB8A9FB5F15C9CAF3AF3BF2FA92B320EC08833726305F61C5A92BD5C84
9FE4BF8B453BC523CC2958CE616B05B82BDBF6A179DBC4C5F5DB2A91A2FBEB61
7EA259E55CC79795138694A7ACAA46C8657D9141925CDD68D87306B9F1366B60
96004208EA9B10E1699936C52ED823BCC3D1B3397B8A389C19C6B0CB1A660F88
A284F59F22BBFE6FD96AF9ECF5089C8352779E720A859C3CF70A72447A601B0E
36197BFA43BDF8AF68B02BE0BF2E893450CE7D4E8489080836B934397F66D9AD
A69808268028DED7F28D3B149CE802B9499AA96C504D6BE4CDA3FEAB413C389F
9041ADDAE533E34B115F3E20D7A1363EA955730401933B13DB95D619578198FE
A3B8C3CE05F0A9D6DC6191476FFD6572B3F4A5E0A70EAF80AF496362A773D066
45E292CE7C78BA8E3CFD15D21C1FB2A6CE7050012FB5BAC65489640A764BAF90
85F3C781C52BA46D696BED61B4E14B882C01400BB7BED596ADD61473AF673B92
3C90011C70F8EF599130DE756986D44B1F1D6A7A3A7298E19644B85FF6CE88F3
D3243CF710A949C727BF10944913D49D8A24F998B7B1C36C880100E24B334F52
AFF217899ACDDF694F3E7A21142521C0E1D37BB512828908AF87211D12B0CED2
3AA4767E2CC8E40BE0289928FD46DFA8FF968856992AAE6CAF9FE1384A8C1240
9767A6C8F319CC9E393C541141F957FBD806D46EEE4718F5B371CDCDC742A20A
9683DEA03CC6F5AAD7AB597A267E31D61D3673DFBF25C89FB642EE6B0B9FCD64
AA7EA5060FF1D05769C63E69668D092BB92D3E3A3366B9E2A999DD2D6EE17F56
8BAC807CDBAEAB01C7177B12F98146856F139A1D14CE1B64D212B4E0908D12A0
9D7AD5346EE6A5E4D5CD13C94B181AB709FD2EA38A824FE590D7D4BE6B9D0AF6
D31FD5D79B85E6FD123D8CA3B09218D52CACAE1AAE5EF8C142A8C80B3D27C253
FD728BD4AC01B9CA84529E025356E9830F94C7AA2DC1C9E769E081FD5279C728
22CAEF3B96F9C9DDC4E902903F0E69E7EB2B5DB264FE70BFB50BE1D01ECB4B52
19C11ADB47E191CC4E6998214CE199ED9A7F6FFE11E3ED4904BADCE785F70F4A
757795CBA7D5313343D3CEB5D7B4F31DA66A2E71EF6E08C35A1241D986A695A5
ECE641F9FB72DE51AEF91051AEA0B36CD73C10BFD22F6FFAED4032AA0FCF14ED
1392402B37BA0EEBAEA148E9562ADB304AE6B06782C749CEEE7C08245B908969
3BD178DBEC892FC8F7D07AAA0860A6696F4866EC05519E37774BDFAE82B1C41A
330CE330C7D96297B99626C89379FBF6FFFA71F676C0E46512591CF92138F569
294D0DCCE9F7D760BD687409AA9E54D28C2FAB9BD10FFD9997AD6BF2478B64C2
2F28A052488C7E899B5CBA135E133DF7E75B45C92048DE1E0B34895B05CA80D5
A84226BA7F7E532C176FD66484209D2DA321AB77267919417612B7FE6DED172E
BBCAC633DEA18C3B78328D9186499DD6DEAEA6EB4B96C3463EEF382CF1B94D78
994A98C89E3774E67429AC8D69717B9256326E18C2C503204A95283F47CEAC2E
FBBCBBE4D23E932821DFF5C173ECB1715CC0AFC5EA56F4D43F9B6E0DD8B0D989
FE9AFFDE2543B0276D8611C8E44671E6234782809000E97C3D484F5FABB6A2C7
B1CD2CE2B8AE2082DF41109A024F04D5C8D029D300A407EAB09E6CEC046B16CF
1BD12363A2309654A62738A5DC6EDC72B7B9B4BCC1D316631F0E63BA6EA006BF
8CB28DA25ABABC3B1394621FE5688B76CA108DB9FBB869BBC72468A7C40F0A30
E3B9D85E2657727895E3E590654601F13FDE11B273C18AA8C21528BF57DDFAF0
0E78B1865192A4BE7963577E97E05674E850F60F2C04EB99448E1115C58320A6
42
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E0B5622DF6FC4BF52147208D9A91EB49B03BB40DE7F8FBFB566F251942C8FFB1
1DFA50465919400C21CE4724D12E4EB47AA5F392BA927329DBCA28A78FC1DF2E
6FF27F4E4E3F8971D7BCB5F3FBF8F30C214A26E5E32E0E8CBC71BF20AE573BBB
163DD66E89F2C4E2B1A1532AE81C060146F755A1ABA3F1365FEA30B403DE7B22
76F43EDA4C9950827B0636D240C589BE59546704671BD54F3A063A45204F4276
8A1BBDEB3841092DE837265C9D5BBC31F6AA31158264EA0333504C1CCFF6A1D4
CA22B9ABA28E97AC4B5F3B64FDFA8BE4A1F708D81C53D2333465C3656B45F974
E9EAD18DF200858CDA615DB959996DBEE273986176477C6097D532FE633E84F4
D986893E0D0B54FFAB7E3D69C5F756301B3290080179A64863AD7C1C18194A2E
4A0211046A1F2B60BB0618467214A6A947EA30824854E7D6ACFF4813F1F02829
CC670224DEBE5E98A04461F3E3243445261F84BC0590F38DAE91EE50094C4E31
949B914B222D49C1D8E23F47F916BB5A1BB4BAE71B5E3DDEB1555E9AE14E4FE0
185648C071502B7BC23441E3E81F5413ADBA314A539DE5358EAC9F4DC5E62D2E
366A71DB2EA9B18C0929834B38B60522FE845DDCC24BDE3E929B52F2073823AC
7842A92D4AD1DFF602F092F4217F58AFAC46911F981E4304B4FE99ACB1012891
531CF9F472B5F6B2ADF0981347BFEA8AFA3FDC80A3B66E89E8CF7DCFC8691402
C74F24A4F6EA8F17575E7FD8637AC19676D87947D74AD0C541BB5616DEE2E154
770DA585CA83885CB990B3B68EFD9EF36F2587EAB61F344298F597575CB2C029
3604BE865ECC64EF375A3C20F8C7EB4E6B5F29FBB3A42731D924AE9AD74E811D
D582B9B7FD5A91CA27DE8568354D7116EF9344B263DCBDCBBD7395E7B048EDE4
FC55848CD8BDAAF1CBDB396F86907922251838F974D98780249230030ECB9349
3E8B5CFD04D1C6362725833D8A4E864F6CCC00D06FB24AABF5A257553D0ED858
A3F0F693342681B4AE9591247AD874DD1AE8F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 91 /hatwide put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E9565E415A1ADD8D799DBC860C7241C3425690CEF396
1E819430D1682864C58153337FC25060E8616A43BD327DE4857EA028093597D6
31E42FA81FC031B96FBF8765805E8448498A675E8C4EA4E756752BA914E8285F
44E6D2CC3C95591AFA9190A83F109169B502A71C5AF4D24D84125C09CFB88460
FDF2820767122AC5CA895F5383662E4D73424B981451ADECE68DD8C07A025013
45C8B305867AE2707428D2A131B09D082C65C3DE6CD2BD07CD113BB359FA4728
F886
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: URWPalladioL-Ital
%!PS-AdobeFont-1.0: URWPalladioL-Ital 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -9.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Ital def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -305 1010 941} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB5F973DECC54C8130ABE
C8E23C8067FC409DBA23A469DC7C6C4F7EEDC3DA588EE3C5B2829D3E1492978B
F91C30C1912183DB62BA489418A68C3BD44566603673FAFE6C3DD78FDFC1F6A0
840DFA44EAD8A5653DDF2FE86B8BDF672707D2AAC76CE376C2C9E56EB95F30CD
75B1E312BE777EAD75EFA21114335130DDC559ACC1A14454397984D624EEB43A
C7BD688E270025A34A912884DF387744462E4F666099415F25F86999B31B0588
576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FC
F88AA072958C75F616D971AFB3D9116E041EE7B66C39DA4481A97509DE7AC156
CB43C5A85501E66164E5FC61F9C64EE138CA0D9A0808BE0443CF3FBAD13C63EE
E7E39F1D385A453E8095DB2FF5914A611E11BBDDB04D6FC55D51B08358EF7253
9B8E1FE26561CD5CA9661C91D264B3810A37BE373BF66FCB021E4407375ECAF6
BEDC1561D701A5885F4216EC592958C80DB9B8365D66A8E075A88782C4BC6161
F6B5246F49B14E4E086FD10E01EDEA5D95A0F67D9F6D16C093CC98116B652B60
04B7FBD451E536399DE7A8D8B8E0740228524FA5CF81735BBC72B976F955FB3F
85B91278057DC1FA6B42FF84B9F267188631A0EB7B4456653620151073F4275C
9B80D71B4DA3EF23BA2811F90A844D2D4A18C2D3E7C75DC2351F250E946C49EE
1D67BA5377ABAE009B18599825EAA89BAB6B56BC1177B32B4863A004CC7448B0
27D9F6030ABABDDED61E95CF4D02EA9170BBCF04E982FB170EFF61B5F0A3E39A
E4596CB6B478F6EA85D464460C3E3C301813928D1A4140ED2931D06F55DA1B92
575627B7363A7B2F52C2EBCB003F3168ACEADBC274B460104B32A37A35E08E61
6B4C58ED4BC82DA01AE19F2AFD0CA670D4CD12464788C7AF3C22AAE6B2B67FBD
72227163E56D6B000CA09205E5DC3FF0CA6BA2B37E3BFE57D69E497510C9A84A
76F6A2812AF05BE4ECCE8A4C95E1CACFF6D389DBCCBBE4CDB35E9AC7B9CA647E
44F7C88874A4BD1BAFEC8BF60722713355D2CDAB5789904B3FF364F59BCC30D5
93015B4C63E38A6105A0E23FA25DD024213A61BD7765AF40D48A4E4075738873
5E9C7A100A3E13DC621926EFA64B88D997BA5C7B7EE0E07F12FF891AAC70CD8B
D221C6FA366C4D482154A17ACCCDD59B4B3B349146BE95607A9D853DC7E89A36
171E129FD3DE07307E654F802F8390F412B259EE394E71C5DB81E4274C6D3180
106156AA2D5B798924758113CF894EB28A8CC9AA47E6529B2B2DBDC0E8E0470A
88979A0D9076C69C0F2643BD241202CD2BC2904CB8B7DCA56313B998828CDE45
8A37DA4A2A263F77A707FED54222B02E04628027B8CB093E58991865751E5924
6825728359319B91633EC6E7D1E7F16B2DAA2DC8924BBFE6D9617A94D985DECC
EAD4372FB593E4E0C71FD738E5951AA7D2FB6551E91712F26A24863A924E7A80
306543BE55681C8EBF629EF51236027BCED24D0600F61FB1746F2706C3709E89
5E89D19FE884FCE692F06DB74C169CB5C33DD9D71CE5ADDCE021A7C84541082A
2FE66D6852481694A0A0E70E5CE0FB43E820AACF407DB268F2760F36FAC82E48
F1A1A43105912A559D78274189318C9557587934B040A99FBA99942BD86CE4B4
6FF5C69BABCA7A3C511EBE5F047EE68288BF3DE1225D981C287FA9BCB9A3F6A9
27E3BA6903B35183A80EB555699747DE2A252D5C9578091F53E88750944AA110
5951D105D651195041696C183D62872AA2923D802D94278A2835CCAE2F4D299F
67168AF7E61F19056BD1DEB7FE32A4F4EA6F97F06F469C78589FDB9EC33A8371
EC60CA1EC6E1A556CD20AAC23DBD644F0B3F94722F0A1B4D56F1159949FA81B8
9CA8C81756274E6697F71D328B75CBCD653245AA60D404B3187D0FEB65CF565A
912A654E29F367D05C12301556F56D22CD30A08546779163A3522EC5D739DA2B
40EC360B28CD5EDCA7F73A5712FE966406865A14A4976683C8D230B9D330EA49
D7A25913FBA9AFAD1D16A51E2766E9E2C1C8D0177ED88EBFEEC280137117D6C1
E448699AF7F73595864151AB39F5309A89AF50583ACCA4DFD8965FBFA3343612
7BEABFC80447313C83884A3EC70B2B5B3D0AFBB36C0D76839FA5D28C5890E78A
09AB656294A1B17BFE2E595E1EE2EDF7BD08F2EFD59C7EA11F70FA5E632F8DDE
862922A8F80A0DD8B36675E83371DDD080429FE8F754462F21E9A2F3C11C5DE4
ADCD17E1B1862BBC2A736B311E9FDAD71AC751B80C6D25673D893C065BC59C52
87D92E1A8CB5A195036AE42DFBAFB1E188BCBCC2D016EF4B68FE6C549FFD52BC
02589DFAE6B65FEECD0CDBA01C3098332FD8CE6C0A393AB1BDCB8E52F951D86E
0E4C62BFF030F461E614AC870A28CE03E4330AB6BC5E2CECD68B9981B2BEF1AE
D8D00A3AE5741A3B45F5314F648AAFD00DE61BF6916152F9389D29204D8D0EC8
AB2AB23D244FDBEDE098610F35EA16B5FBABD255CF3EFD024DB4C40E929960B5
F0AD71B549B277F6083ACC004F7639D008DF75543A50B6DEAEFDF0C4A0A7CED6
79B25D1AC2161B2251B235512E1BA379D18E171F04F6E164C2CA9F56BC5D4E3E
633D6C90AA1C4E12532D0986434E774AEA0ECC1FCAAFB472308B9F9A3F4B8993
2B9982C8D4F0302A61C41E33E468A5DC9D9AA36A3480552044F527BB093BBB0B
B97E1938BD2DB695C237B0CFEF3023EC12CADFC0ED0B99C7A4855B442011F240
BB7390D79EB357A06CD67E208B7972FFCF18AE6B2A4853A868208FF51A82EDC3
B5E3FB51D65779019E678CC8BAFC026639CE00ED9FD3A790512B937D3712B626
E7C8C75D100E1CCEC040B0D021B6FC5829DE821247F764D84038113FC2AA5BEE
BB25F619D672B6F2B1BE3EE8DAACF9D12B7CC4A10C4DDBBCCFB8EF71C45AF6B3
12BD5C12EFABF77C462DE98E72500536E302FD69014959F355C1052F3735556B
A843DAFF621CFA26BC36F7B271EBB081016E9B0A0CE49C2510C8F132D45E036A
A808D1D72B34E9EA1F42015C78FFDC310045DCBBCA49EB4131D9796D5E9A6CCA
98D3BAAA326A7FD662998E6BD54F3CD5A91EF2EF703BCEE9E7745FA2E670888A
77473C84F15F2BCD2249D705EF92A9987D4FC62A60B503C129D7C618C217F049
B4D74A7E4873889101671F4637AE61246DF5E024406C0132D29631D582200739
5A5D78C698C7366C1C453FD7CC6E94C34C3ABCAB6E38DD0C8EA24C39F3AC38F4
8E25EBF47F8E70874BFA751B9472F92BDF2803242EBD7674D7F3C47767012EDB
EDB82ABDE315589956AB04A848007DB73015E52332015EC91EC6C354B71A49C1
6B1E984CAA253EDD1188903CF2A463FF7CFA711A0CCF1D29B57C49B78F020E31
CCF14AD6193FF6E4EBDC77666CE5B83816086B9634467C602231AC8494577F80
41BE2E48FF976169C7E412861591F30417BC9FC908C6197461AE93B2215FF55E
BE12DC3DFFF80891D4613368CD55A2E1DAE61DA7501CFB8B6DA74EE3B5F254D9
421EC10BD4E457B775F889B9CE9BE2A646D9FE414721789A75DAA5061471E7C4
569AAC2504A118A7583BA3071A842560C76B893638383AC59698E08155918C33
22DD1FDF56247DD3F111468B4289577AE0F9B80A27364632ECBC4F8546E7292C
BE21624146B44035E0CF964CDEBFDBD1242D519805F7798DE5E11DB3155013E7
E97D5CC0641B82E1CF7EECDC24FADFB61DD4D9B896ACF92E99F1D39E35E4861A
6CDB7B3B7A215A0C0C31AE92DEF9BCF4874F45BACA4182EDDA86E5738731D9E8
3427C7DCCD17B9F360B33ED05C411626B30A20CE05DE758BEA6A3BABCA1644E7
4824BCB2D59483918B157CA4719B2B4480B5E84069E3BBBC85576F497EB09A96
30A006FF0908EA1795C412FF92D6A134748872439673064D4FD1BA5C41A32A2C
D4E56C03FEFE0AA5201A69D83BC517F09C0F7D604CB8424CAF7BB89C7E140F2E
8F26DD113B56EE2FAA608E9025109E2F821C28ECD4340FEC1FCDDAD347B26366
4AE6A30E3953723558747BA233EB5938B58008A2FA7DFBF7C9026CEF9CE1362B
6AE20B9B066AA3C20FDEB4C54C98B028B708C01494CFB36F5239D236E560C667
E771ED2FB13FB2FE1EFFCBC719BDC2448BBFC520C1C624E46C02C72E13688BC5
0A383020829462604E0F9CCB62135BF116DD8A23AD2C2B39CE01BDF9463E1F8A
5E268F936A1015AF245D194DF08AA86E554A2C85DFA912E47FC61D09F44A31F7
D88B072B10C44A60D98F7E5ADBDA2E342B4285581F903204BE86B52C36213452
C2AE0E9177DB0B86627B9DE43A7CAC25E8A1DE64CEEA19D0BDE898CF328861C3
CB4423FD2C0C1AF3387E021790A1443758736475A38D8E5132C5733B40095E0B
C6E3F1E0E4666ABFAB1BCA3EC75326188E24F0B4B8DD91CB69558534CCE31AE7
E157D0B0608773CB26330CB49738D781176A3F7E85594D2527389A745A7492B3
39AF758E0458C527D07286045CE90BA963572C23DC7D7B9AFC3EBCAFCF7D634D
4C558A8EFA94B165EE94D92CFB878BB725B0E81E119B3C1DC388CC401987C715
206297C0971364CC5B83001B07895F013DDF12D2DFA60982CBC90F930688C943
29B65E14F9AB44542063A45F21700DDF5F6CA1D87A1C83530D8337BB337D4E9D
38D33E46E3F79F2BC92D811CC6DABEB83EDB80685331C5C5999B5AEC80E5C652
4D9749899CA0ED00F273E0DD044A7DF055D633040BF5853FE1629E81A1F0E02D
8D3A3C8FAAECF7839D20329CBC518ABD406BC638D2C3C32B415E6507F6D47168
EC1868C6C61B7606A355471B0B7389DD82B217D6579A6EC95DFD48F453D8FCFB
6193AA3D939EA7116739E9CDCAAB3B05CCB2CB6248E85AA296D1854411F57CE4
BAB542981F079D72B6E130BF612F0879B86426F79438ECA26C98F1ACDD473A35
30E037CB89C141893DD88FCDD1C4D62E19379883B262C091047D66AC0F950B8E
00AE6DC61422A78202E2EBDBE1AB22EB917AF9B1978DEDED2DA0657BFF165C4D
3A57DE1D8DC38A66B7E53914C7DB86A332E359ECADCF88EC111BFD851CE542F3
A5274FC33BAA02478458CDB0094750AECCC0369CF73A585CE3DCAE9F613FCF56
9785FB2849460AF041D5C54E3F3E369060D992F30099A26BDC5D7B34CC548989
8E0C4212EF567A0A4061F1909488B3C1295FB381FFE037D9126BAEBC87784CF1
32253C51B9E6E27E63511004A58EFD38E704660936578304F71C1FA2FDDE88E3
9346DF44036D0E173CBF3C2CEE2DC1118746EEA119D9804673924FC20C107C32
7C67CA2A599F1F4BA039BBB26179F2A72599892CE35E356032FE4ADAED9479CF
2EAB4B5FF2D869B2B6F4D018C05186F56A089E390113DAF618B339808C173E08
B88E857A01BAA2C5C2C79D8578DF1E5081EFB6EBBD8D1F3160EBA156B0767661
AED97F88AE5958686879FCBEB97AEE74AD0BC6BFFBE163DE6DD491740660FFF7
22FC16F6703B9C40507AC9BDA15602060657E6BF7928523F9BD71792AEC6465F
89F9EBDD06968A80A8CF7BBB5FE88544F1A672DA6A04C28C460DA2A483E9826D
8813326762B1395C7F900C2AC7BDEF8FB9D4574698BC8D4E374B305FD7F8AD8F
8A00E390D5F6F47CE1FB3E1E056247EAD3BAC1C4FA538D03872375F0733AAA9F
00AA3A998A083CD34985545A41071FAD8EDD01651746F55BAE6D20F605BF6BF8
2584F6DA9923AB74192AF4204EC8E64AA8E25C4E69DAA10D9AC7B96C817AD352
B5C4397872ED1E0D1FD6003547D36E0DA51E215709FF69322D42C893A3086ACB
64BBCEBDBC0C99138A50E5C0F57977D929DC9CC15F0F2D289A653949F11C130F
37E27A62B17E62CF33D54D6E5C8CE317225BEED285D6C70FB97F26245ACE9386
207BCEB393F90304CBC796437C5693AF04F8447E9EA649B9FDB77D17D0D9A611
2BF0D1484EA741D84587FD6160A96E4E5ABF7653D4E191CA3B5F623A44BD83E2
EC42DDA8D8C9BDCF09E533CF65B356583F99E3427E66854256BB0D53403A5369
E4733A14148F5EC6C819551928382991F2F2010044E0A9AE1833F61B79BCAF19
E1EBED04633937C525A1417C388BAE1E493C4B65A3E1A16480B4631B3364AFA5
4E4D86FCBBC35FEB64F2AF634500AEBAEE3C4A89B891B06F159BBBE9A3ADF4D2
8B5B1D93F6CFAF2AA7EADDF7AE8664AB000BED240FCD14E7D6D3C56729DC72E2
F22DC62C985C40AD4E3C7731C268C6BB20D3A288774C5FFF18AEAB610D713D35
3CE6490C7137240CC24B6A055AD75F361396C2C0806FB0AFCE6A554B51B4E426
397984A2D34E5CAF341464C9527DC7CCD9C7FE75AC64186DFF2F665174700ED6
6D26567EF62696B2A67AE06FB32758B13308C0AC010D34CC08965BDFEAE2DCFF
F2B089CF5768032D5A9B79EB9C3FD268D9CE3AF1C3E263DDC65604EA65B592EB
76B3AF857CE1181971248AC23FA3E96420565C5CB98C61D2A91A2833CB603E3B
FF3A51B5D74CA3C0FB908B164F79684C5338FFD23EC38EA2BE4A05C8DD7343C3
587E311484D005A7DF1504D75E991E7BB682A9CA4DDE2CE5D0D1FB2A8AF5794C
00C7BFB35EF8D37B4766EF840E7374C5EA086AD7E9708A0F4C33015C8D417C0C
33EB54B7A2B52527D3AE8F214494EEF9B605BC284EE34062E3B392D2CD3151B1
6F682CC210D4205272A9AC765A0BBD8CEA4AD8DA1B8BD3A7C08ECDD2D12DC0BC
5DF2433F9D5D1004E5B7FC64F836D4E7369C37B8761341D2763A1FF764ED045D
EE9B9307A872672604F139C499CC23218FBBA2174F6F41224A26E91F97298F25
23123F4F6B60F5114D530140C1CF36EE4250DCDA2F35533B6A393EE072CE17E3
36BF1EB334D0978C073A1C110CCB0106DBF37D3D6257B109ED1E6C5B91D5043D
F8419DCF881E4A57135CE1EE3D8A6BC25021CFE17E2DA671A7FA88213B596074
FE4D777E068ABC6D376C4643295F769C4B52529A054F6B673D04B8CAF062CC54
73C3646255E70FFB4731F12C1375B510D975515B78A7962FCC1435C2643A5293
51200BF30403E3FB1E89BD614D7DFF502C408B4E2531D02747F8BE666E6C3844
B900DA59472981C137D7CA5EEDA4FA3059151FD1AF7675B583D2947F2AFF2E0F
FF984F022FE12D3D40B40A5BDDB2E9F6600943B0A5D3440DC803BB2FED25465F
BD4E5745399DC1A9FA200F391EED389AC49F917FDCEE9CD7B83FE88A4C5830E7
293505827D992EDA8A765317A07FE664D88B56E6F9CEAE61FBB850C398377A8B
3B9B1637442B04957F823E28172CB109A3F2D17B5AB13DE88B44F7BB8A443277
B889EF7E4CC0DACB523F5E495966314912DF9B3B6155D6EF7C1F4F8E7782F6F7
4637B62B87368A39D854E88418B76FEDEE83E922AFAD93698E01124BBBB0EFD5
36F63633BBA0F7DA27ADED27D356A38D1E2DB2387852D5E9E31A865992FFCC2E
CA2EE239EFE1D7FA765D8288203DE7186B1306D8AB54F4A34C5EE424E0951A38
99B3ED8BB426AA2EC6A919B9E416F100933B3CB44CB361ADCD16B80A44BDA207
CCBE3BAA8158D6E2D938E92D4B3F980EE5210896A013C37B7148B71E42D77859
28B43142E577AD029B17977781E3A0016567E27AEEFD0F345B3C97E442772CBC
4240CDC4A30790A98F2ED8F648FE2285E31989955CBA39BE0765A7728CC8E156
84C683D992894DD9C2D5A1D34378914075B7A31ED94233A9690AA696EE868318
2DB185F711441471ED972022B4D84CF007C1D9B1D446068CEDA22379CE386A13
FEB9568F66F15D2B2A9D775884FC4DD9E2B7C8DF1C241030B68FBDBA63C29C3A
6549826D578FDAE49D71676C77EBE2D09016E1AB71D7CE23349C53571086A1EF
88110925908148F724A5D21C5660425580C68F07CCB083F2445E82187139FBF0
0F1BD506EE89F518E225C5ECBBBFCB7D5E1BDCF7DF04DF478849F2251FBE08FB
8C4BD04036C06AA4752B076F4D900E98FDDAA71766C9B0D3440CE049E4FD8F11
83360FA32853A9611EAC664000A4635AD1B4BB6FE307C63F7EE749833491AC27
BAC582AD3F7DD4F4A24F6CB5987F0E252536A0DEBA51398D360D6B412251BD9F
A494230A55126506EAC61B0F843194D354CF38908FBFA5B2216D70B911AC915B
5AA7F363888E2C465AD7378BE26D95C3274A69913BA28335724A70724C847F33
E893F74D9D7C1B39F7243D600CF7EEEBE2A3ED29C41AC75083665FB7897DEECB
B7A09EEA92B031C784A1C4DBF2811D2A5440E30E79AEA3845BB0CB797F8AABAE
D6EEBA8BA073EE6DC6406131859F597CF59FD860792433C3DF19EE7B5C27E7BE
0538ACEEDA4F801ECEF555891180493205BD10AF9F141343A313A28A9AB35826
266A02EFF7027AF9017AD7F02BA2CFE5C9E1E291BB772B7C285477637443099C
95D62D8089E4AEFB4B7B99364609108C991211FE73B1F40605BF29411E0A908D
3794435F4120EC384BB4F19712476C7782BF11CCAB888AE3F98DA779BC4F16A0
689AFC47D623761A3EDB5CDFA7918073D89DA1A5EF78FCD1F235F32A62F24157
0AF85093EDB58EA45CEC2AFB0B16C4540ED9969E2056A2833DDD0144B44736C2
0B14C1A3B36903D8020CD263D90E9FF1ABFE7D3672D76A748A9E277FFDD25F54
77D0C2730045CCE64066306B98AED8E8A2C89898F7DFE125A1E17FA72987C464
D5A507A40F2C061D1DBBC2F811A4F8ACBD8B5A05FD0E43A207F5FFA4470C68A5
9CE1743F9EBE66C0D54F9300B1A5B261A193D64E3AEC89CE84D538540D41FEB0
4431DCD86F32DD06130AFA2766FDE9E7F187A0E356F6F36D757708B42A5E2590
53C58C8DE2A284B6325F4AA2ED4E09E32A482026D3180EBE8F03A38A573A4C62
2CEA332147C7E17F4E7D1A3D592C795528DAD9E2B615F6F492F8D3AA12B7E292
8E87443D6FE0697583210FD03872BD87E46D78B810895316ACF09C0ED35D899E
1530A61378549CD94322A87BFEF9A4211E2D9A95A54693648881DBB4C9005F56
BCC025B22B2276C87FBB4ACCCB2A1C8F43DCC32331D34FE30953745E24926C9A
E2EDC18CC368C55FD0BFBB72B49DA6F49C7240F00F52C958648DA50996583B43
EBE59F7AA29B4339C799EA83D8A431CB447D19FD60F946A660DACF72BA715467
566C0BCFBDD72737EA6DA8147E273879B9C1E83A892B9734AE6E3B0BE5018CEE
A86FBE5B2B3E46711774FEC1F7707DE1DAB83C34AC97C66C21F4CE4812FA0F00
7C1282089C5D6840440E36581874A117F879FF9662B29E516AA628403EA292BB
C6F33628CE825E163FEA3BE751DD38532ADBA6BDFA633EAD07643CB2C30CE907
623303ADD6029F545EDAAF9896D6C10980A09DB34E084C8A754E31B5611D1147
EB065D30A883FD14933F4B11CC112DE73300308ECAA304F10AA59C7F68FF91DB
97DCDE55F701A63D8484D318A75C5CABAFCB69898E3BBA20BFD3AF672D55180C
7250CFFAD98DD1C3AB3D525F6DA70A332C61623C1E889D8E9487FFFB4C55FDEE
648948F92CBC5FA902E41166C1D7512AB6E16FAB0A633BD4BC90EBEBBBAAEA64
FCDAF54E6E96E97520EE266E21EE88740E10DE655749E4C9F6C7C7E6111B9213
3CC1490D70C0E83B6D78E41B6FE74024535D6C5A374D7E022625ADC54C39C18A
263728090A14F56ED1959BD60C7F7F5BFAF8497205D4BD5B2B514434BDDCBBD3
5418E9E9DAC3479D3309DE69137CC56801713D3B30B95F41BAA04890239EC93C
0C768F2469BF37A64E5D3D4F344C2CEF37572E4BD892DA454AD091A9E52960FB
DFCFD3062E20E8B499829FF1595B0173B1F97F529F83A5C47CA9F164763793D2
2903E14C33292CF10CFD140B9ECC1D62B6E9805C0E402F94C162D302069B06A3
29F9CED68BCE525CF064D003A049D86F265D8F8C9A6FF0EB51A222FE39EB357D
EBBD07669E81562512E1442CAB0A9B157B2DA7B5966752C59F129E09954A5D25
E64C4C87D8C6ADC1032AA4424096D623DDC7A899010D8888CC228152D377A153
E804C044FDBBBCA00A1A2A65DC032238ABF249F8FAF9F650A921FB4FC614C5B0
315C0686672D5E15E5EBE4A4F6EAD2C591E2DAE9B86CD4BCAE8C4DED62C4A0F2
2FCF6E7CAC7B39B96C39C18ACD1A1D2A10B642959C1F23C068BCAE037B197883
CFC0E4D603099EEC829773A327DDA631C9957514FCF4255465360B8EDB948034
EC3A9CBAAACAF8ABE38C82AAEFEBE7EB25D12BA8F73300F76BEB1B98B80424F1
162AF38085E0F27D386DC1C7BB20303C0B8782544DC4388BF742ECBB0EDFE043
A6513E009AE9F75EEEB8C0BF8B61224EBF24FF7DCBF1AB07BDDC9ECB9D0BDE0D
8EF291202E5E17B36265B9FD8326248FB04666ABB7A93BEE539BBB90F117C8F6
F3F8E5B9CD118E5F45EDDF77CEC24A995CAD4B55FDAA982F52A94EE87446DAC9
8013EC8ACA7C5AB25AAD7A29607341A6A797C448305EFAB24D2B774B0C864B15
0E15085FA16DE638B124DDF4184A7B53E6215DA92419823EB14F72FCD9774858
49628AE10B7C079FBD4DB63D6ABF34204270B8740E7C791A79226FE87F0EE66C
255DDFE7701EE2EF8BE66172105C82033BCA04C58DA64B6B0D788F4754887CC6
713C383132091E5C3FB5B4293601259975601B0DB4B06101E2563601D4040522
0DE1930F17CC83A0867DCA93BA6639E591D35C08AF02091005660D3D2EE18EB3
289271FF48B3E05DEE4ABDDCDF2DA900B5CB959430FC138E961497C79AE0BF2D
3E864950A79331C58626D54C55195150983884E0E5A9AE1A33F056F777A1EB63
CBABCAAC649018F0FF57E8711E9E015E0D1D3591BE920ECBB802F37FB8E5B2B7
2496EA9E2F9D5C75D42349363C27DE6DF4AACBA61B3F096A85CED13C34F25434
D80E2DD47746EA2429908FC65500C95AF2153CA0662A100D7D1C16C1444CF313
653F3FB6DC45827304AFDDF88F35E17005688A0B994BBCC7FECCB190A1FEC5F3
7BE2F1908DF6B9368142FCB346685F58E0C3008DBBA6D249C73275CECB83C461
7846FFFD9B313909068DC1036FC7861B189BAD4B0D0B79043F05E5563B4B1D02
96D2432EB7116F6CD1D76B19DC3EDB3678BA38C70DCAF1AAD38914345AB7A32B
A2EB819220E78B7E946D8BF1B4D00A1BC1F446B6C9DFD3680204E4843A2C22E0
E52E0CF39241CC691F0287C6896A9EA75C1A669724BA236EB085A6283B59E50C
F26C2B5E4C9C955179E7A8A9A86B7E26CACB64C284BA1C24EFE8F138D8DF03F0
B98ED3E3A6EAF40C9CB7BFC1F28D2011FC1FFE0A04F2A007DAD385E961CBB71E
D62827D2573CCCCC8622109BFEF28E49E7BBA32C646A9CB7DD02E1C8099B5594
36E1FE78DCC235F173AA92E25F5D3031301E5940D065EC2522531E223857AA63
202EEADD7303215E0EFB41CE8C1845ECA1525CFC82D8561CEAB3ECAF0E0830EE
3D7C3602DB63F5168605BFA4F83F1863EC5B654F616218A9839980B43C855F49
8DA8CB3BDA4E116F50FE51395172C24635667444C5E57B742497A3C21B2001DD
2DF3976293B9A0DB19E2BA1720C03B6529F67C68E967A07B667FB786586B50EE
3D9B568583227B761B3A41E6E7BA8716477C82A27711452F3D41E278D284CF81
9EF929B8A10D452C2BCC7B5241F011CC0055E1A084D25B319547AC7569669636
F4593C75DFA9B6289C6455511CAE58D3EC1B5F90FA75C528F0A37A869E1F4934
44E9F735A3EFCFFBD7056F71C4EF9F3F47E3E0FAD25A99EC9295054ADCB5BE6D
D35FB1484A094BC64958D4149CDB8DF8BF332C2AB32C01378EC29FDC240E40B2
9B65EAD62DA8C17C15F43CD508A6D149949E308D73DF1FD21E5954DAB0FE7268
4025A4BFC93831F25F8443256C1EA0B583D29143739877F1247FE21258800506
9228D33AAD2225592CEA5B55ADED075CD23E85E00974DF8017AB3E31071403EA
B7A88D78E15080B28C7F5FE2380BE8DA45A701565CAD45104771AC5CA54019A5
E8392A26CE16250B393CDEFFB0208B8A8F9C52D6B04A7A7737CC010CB55B1B5A
21A3C9F076776B781B199BA413E53129CFB28C179F02486DD4969E96BEDB7027
AF70DC95D304744D1B5CC24534A4659F73CAD591B50322A24B5938DEAF18
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: PazoMath-Italic
%!PS-AdobeFont-1.0: PazoMath-Italic 001.003
%%CreationDate: Fri May 17 11:17:28 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.003) readonly def
/Copyright ((c) Diego Puga, 2000, 2002.) readonly def
/Notice (Copyright (c) Diego Puga, 2000, 2002. Distributed under the GNU General Public License (http://www.gnu.org/copyleft/gpl.txt). As a special exception, permission is granted to include this font program in a PostScript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/FullName (Pazo Math Italic) readonly def
/FamilyName (PazoMath) readonly def
/ItalicAngle -9.50 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /PazoMath-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /alpha put
dup 98 /beta put
dup 103 /gamma put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.00100 0 0 0.00100 0 0] readonly def
/FontBBox {-70 -277 902 733} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB0A7F85C4
9167E58A181840EC46CC379EAAE07071FBD381C7EDF50327298FF86A6A4F6812
2553C2CAF67371991CB73DD3F08A7BE3D12E5D0B885AA74F37D1940EEE91E918
45D5847CDBAAB475B142774C14C38D20D16027AAB426CFC43043B69E67862958
8D309D463F6EC259BC9BAB2689D1380DCBB972BC5D1C6C0E70024BB94743B0D3
0E708C018C6FC49FB3675CB4742FEDFE96626AA9EA7D3C796CF48BB4AA39B8A6
F6CE05666C879D0C0A32D94DD56B8F9D70D13AEB18E9CE60CFA59B7C09A1315C
F5CA850E22F7A7D830CD703ABA72AF0809353FBF829BFEA6DC6BDBF71868E50F
4FB5CF3E74205306F4A0483E4392234521E9BEE73DCC872013FA0C00CEF2FCE2
56118ECB17B68E6CFE34CA1ACB4ECAFE88D23CEAA9A342E6F99DF3E6D5C384B9
73331941B9FCDC23DE031D356228C697FBA2B4B23D1F6666CD4B46786097125B
BB9405A45FAAF63F5368C50330336F4B21261921A08C5A26FD946FC76DAA4D31
DE30F498228E6805F19356249B0CB284D0C92F91C19B50408B9A1CBCACE3A2CD
13642CAC2B58B5C098805B8D26695ABFAC108093696675CFFB67877D51E33527
8A9A4191C6A0F004CB20C4A34BC4446593A38EC5CF591C6CA42E6F2687735A3A
91BA805B7E95C85D8B19F58845029CC7F63FE860355B39504ABBE922C21E84CF
0223052B9600CBD2D7F195ADF94FB5BCFB53393ABA60795FA7875C01CBE21F84
3DE9937E9DFA1FA1FC62E3D51CC8F9BD7B033B181C2E360D4778644FE826B56E
67BBD6442947964BA6234EFFE258C04969109B86BF934FDBDC3A2EDB5A22A727
47C69DE261E264E6D19CE391C9812D7953777F081C42F90C9A7A72B39A1F0DF4
B294926C617885AFF629567C9F7AF2CABC182BEFD7EDD2AE8AA82BF9D60F2FA6
1048F1FCA7F17ECB7CDB1E29C436D1A232F19E436B8B6E503C2E481755CBA7A9
8BC9F176A27F776F07A7CA94474DE1277A94E6D20255339FF569DF7E17EDDE5D
39DA2DB64A52F694A638F0F8C219CB92AE0B4D757CECF555EEA6E35FD7E5082B
B68BA1797A58AB12362DD1EE58216467D0BC24C0033AEA39A983E4ACED244E5E
E11466590996AFF30FE0843CB3324ABBE848D8C68F1ED037F1A1CFE6FA3B36B8
EEC999DA93F9BAA26EB30141D204F6FAF2D5E0C7A590D6C817424F81E85BF788
1E198C956F22008E81353BB2131A8F6ABA7456AF84581B35DD53F99E96005D40
B3D072F7F84ACB436A0111F8EDC3A3B494F3809BC20E03E4DA37DA7FABD009E6
5BBA5AF39B237C53D32176E0B17A5F655AB09BE3DB0C8FE861C3B9182E928185
24078C0361DB2F6EC733F5EBF4B339B9233DB80680CC93187A2D8DCB4B75CE8B
C658734CB89DDB09053B640D5611AE1A5BCBDCFC8AFBF4EE5E7A2C6227B341BE
13F628CBBE00FBE2486B329E785A8113B00497A08154752DCC6B99EFFA417DE9
03CEA643F8ECBE4C52A10C03486C133C2E126D63B329E4FF36D1D478E7E56F6B
BD4476109B5DA96AECAF3A445FA0805AE960D06C87661AE6FEDBAAC6BBA86ACE
DC40036200C3BAE0532181AC959746FD4EDC533A575B32E6A9A58F9406572434
1F907E3E045A1E8EAE967B6738797AFCF77E5C4A3292CDA8289860BF8A14AB6E
55B0B851D2FDA257448B557E0E3045C80493B3ABABB911186600AC62FEFFF4F7
754FEF09D7AC9FEA3E44617753BBFFA3EDF0966D4A7F5056F35A5681980B7728
5AF53F0C37CE00142A9692805E40C79A86D8858830DD50D4A0FF28CBF3E55CCD
801E9C2C7D246C6BBBC779F84B6DFBE0E673604D21ABBC45E5D0C0F7D8416730
AF4BE4FC931E965594E0359BFB356A8CD7124C119706E8F6070A92ECB8564959
6050EDE5D2768687CC471A1EC7186D318D849C05B0EB93F73C7A6506BC917B84
0F304A2C9A9D22859D14EF8F3111EDBB246DF8911317DE4C75D695826A465E78
7B6593B8270723603F097803324E2127A46E9DBA4D95B6583129FB837AFE9E5E
A65226535F722426F4748E52B9A0FC6005FF4097D119A49B413FD5E2288A989E
43696F3ECA394C284187BF757D1835465DB7CE3EFF1B13F40D3F8D619DB75BBA
85281C413245BACE3D563741DF251006BF7EBE753A7F2B82FF750829FE883F2D
2098D94298EEBD3E93E848FDEB52363762FC4D1625FF8FD008BD4402918043BE
DF77B840B2BE0F03004115AB6ACFF86C5B057FBA8A473CF7B639728E46748192
F0F137E33EB9D4A113F5BF8F391A1179E03C5967CFCED8C63258A3D4FCA3A07C
273ABD8D91D9049B6E71FC3C112A2667AB420374B85A3C89DCB80B08AC7708CB
4C4E9A8C6C0B36B033E9CB67097BA5E013D45699653AA4927A440959BA859665
9CF38AD3A1AD844B996C9EC9203DF2ED2DF29C2AF195DBC92372FB2E5D15C8D0
9D13B0A98AB430342A8C76E4521EF136E11C0E801D5099765AE51E69F5A96C3F
D32EB202CFC785BBDD2D86B42FF91FCE7E06435BB2940232865FE583461ED91A
90CA5B743636AED81E5142CC0A7C12AD65564EA5B099C094DA672C9D042051FB
5E063F228D081F67125D3750E3B00171C322102F98DD2B2602CAF403BB449F19
BE418B41F69BC01816313959F4944363294D9C62351B3C4F287019FDB80F9ECD
6C8B4742DE7800D31AC5B72EF7B5F51324BCFD2B6A49A29126C833429B2152F3
5DFA47C7AFDCF6ACD031363C8C076E141B2562D0E6C7A10355E2B7309BC89E95
4BF1CEFD985721947B2D0914DF69CD19EBF01385436D051C5D6C42DEB272121E
04EB4FE373C62B46E51017AC171D87F875412CB42C58C407F114DA6118689601
D649153B47EE62FB1C7776907BBFD5C48711ABCCFAD9852E2141225FA4CA2BB8
4784198CA74F7C98CD500F077B9373FFA51BA00682A76B7A0346560AC370262A
7BCA0194971746D20F14293AB7BCD3588F934728841970CB6B7ABA04F58B43E3
C803F6D9775D5A89CB70ECB2D0981A888F3CA41F47BCAC7A396ED8A392CAFAD5
E326844671B0257934D394E87A6456A130285CD9F03E6CEC276BD0E2CC4827A1
2231824D33998739D8156C990DA7202D5420B1CEA96F453F70A47FF48A94D341
2BDE32671D7D0683ADC309B8E9C20D6D8B6A9045C84EFD79189114DC50ED19B8
F9945D4360133573BD45024E85DC6A76707FA2BF7D55C48F00B5A3937777DECE
75AD5DA0B8D451A5CFE1C83CAFFE9D65FAA225B63F2EE9A00A57A9712126F81C
F5ACF91A71D662D31F9F275707A87245C4AA982EA57AA1B532A92ACF0A303995
F39ADB24EE400FBBC81962FB4C6B94820AC799F7E41EE8C987669A4358A52DF4
B10060132F284A65BC60860010F4AD1666FADBEE9F5A713798E5A27458AE5CD8
5A2BB3B9A92A64CBE10CE4950F379517DD052871486F2BED243C5B68739AAC06
A54668727ABC09DB5361FBE665D18B147366DF45602DCEBAD6EFBCFFFDCE7C35
FE43A062FB7141E8B7130B8FE937FA423F312097D68AF1470957DB0588B35DDB
769696E7B93C4B5B1ECAFF7DF1E9D18EAFE9146877EDD57CDD530327CCB8AA8F
40630A1CD5F953841088365EFFD3C327688794D5F4357A7EF854CC3988A61DF9
518FB6439864E72F81C68AB33C1842C7A6AB0A1C532503E21B0138111762C901
BDB481C6B743ECF4B845A17C90F179D020DBF00FE2A9FFE1CDF1D897385B586A
774BA68A318AD340D5D3A453BF4357EA28F73BB19045DE321B24563099B358AF
C4E6CB53738C5E3BD94FA960DD96ADB2A9E25B1DB0B17005796E27009A28F9CF
C933250D63A75BA9BC0C3C5F0D6D312AAA52561878C238CEDFDAC59ED27B628B
A4D6D65FC6AE8C3557815373AF49E1E9C0844F1187D7C1083A8131D2F32683CB
577332D44ED62B8797F5B6D1765B03ACAC094B887439FE225F036AC09C7D0CE9

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Dingbats
%!PS-AdobeFont-1.0: Dingbats 001.005
%%CreationDate: Tue Oct 19 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Dingbats ) readonly def
/FamilyName (Dingbats) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -72 def
/UnderlineThickness 36 def
end readonly def
/FontName /Dingbats def
/PaintType 0 def
/WMode 0 def
/FontBBox {-1 -143 981 819} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 228 /a174 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB737CF9024F3D038DF9A0002D
8FB689C5F5000C3ADDAFE55EDCBC4E54B36A58190743E32FDCA7A24B64F5E7F9
DC901DE44A25E99E322B3D3CBC10C0412B0531B14E81134FD1DEC47BCB7514E4
64E7550B900404A017C92336BC792744F6F38904282AFE8C998D4B9DB7893830
A6A01872E9D6AABF66C4B08716A39BD9E5ACC0641E506B70430524E780517E59
81EAECFCF9798A634318B8D160438435B65CC6910E609F13A4963AEF2B2540DA
DDD64E0E1D15EFDD5D36D4FCD9E4D81E21D52784DD3DBB741AB5FC052F481B1A
A701AB81CF4EB85075726F3FEC0872C02EBF4D62F5DFB8990C1A0CC8161F83A2
D01108B6C4AEC3845BB4F61288F733429B7B558A225D582AC04BEBF127E8DB14
B59F027502AF59E46E0063B792D35B2DA4EE7DC3F2A64DB325318C1CB1A57504
3527B10BDC733305E18032A64A1002439BE13D163AEE778CAAF5A7A8D00CCCCA
673B8FA9A99551594E85F21580733527E4E19743F4C932D443625DB353CA959B
FBB3BC7996F1F3559E8738D7B3FF1FC8AAFD28CE8C9CDF3CC10A8E7DCE003893
8BB497D690310A0380F290601BE482029578B45097DBD56F52352D7F931A1A1C
735A74CA33FC62A04E1D1E1B023877B96EA2AE6E5E42682E9F4BABD109F039E3
CDCC6B0F9404DA157F91B61905B34C39BD0543872FEBA04FADF1DD613E1E9822
560851385E512B3754A099D21B332D2C9547EEE2B94EBC03B2D954DE0D64D28B
5C0305C968BF1EA14529BE16F9E7F147B08D71B9332ABB7B5EF1B8B60A8D19F5
22B497164EA1A20E17E9B45FE94A09D54FA74709C83B0824F96BC972F4FD728C
1FA8246E8033BACD0F4D746442FF7502FB9A65FD9D05BC661A5EE796BCE556CE
13F24840955D5ECA25D5FC1CFAAABDE5E5829487FFFB4C55FDEEE4186F068007
73406B1AD13DE82E06BF28F344EF9E1C083385A1548E07D3D53BFB514344C342
92D21193F8765E813F11F8120A746FCD3143EC96928A5E7817C83E9355FAEA30
1E46CF90726B8615B089E085065A47F116DD1C12224684F018F8BDD83797561B
4D47ABA8A7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 4 /divide put
dup 15 /bullet put
dup 25 /approxequal put
dup 33 /arrowright put
dup 55 /mapsto put
dup 112 /radical put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E94D18D88BC029D03BCECF28A1A9EB383A29F4786F0
5FDD312F87A2FFFAE3501DC8B6F8A70033547D19CBFA4606BD96D7A485AF1114
173E61A36005E19A72D18B890FB34B80E5A62A7F4D36AB00814EBD3A49B0BCE6
D2BC37C75751279635F4B890FA38E1E63B17B005DAA735A9CC774C3EEDCCF79D
895442B42A6043260F252369D7BC64B666C9FD6DDE0E4C0C5D094248A9971E37
8062BD1D860A54D8E6566C5B6DC3659352CD35938FD935DA260D2CB802ECCC44
A5DE3F20D5F32BF3EF6D3D697BE184A0E240CBA7D5F455DEE25C566E4A47A7EC
205BC9161F414198534504E58247C43A64DF5000F152560CCC51BFDC28EA39A2
87BC52FA90B5517D97F9CA09C42524E3E7229BFFCF88A0C02B217ACB82948EFF
F8339F71C3328A727424D9BAC345DEDF346C26D4D90686EE55BCF89EBEF659E9
571E7BF8FE5436B594D28BB1C0EA16B630B892FFD6E96F218DF3579685EF0829
FC38288F450C3D2320DA2D9FEA31C8283FFD0FB723E27669289FC7AC3EF1A610
5ADD4E199C4FB31258E9EE551A16A692B838148B3C37F79800FC731383E9E078
C3860479E29E9429877A4FDB2503BB6698E7FC3A814A58C9804E9A706B7DFA82
6C79765F640384C4F72D0E3759D7BF51937D441897B3803D511DCCA53F2C9A45
0D8900DF11BD6F32CC2A4835B65D796BCC347567C1470FD79FD1B704CB4FE1C4
F7A53B470906B92A52B6BA9B6F87B964BB0FB21B8DE3CF728FFDE0609739A6B7
D85ACDEC1A25CF5FB0AF7F07C96C08F06BB44BD95340F932198559CE503BEAAF
2FC1486A36A38219A7981742A0E436430BCE0A32030674FC9F757427E3002751
5E5D56227203CC22A71D73DD590A6A41B6D47CA71C73B68E0D8D355974D04732
D1DCA22C2C98A3B89DA94C07B0D9AC0DA4191C7C39855E9911E3C428EC712691
BE399A5B1373DBC34100C0050AE01342B1BD7EB7B87C0D7A34D6423C866C1F28
9FEBFD6FCEADDA0CF9BA3A6A8B2729074A309E44BD4D92E0A2FAB6FA0FB036F5
9E0C11A278081F9A880040F5622540EABE4052AB7C0B7119DE5F81ECA5105040
10FC280EAB2918C15ECED64EEB370CEC3A16647D420D248333BC7651C7BFE8F3
4126366BDCD34BD3717AC10A9715758B4088877B91C81D41BC90A91CCE16196C
4490D9B4D164414E09BE0EAFD595600B18DD61C213580AC6B9F3F0776ECD7335
77A147803D749979C765BECE9E28777DA8F0962DC1DB516C0077F5CF2BC072EC
C76690F95FFD3A8987D6ADF80C755BB8AFB5A619F7D2EB8459FBC5DCCEBF062F
4EE3B9FCDDB3F1D6D15FE2EC40E37A5C7ECDE13BED4DC01A64AD4E5153A2B83D
4E42B7B81DF7DA29F6F988D427F13ADEE3A79AC313C8D2D5BC6FD512C96E9B58
33851EAEC65967375C04C8037866016E8E16684A79C70C708447A907E81CB407
0DBA3D0D439F54322C093DEC1CE06A5DC332072B17EF6C9F8A4AF9E0532E0069
6BC7D0D9517A5CFF5E5ED930B484C424005F7C0B1D67F4CC41E5CFDDD7BF329F
403FD8A2D9B3B53F360FE8C905C8BB8CA33B6295299DED8B8142ACE0A370956D
0FE60BEB1FAA302DFD698B571A0DAF3BE34A400A5DEEEE9B38B9B3B5E3E4D5A1
2B621FF87B489733A2CE7E50C5A942F3AFFA4FE010340C6BD98069464777592F
32A5FD0DCB30B04523C7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 73 /trianglerightsld put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEBE0B8C242F6EA75
5CA2D45C688BEE3FE55AE3ACF0B696E444C8FF31EB68E7868ECB1E8069FE1F61
74267389141060BB9E7F70CC4ACE145589916E01771975AB24DFF6BC7A2AEE55
DAD15F08252EDFD92DBF9D82CD081ACF2464284F5D54A83BF518CDD4370AFF9D
077D74D8C7DCD2F7ADE2465D8DFA46EAE6ABE863D7AFBDB909A0B9A944A74D14
89DFD974588112D4CB630389A4F601F2870E6C6A01AF6C1A517F86D2C6190AFE
9B31BC892F0355E991C525AE6E8CCDE226F4902BF46D68C5DAFA90C418428EEA
7FE8502D8A61B50F46B5B91224C722E7211327F13F8133ADCE7C195BF3B07AA2
B353A44EA785E273ED52156C072485C5377874A00CE95E8CA6BF14A5D39DE3A7
ABDE2A6F2F91C5C4EAFABA29E96C569BACF9290478CFDD203BA47E66E3B89327
F2C88A313272183BFDF418D3C46EE0B1269CC8781E2CADC336A4AFAC6A910A6B
158DC42E97769D57AB2B2D70122634D5A247EE4D8672339B1D90113137D4F9B8
7901F18B38FBFF69D3FCB65A973610C405074CE3DE045C9E582DF0DC455AD6DD
65F47D33F454316DDAC452AE79C0C7596E61997B1C1F3C19B4A0FD935426EBB7
BC46BEFAE400803D67E797DBBFD885DC2D0892F936D6DF2322FBF59875757C36
37C45159BF0E1C332C69FDADB27871E711B7F00F668A0240AC9A7D179E386226
60DBAB749090871FD2316356C3CF06A91C46716827503C93150922D97E5DA774
EBD006978CBDECF5B347CCE0D73E5DEF603D68C3984D89641875C81B274C8608
360CB80F0E85619073C13E213CE2CD9638D809084927E0DA3DB454B1BED8CD3E
C75326188E2EE4CF408214A4AA87D2D24B95D35C381AA7D2DDD0EC02B2B7658D
F687C9A775D9EA3C72674A561939FD25EDEF04A2B4D3084E86BE8B45B2158D28
4F2D0E9F020D3FC6A0A62B66FF1976403B8C17B6DB619D0DF87CFC1DD1D68FAF
F1AF62A48B92A023EC0FDA8B73C48F068DC7B6146A0FF73318128ABBF13F33FF
7DCD3EBB6BD8CD9B34D5EE86C314F6EECF2F28EB74D60E31F7C6E25794CEB48A
306E9448AD569D93E0D16ACAA34C7B5AC9D031D95FA94F8161EBF018376B3906
F9886DC5470C9098E46006A8E968E2782FED1DFAA90D199868A39608735374B9
4A52913F25E79B7CE6E908496D6A7432C7F861BF53AF14B0B9CB5C10D56BC9F8
FC755012CF3167FBDC29D062680850691795079BDB9FBFF9BB3BF66D7D3031E3
1CC2B067F7F7DB21753AF1E53B757FA94068730FECEDE5088075E62D584B0DE3
E508B5599C789E817C016B307FC0DF2F4C8424F29E00856DBF740717B386EAC9
0E340AA4F24116CEB01623A4C092FCB1E6BBFFAC38DAEBDD05100D732CDB2772
E18723
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600
(MS2_2SP3_chapitrecomplet.dvi)
@start /Fa 170[57 49 53 3[62 57 1[44 2[22 73[{
 TeXBase1Encoding ReEncodeFont }7 79.4516 /NimbusSanL-Regu
rf /Fb 22[44 114[44 49 26 4[49 49 1[22 2[22 7[44 31[57
10[44 5[44 2[26 45[{ TeXBase1Encoding ReEncodeFont }13
79.4516 /NimbusSanL-Bold rf /Fc 170[209 177 193 3[225
209 1[161 2[80 73[{ TeXBase1Encoding ReEncodeFont }7
288.915 /NimbusSanL-Regu rf /Fd 205[27 27 49[{
 TeXBase1Encoding ReEncodeFont }2 53.6318 /URWPalladioL-Roma
rf /Fe 198[35 2[35 35 1[35 35 35 35 38[23 9[{
 TeXBase1Encoding ReEncodeFont }8 70.5687 /URWPalladioL-Roma
rf /Ff 141[79 94[58 58 18[{}3 78.8709 /CMEX10 rf /Fg
170[49 2[46 53 3[63 7[39 3[49 65[{ TeXBase1Encoding ReEncodeFont }6
63.0966 /URWPalladioL-Bold rf /Fh 205[30 30 49[{
 TeXBase1Encoding ReEncodeFont }2 59.9414 /URWPalladioL-Roma
rf /Fi 22[48 31[58 83[53 29 48 34 1[53 53 53 77 24 2[24
53 53 1[48 53 48 1[48 11[63 53 58 2[58 67 1[72 4[63 2[58
63 63 9[48 48 48 48 48 48 48 48 48 48 8[24 39[{
 TeXBase1Encoding ReEncodeFont }39 86.6745 /NimbusSanL-Bold
rf /Fj 194[64 17[64 1[32 32 40[{}4 82.1834 /CMR10 rf
/Fk 164[155 91[{}1 82.184 /MSBM10 rf /Fl 54[58 116[53
1[63 1[58 67 63 4[24 2[53 1[63 9[24 58[{ TeXBase1Encoding ReEncodeFont }
10 86.6745 /NimbusSanL-Regu rf /Fm 134[39 39 15[39 39
22 4[35 12[48 44 3[61 6[61 4[53 48 57 65[{
 TeXBase1Encoding ReEncodeFont }13 78.8709 /URWPalladioL-Ital
rf /Fn 152[48 4[43 42 97[{}3 78.8709 /PazoMath-Italic
rf /Fo 135[69 2[76 42 69 49 76 76 76 76 1[35 2[35 1[76
1[69 76 69 76 69 10[83 1[76 83 2[83 3[76 7[90 90 90 90
18[35 1[35 4[35 39[{ TeXBase1Encoding ReEncodeFont }29
124.811 /NimbusSanL-Bold rf /Fp 201[84 84 84 84 84 84
2[42 46[{ TeXBase1Encoding ReEncodeFont }7 151.68 /NimbusSanL-Bold
rf /Fq 22[96 115[106 58 96 67 2[106 6[106 2[96 106 22[144
9[125 21[58 45[{ TeXBase1Encoding ReEncodeFont }12 173.349
/NimbusSanL-Bold rf /Fr 27[91 228[{}1 99.6264 /Dingbats
rf /Ft 143[68 56[0 21[82 7[64 9[41 10[64 1[64 1[64{}8
82.1834 /CMSY10 rf /Fu 138[48 26 35 3[44 48 1[26 2[26
1[44 1[39 48 35 48 39 14[57 14[57 8[20 5[39 39 39 39
7[26 41[{ TeXBase1Encoding ReEncodeFont }21 78.8709 /URWPalladioL-Bold
rf /Fv 138[42 23 38 27 1[42 1[42 61 19 2[19 42 2[38 3[38
13[46 2[46 12[50 9[38 38 38 38 38 38 38 38 38 38 1[19
46[{ TeXBase1Encoding ReEncodeFont }26 68.6173 /NimbusSanL-Bold
rf /Fw 22[60 114[60 66 36 4[66 66 1[30 2[30 7[60 31[78
19[36 45[{ TeXBase1Encoding ReEncodeFont }11 108.343
/NimbusSanL-Bold rf /Fx 22[38 112[34 2[38 19 34 23 38
38 38 38 57 15 2[15 38 38 19 38 38 34 1[38 10[46 50 42
1[50 1[46 10[46 50 50 2[70 9[38 5[38 1[19 6[15 39[{
 TeXBase1Encoding ReEncodeFont }33 68.6173 /NimbusSanL-Regu
rf /Fy 182[64 73[{}1 82.184 /MSAM10 rf /Fz 22[58 58 7[58
102[58 58 1[58 64 35 58 40 64 64 64 64 92 29 2[29 64
64 1[58 64 58 64 58 10[69 1[64 69 2[69 81 3[75 2[75 1[64
69 75 75 1[75 62[64 2[{ TeXBase1Encoding ReEncodeFont }37
104.009 /NimbusSanL-Bold rf /FA 22[161 116[96 1[112 2[177
177 257 3[80 1[177 1[161 16[177 84[{ TeXBase1Encoding ReEncodeFont }10
288.915 /NimbusSanL-Bold rf /FB 203[353 2[353 49[{
 TeXBase1Encoding ReEncodeFont }2 635.613 /NimbusSanL-Regu
rf /FC 54[72 115[78 66 72 78 84 72 84 2[60 2[30 3[72
2[72 72 65[{ TeXBase1Encoding ReEncodeFont }13 108.343
/NimbusSanL-Regu rf /FD 6[48 4[43 5[23 3[38 38 38 35
6[39 87[26 13[39 44 41 1[45 48 26 33 31 44 47 43 46 70
23 1[18 23 46 44 26 38 48 35 44 39 10[57 1[48 41 53 62
48 62 66 75 48 1[26 27 66 1[44 48 61 56 48 61 1[35 3[20
20 39 39 39 39 39 39 39 39 39 39 48 20 26 20 2[26 26
22 1[66 3[22 23[26 6[48 2[{ TeXBase1Encoding ReEncodeFont }76
78.8709 /URWPalladioL-Roma rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 48 1
TeXDict begin 48 0 bop 0 0 0 1 TeXcolorcmyk Black 0 TeXcolorgray
-109 309 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -109 309 a -109 309 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -109 309 a -109 309
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -109 309 a -109 309 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -109 309 a -109 309 a
true setoverprint
 -109 309
a 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1841 5908 a FD(48)p 0 0 0 1 TeXcolorcmyk eop end
%%Page: 49 2
TeXDict begin 49 1 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk -109 1609 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true -37.84221 170.71652
516.98653 230.46747 .5 Frame  gsave 0.2 0.15 0 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true -37.84221 0.0 516.98653
170.71652 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 381.26675 0.0 479.14432
230.46747 .5 Frame  gsave 0.2 0 0.5 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 381.26675 59.75095
479.14432 230.46748 .5 Frame  gsave 0.6 0.95 0 0.2  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 381.26675 59.75095
389.80257 68.28676 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 389.80257 59.75095
398.33838 68.28676 .5 Frame  gsave 0.2 0 0.5 0.05  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 398.33838 59.75095
406.87419 68.28676 .5 Frame  gsave 0.07 0 0.15 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 381.26675 68.28676
389.80257 76.82257 .5 Frame  gsave 0.2 0 0.5 0.05  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 389.80257 68.28676
398.33838 76.82257 .5 Frame  gsave 0.07 0 0.15 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 398.33838 68.28676
406.87419 76.82257 .5 Frame  gsave 0.2 0.15 0 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 381.26675 76.82257
389.80257 85.35838 .5 Frame  gsave 0.07 0 0.15 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 389.80257 76.82257
398.33838 85.35838 .5 Frame  gsave 0.2 0.15 0 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 398.33838 76.82257
406.87419 85.35838 .5 Frame  gsave 0.6 0.95 0 0.2  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
-109 1609 a
tx@Dict begin { 430.20554 170.71652 } PutCoor PutBegin  end
 -109 1609 a 1 TeXcolorgray -444 1609 a
tx@Dict begin CP CP translate 0.85963 1.0 scale NET  end
 -444
1609 a -431 1459 a FC(ST)-13 b(A)g(TISTIQ)o(UES)-444
1609 y(PR)n(OBABILIT\311S)-444 1609 y
tx@Dict begin  CP CP translate 1 0.85963 div 1 1.0 div scale NET  end
 -444 1609 a 0 0 0 1
TeXcolorcmyk -109 1609 a
tx@Dict begin  PutEnd  end
 -109 1609 a -109 1609 a
tx@Dict begin { 430.20554 102.43008 } PutCoor PutBegin  end
 -109
1609 a 1 TeXcolorgray -353 w FB(14)p 0 0 0 1 TeXcolorcmyk
-109 1609 a
tx@Dict begin  PutEnd  end
 -109 1609 a -109 1609 a
tx@Dict begin { 0.0 59.75095 } PutCoor PutBegin  end
 -109 1609 a 0 1 0.6 0.4
TeXcolorcmyk FA(T)-23 b(rigonom\351trie)p 0 0 0 1 TeXcolorcmyk
-109 1609 a
tx@Dict begin  PutEnd  end
 -109 1609 a 0 0.85 0.6 0.15 TeXcolorcmyk
424 x Fz(Connaissances)26 b(du)i(coll\350g)q(e)g(n\351cessaires)f(\340)
i(ce)f(c)o(hapitre)p 0 0 0 1 TeXcolorcmyk -109 2202 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.0 SLW 0  setgray   0.0 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def  0.0 -8.91081 /y ED /x ED /r 0.0 def /c 57.2957
r Div def /angleA 180. 0.0 c mul 2 div add def /angleB 270. 0.0 c mul
2 div sub def /angleAtoB angleB angleA gt { true }{ false } ifelse
def x y r angleA angleB arc   0.0 SLW 0  setgray  /ArrowA { /lineto
load stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def
 [ 479.14432 -8.91081 0.0 -8.91081   /currentpoint load stopped pop
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if    0.0
SLW 0  setgray  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def  479.14432 -8.91081 /y ED /x ED
/r 0.0 def /c 57.2957 r Div def /angleA 270. 0.0 c mul 2 div add def
/angleB 360. 0.0 c mul 2 div sub def /angleAtoB angleB angleA gt {
true }{ false } ifelse def x y r angleA angleB arc   0.0 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def  [ 479.14432 13.66081 479.14432 -8.91081   /currentpoint
load stopped pop /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if    0.0 SLW 0  setgray  /ArrowA { /lineto load stopped { moveto }
if } def /ArrowB { } def /ArrowInside { } def  479.14432 13.66081 /y
ED /x ED /r 0.0 def /c 57.2957 r Div def /angleA 0. 0.0 c mul 2 div
add def /angleB 90. 0.0 c mul 2 div sub def /angleAtoB angleB angleA
gt { true }{ false } ifelse def x y r angleA angleB arc   0.0 SLW 0
 setgray  /ArrowA { /lineto load stopped { moveto } if } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 13.66081 479.14432 13.66081   /currentpoint
load stopped pop /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if    0.0 SLW 0  setgray  /ArrowA { /lineto load stopped { moveto }
if } def /ArrowB { } def /ArrowInside { } def  0.0 13.66081 /y ED /x
ED /r 0.0 def /c 57.2957 r Div def /angleA 90. 0.0 c mul 2 div add
def /angleB 180. 0.0 c mul 2 div sub def /angleAtoB angleB angleA gt
{ true }{ false } ifelse def x y r angleA angleB arc   0.0 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def  [ 0.0 -8.91081 0.0 13.66081   /currentpoint load
stopped pop /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.1 0 0 0  setcmykcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial -109 2202 a
tx@Dict begin { 9.53581 0.0 } PutCoor PutBegin  end
 -109
2202 a 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk 3 x Fy(I)p 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 31 w Fx(Calculer)20 b(et)f(utiliser)h(des)g(fr\351quences)
p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 833 w Fy(I)p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 30 w Fx(Calculer)g(et)f(utiliser)i(des)e
(pourcentages)p 0 0 0 1 TeXcolorcmyk -109 2202 a
tx@Dict begin  PutEnd  end
 -109
2202 a 381 x @beginspecial @setspecial
  tx@Dict begin STP newpath 0.0 SLW 0  setgray   0.0 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def  0.0 -10.42871 /y ED /x ED /r 0.0 def /c 57.2957
r Div def /angleA 180. 0.0 c mul 2 div add def /angleB 270. 0.0 c mul
2 div sub def /angleAtoB angleB angleA gt { true }{ false } ifelse
def x y r angleA angleB arc   0.0 SLW 0  setgray  /ArrowA { /lineto
load stopped { moveto } if } def /ArrowB { } def /ArrowInside { } def
 [ 227.62204 -10.42871 0.0 -10.42871   /currentpoint load stopped pop
/Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not {
n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if    0.0
SLW 0  setgray  /ArrowA { /lineto load stopped { moveto } if } def
/ArrowB { } def /ArrowInside { } def  227.62204 -10.42871 /y ED /x
ED /r 0.0 def /c 57.2957 r Div def /angleA 270. 0.0 c mul 2 div add
def /angleB 360. 0.0 c mul 2 div sub def /angleAtoB angleB angleA gt
{ true }{ false } ifelse def x y r angleA angleB arc   0.0 SLW 0  setgray
 /ArrowA { /lineto load stopped { moveto } if } def /ArrowB { } def
/ArrowInside { } def  [ 227.62204 10.91084 227.62204 -10.42871   /currentpoint
load stopped pop /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if    0.0 SLW 0  setgray  /ArrowA { /lineto load stopped { moveto }
if } def /ArrowB { } def /ArrowInside { } def  223.35416 10.91084 /y
ED /x ED /r 4.26788 def /c 57.2957 r Div def /angleA 0. 0.0 c mul 2
div add def /angleB 90. 0.0 c mul 2 div sub def /angleAtoB angleB angleA
gt { true }{ false } ifelse def x y r angleA angleB arc   0.0 SLW 0
 setgray  /ArrowA { /lineto load stopped { moveto } if } def /ArrowB
{ } def /ArrowInside { } def  [ 4.26788 15.17873 223.35416 15.17873
  /currentpoint load stopped pop /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if    0.0 SLW 0  setgray  /ArrowA { /lineto load stopped { moveto }
if } def /ArrowB { } def /ArrowInside { } def  4.26788 10.91084 /y
ED /x ED /r 0.0 def /c 57.2957 r Div def /angleA 90. 0.0 c mul 2 div
add def /angleB 180. 0.0 c mul 2 div sub def /angleAtoB angleB angleA
gt { true }{ false } ifelse def x y r angleA angleB arc   0.0 SLW 0
 setgray  /ArrowA { /lineto load stopped { moveto } if } def /ArrowB
{ } def /ArrowInside { } def  [ 0.0 -10.42871 0.0 10.91084   /currentpoint
load stopped pop /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0 0.85 0.6 0.15  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial -109
2583 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 -109 2583 a 87 x @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.1 0 0 0  setcmykcolor   4.26791
4.26791 4.26791   1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.2 0.15 0.05  setcmykcolor 
 12.80373 4.26791 4.26791   1. .setopacityalpha  SD  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.85 0.6 0.15  setcmykcolor 
 21.33954 4.26791 4.26791   1. .setopacityalpha  SD  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.3 0 0 0.05  setcmykcolor   4.26791
12.80373 4.26791   1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.1 0 0 0  setcmykcolor   12.80373
12.80373 4.26791   1. .setopacityalpha  SD  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0.2 0.15 0.05  setcmykcolor 
 21.33954 12.80373 4.26791   1. .setopacityalpha  SD  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.6 0 0 0.1  setcmykcolor   4.26791
21.33954 4.26791   1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.3 0 0 0.05  setcmykcolor   12.80373
21.33954 4.26791   1. .setopacityalpha  SD  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0.1 0 0 0  setcmykcolor   21.33954
21.33954 4.26791   1. .setopacityalpha  SD  end
 
@endspecial 1 TeXcolorgray 536 2617 a Fw(A)m(uto-\351v)n
(aluation)p 0 0 0 1 TeXcolorcmyk -109 2583 a
tx@Dict begin  PutEnd  end
 -109 2583
a 2334 2498 a Fx(Des)g(ressources)i(n)o(um\351r)q(iques)f(pour)g
(pr\351parer)2334 2585 y(le)f(chapitre)h(sur)p 0.4 0 0 0
TeXcolorcmyk 20 w Fv(man)o(uel.sesamath.net)p 0 0 0 1
TeXcolorcmyk 3657 2599 a
tx@Dict begin CP CP translate 3.05255 3.05255 scale NET  end
 3657 2599 a 0.4 0 0 0 TeXcolorcmyk
Fx(@)p 0 0 0 1 TeXcolorcmyk 3657 2599 a
tx@Dict begin  CP CP translate 1 3.05255 div 1 3.05255 div scale NET
 end
 3657 2599 a -38
5505 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  4.26791 SLW 0 0.03 0.15 0  setcmykcolor  0. true
8.53581 neg 8.53581 neg 470.6085 341.4526 .5 Frame  gsave 4.26791 SLW
0 0.03 0.15 0  setcmykcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk -14 2824 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor  0. true 2.84526
neg 2.84526 neg 14.22636 8.69681 .5 Frame  gsave 0 0.5 1 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 1 TeXcolorgray 28 w Fv(1)p 0 0 0 1
TeXcolorcmyk 99 w FD(Le)d(tableau)g(ci-dessous)i(pr\351sente)e(le)g
(nombr)o(e)f(de)h(pots)-38 2943 y(de)j(peintur)o(e)e(vendus)i(en)f(un)g
(mois)h(selon)g(la)g(couleur)-6 b(.)p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk -38 3031
1877 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
-38 3155 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk -31 3155 564 124 v 0 0 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 15 3119 a(Couleur)p 0 0 0 0.5 TeXcolorcmyk
538 3155 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
541 3155 430 124 v 0 0 0 1 TeXcolorcmyk 355 w(Jaune)p
0 0 0 0.5 TeXcolorcmyk 970 3155 4 124 v 0 0 0 1 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk 973 3155 430 124 v 0 0 0 1 TeXcolorcmyk
238 w(Blanc)p 0 0 0 0.5 TeXcolorcmyk 1403 3155 4 124
v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk 1406 3155
430 124 v 0 0 0 1 TeXcolorcmyk 225 w(Rouge)p 0 0 0 0.5
TeXcolorcmyk 1835 3155 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5
TeXcolorcmyk -38 3158 1877 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5
TeXcolorcmyk -38 3282 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0
TeXcolorcmyk -31 3282 564 124 v 0 0 0 1 TeXcolorcmyk
15 3246 a(Ef)o(fectif)p 0 0 0 0.5 TeXcolorcmyk 538 3282
4 124 v 0 0 0 1 TeXcolorcmyk 434 w(256)p 0 0 0 0.5 TeXcolorcmyk
970 3282 V 0 0 0 1 TeXcolorcmyk 296 w(7489)p 0 0 0 0.5
TeXcolorcmyk 1403 3282 V 0 0 0 1 TeXcolorcmyk 297 w(458)p
0 0 0 0.5 TeXcolorcmyk 1835 3282 V 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk -38 3285 1877 4 v 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
-38 3365 V 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
-38 3489 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk -31 3489 564 124 v 0 0 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 15 3453 a(Couleur)p 0 0 0 0.5 TeXcolorcmyk
538 3489 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
541 3489 430 124 v 0 0 0 1 TeXcolorcmyk 375 w(Bleu)p
0 0 0 0.5 TeXcolorcmyk 970 3489 4 124 v 0 0 0 1 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk 973 3489 430 124 v 0 0 0 1 TeXcolorcmyk
283 w(V)d(ert)p 0 0 0 0.5 TeXcolorcmyk 1403 3489 4 124
v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk 1406 3489
430 124 v 0 0 0 1 TeXcolorcmyk 279 w(Noir)p 0 0 0 0.5
TeXcolorcmyk 1835 3489 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5
TeXcolorcmyk -38 3492 1877 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5
TeXcolorcmyk -38 3616 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0
TeXcolorcmyk -31 3616 564 124 v 0 0 0 1 TeXcolorcmyk
15 3580 a(Ef)o(fectif)p 0 0 0 0.5 TeXcolorcmyk 538 3616
4 124 v 0 0 0 1 TeXcolorcmyk 434 w(156)p 0 0 0 0.5 TeXcolorcmyk
970 3616 V 0 0 0 1 TeXcolorcmyk 316 w(785)p 0 0 0 0.5
TeXcolorcmyk 1403 3616 V 0 0 0 1 TeXcolorcmyk 296 w(4123)p
0 0 0 0.5 TeXcolorcmyk 1835 3616 V 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk -38 3619 1877 4 v 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk -38
3804 a Fu(1\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
30 w FD(Calculer)19 b(les)h(fr\351quences)g(arr)o(ondies)g(au)g
(centi\350me.)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk -38 3924 a Fu(2\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 30 w FD(Exprimer)26 b(les)h(fr\351quences)g(en)f
(pour)o(centage)g(arr)o(ondies)57 4043 y(\340)20 b(l'unit\351.)-14
4282 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor  0. true 2.84526
neg 2.84526 neg 14.22636 8.69681 .5 Frame  gsave 0 0.5 1 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 1 TeXcolorgray
28 w Fv(2)p 0 0 0 1 TeXcolorcmyk 99 w FD(Dans)h(une)e(boulangerie,)f
(Mariette)h(ach\350te)g(:)p 0 0.85 0.6 0.15 TeXcolorcmyk
-20 4402 a Ft(\017)p 0 0 0 1 TeXcolorcmyk 36 w FD(15)h(pains)h(au)f
(chocolat)13 b(;)p 0 0.85 0.6 0.15 TeXcolorcmyk 148 w
Ft(\017)p 0 0 0 1 TeXcolorcmyk 36 w FD(10)20 b(cr)o(oissants)14
b(;)p 0 0.85 0.6 0.15 TeXcolorcmyk -20 4521 a Ft(\017)p
0 0 0 1 TeXcolorcmyk 36 w FD(12)20 b(tartelettes)13 b(;)p
0 0.85 0.6 0.15 TeXcolorcmyk 410 w Ft(\017)p 0 0 0 1
TeXcolorcmyk 36 w FD(8)20 b(pains)h(au)e(raisin)14 b(;)p
0 0.85 0.6 0.15 TeXcolorcmyk -20 4641 a Ft(\017)p 0 0 0 1
TeXcolorcmyk 36 w FD(22)20 b(\351clairs)14 b(;)p 0 0.85 0.6 0.15
TeXcolorcmyk 531 w Ft(\017)p 0 0 0 1 TeXcolorcmyk 36
w FD(20)20 b(brioches.)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk -38 4762 a Fu(1\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 30 w FD(Quelle)e(est)i(la)g(pr)o(oportion)g(de)g
(:)p 0 0.85 0.6 0.15 TeXcolorcmyk 66 4881 a Fu(a\))p
0 0 0 1 TeXcolorcmyk 20 w FD(tartelettes)12 b(?)p 0 0.85 0.6 0.15
TeXcolorcmyk 436 w Fu(b\))p 0 0 0 1 TeXcolorcmyk 14 w
FD(viennoiserie)g(?)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk -38 5001 a Fu(2\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 30 w FD(Parmi)70 b(les)h(desserts,)h(quelle)e(est)
g(la)h(pr)o(oportion)57 5120 y(d'\351clairs)14 b(?)p
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1945 2824 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor  0. true 2.84526
neg 2.94852 neg 14.22636 8.69681 .5 Frame  gsave 0 0.5 1 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 1 TeXcolorgray
29 w Fv(3)p 0 0 0 1 TeXcolorcmyk 99 w FD(En)21 b(2013,)i(778)e(200)h
(candidats)h(se)e(sont)h(pr\351sent\351s)f(\340)h(la)1922
2943 y(s\351rie)30 b(g\351n\351rale)h(de)f(l'examen)g(du)g(Dipl\364me)g
(National)h(du)1922 3063 y(Br)o(evet,)h(84,5)13 b(\045)34
b(ont)f(\351t\351)g(r)o(e\347u)f(et)h(neuf)g(candidats)h(sur)g(10)1922
3183 y(ma\356trisaient)19 b(le)h(socle)g(commun)e(de)i(comp\351tences.)
p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk 1922
3302 a Fu(1\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
29 w FD(Combien)f(de)h(candidats)h(ont)e(\351t\351)g(r)o(e\347us)13
b(?)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
1922 3422 a Fu(2\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
29 w FD(Combien)j(de)h(candidats)i(ont)e(la)g(ma\356trise)g(du)g(socle)
g(com-)2016 3541 y(mun)i(de)h(comp\351tences)13 b(?)1945
3661 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor  0. true 2.84526
neg 2.84526 neg 14.22636 8.69681 .5 Frame  gsave 0 0.5 1 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 1 TeXcolorgray
29 w Fv(4)p 0 0 0 1 TeXcolorcmyk 99 w FD(Dans)20 b(la)g(liste)g(des)g
(nombr)o(es)f(entiers)g(de)h(0)g(\340)g(20,)h(citer)p
0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk 1922
3780 a Fu(1\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
29 w FD(les)f(nombr)o(es)f(impairs)14 b(;)p 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 1922 3900 a Fu(2\))p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 29 w FD(les)20 b(nombr)o(es)f
(divisibles)h(par)g(3)14 b(;)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk 1922 4019 a Fu(3\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 29 w FD(les)20 b(nombr)o(es)f(impairs)i(ou)e
(divisibles)h(par)g(3)14 b(;)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk 1922 4139 a Fu(4\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 29 w FD(les)20 b(nombr)o(es)f(impairs)i(non)e
(nuls)h(et)f(divisibles)h(par)g(3.)1945 4259 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor  0. true 2.84526
neg 2.94852 neg 14.22636 8.69681 .5 Frame  gsave 0 0.5 1 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 1 TeXcolorgray 29 w Fv(5)p 0 0 0 1
TeXcolorcmyk 99 w FD(Beno\356t)g(a)h(r\351par\351)g(351)h(machines)f
(\340)g(laver)-6 b(.)20 b(Il)g(a)i(chang\351)1922 4378
y(le)h(joint)h(sur)g(128)h(machines)f(et)f(le)g(pr)o(ogrammateur)g(sur)
h(les)1922 4498 y(autr)o(es)31 b(dont)h(26)g(pr\351sentaient)g(aussi)g
(un)f(d\351faut)h(de)f(joint)1922 4617 y(qu'il)19 b(a)h(aussi)h(r)o
(emplac\351.)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
1922 4737 a Fu(1\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
29 w FD(Quel)j(est)g(le)g(pour)o(centage)g(de)g(machines)h(\340)g
(laver)f(ayant)2016 4856 y(un)19 b(joint)h(d\351fectueux)12
b(?)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
1922 4976 a Fu(2\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
29 w FD(Quel)19 b(est)g(le)h(nombr)o(e)e(de)h(machine)g(ayant)h
(seulement)e(un)2016 5095 y(pr)o(ogrammateur)i(d\351fectueux)11
b(?)p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 2688
5576 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   4.26791 false
0.0 0.0 142.26378 17.07164 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 142.26378 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 8.53581
0.0 142.26378 17.07164 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
2688 5576 a
tx@Dict begin { 71.1319 8.53583 } PutCoor PutBegin  end
 2688 5576 a 0.5 0 0.2 0 TeXcolorcmyk 2253
5603 a Fr(\344\344\344)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk 21 w Fx(V)-5 b(oir)19 b(solutions)i(p)n(.)e(60)p
0 0 0 1 TeXcolorcmyk 2688 5576 a
tx@Dict begin  PutEnd  end
 2688 5576 a 0 0 0 1
TeXcolorcmyk 3728 5908 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 3728 5908 a -38 w Fv(49)3728
5908 y
tx@Dict begin  PutEnd  end
 3728 5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.3 0.48 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
0 0 0 1 TeXcolorcmyk eop end
%%Page: 50 3
TeXDict begin 50 2 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
-109 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true -37.84221 -8.53581
312.9803 31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 -8.53581
295.90868 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 -8.53581
304.44449 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 -8.53581
312.9803 0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 0.0 295.90868
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 0.0 304.44449
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 0.0 312.9803
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 8.53581
295.90868 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 8.53581
304.44449 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 8.53581
312.9803 17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 -57 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 -109
-57 a 1 TeXcolorgray Fq(Cour)m(s)50 b(-)e(M\351thodes)p
0 0 0 1 TeXcolorcmyk -109 -57 a
tx@Dict begin  PutEnd  end
 -109 -57 a 0 0 0 1 TeXcolorcmyk
520 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.15 0  setcmykcolor   0. true
0.0 0.0 25.60744 25.60744 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 8.53581 25.60744 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 25.60744 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor   0. true 0.0
0.0 8.53581 8.53581 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 463 a
tx@Dict begin { 25.60744 8.53581 } PutCoor PutBegin  end
 -109
463 a 1 0 0 0.5 TeXcolorcmyk -124 w Fp(1)p 0 0 0 1 TeXcolorcmyk
1 0 0 0.5 TeXcolorcmyk(.)p 0 0 0 1 TeXcolorcmyk -109
463 a
tx@Dict begin  PutEnd  end
 -109 463 a 1 0 0 0.5 TeXcolorcmyk 175 392 a Fo(V)-11
b(ocab)n(ulaire)p 0 0 0 1 TeXcolorcmyk -109 611 a FD(Dans)21
b(le)e(chapitr)o(e,)h(sauf)g(indication)g(contrair)o(e,)f(tous)h(les)f
(triangles)h(sont)g(r)o(ectangles.)p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 1778 1194 a

 1778 1194 a 1778 1194
a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 1778 1194 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 24.27876 18.20914 moveto

 45.35419 34.01564 lineto

 pgfstr

 save

 [-0.80385 -0.60292 0.60292 -0.80385 24.27876 18.20915 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 48.70796 32.07065 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1778
1194 a FD(Hypot\351nuse)1778 1194 y


 pgfr

 restore

 restore

 -1.99252 17.00781 moveto

 -22.6771 17.00781 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 -1.99252 17.00781 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -78.15189 15.06282 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1778 1194 a FD(C\364t\351)f
(oppos\351)1778 1194 y


 pgfr

 restore

 restore

 22.6771 -1.99252 moveto

 22.6771 -22.6771 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 22.6771 -1.99252 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -5.65022 -32.87845 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1778 1194 a FD(C\364t\351)g(adjacent)1778
1194 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 -109 2114 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.15 0  setcmykcolor   0. true
0.0 0.0 25.60744 25.60744 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 8.53581 25.60744 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 25.60744 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor   0. true 0.0
0.0 8.53581 8.53581 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-109 2114 a
tx@Dict begin { 25.60744 8.53581 } PutCoor PutBegin  end
 -109 2114 a 1 0 0 0.5 TeXcolorcmyk -124 w
Fp(2)p 0 0 0 1 TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk(.)p
0 0 0 1 TeXcolorcmyk -109 2114 a
tx@Dict begin  PutEnd  end
 -109 2114 a 1 0 0 0.5
TeXcolorcmyk 175 2043 a Fo(Cosin)o(us)36 b(d'un)f(angle)g(aigu)h(dans)g
(un)f(triangle)g(rectangle)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk -109 2293 a(A.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0
TeXcolorcmyk 35 w Fz(D\351\002nition)p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1498 2953 a


1498 2953 a 1498 2953 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 1498 2953 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1
TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.89706 -10.02159 ] concat

 pgfs



 0 setgray

1503 2953 a Fm(A)1498 2953 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.89856 ] concat

 pgfs



 0 setgray
 1501 2953 a Fm(B)1498 2953
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -9.96007 37.55151 ] concat

 pgfs



 0 setgray
 1499 2953 a Fm(C)1498 2953 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 -11.33855 -11.33855 moveto

 56.69275 45.35419 lineto

 clip

 newpath

 restore

 newpath

 restore

 pgfc



0 0.85 0.6 0.15 TeXcolorcmyk 33 3405 71 71 v 0 0 0 1
TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk 124 3405 a Fl(D\311FINITION)p
0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0
TeXcolorcmyk 104 4085 3341 612 v 0 0.1 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 175 3581 a
FD(Dans)c(le)e(triangle)h(ABC)g(r)o(ectangle)f(en)h(A,)g(on)g(appelle)g
Fu(cosinus)h FD(de)f(l'angle)f(aigu)2818 3564 y Fk([)2813
3581 y FD(ABC)h(et)g(on)g(note)175 3701 y(cos)305 3684
y Fk([)299 3701 y FD(ABC)21 b(le)e(quotient)g(de)g(la)h(longueur)f(du)g
(c\364t\351)h(adjacent)g(AB)h(et)e(de)h(celle)f(de)g(l'hypot\351nuse)g
(BC.)1509 3922 y(cos)1639 3906 y Fk([)1634 3922 y FD(ABC)k
Fj(=)1919 3869 y FD(AB)p 1919 3904 110 4 v 1922 3976
a(BC)p 0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk -109
4310 a Fo(B.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk
35 w Fz(Pr)n(opri\351t\351s)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk 33 4536 71 71 v 0 0 0 1 TeXcolorcmyk 1 0 0 0.5
TeXcolorcmyk 124 4536 a Fl(PR)n(OPRI\311T\311)p 0 0 0 1
TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk
104 5666 3341 1062 v 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 175 4685 a Fu(1\))p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 29 w FD(En)18 b(utilisant)g(le)g
(th\351or\350me)f(de)h(Thal\350s,)h(on)f(montr)o(e)f(que)g(le)h
(cosinus)g(d'un)g(angle)g(ne)g(d\351pend)g(pas)h(du)269
4804 y(triangle)h(r)o(ectangle)f(consid\351r\351,)g(mais)i(uniquement)c
(de)j(la)g(mesur)o(e)f(de)g(l'angle.)p 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 175 4924 a Fu(2\))p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 29 w FD(Le)29 b(cosinus)f(d'un)g
(angle)h(aigu)f(est)g(une)g(grandeur)g(sans)h(unit\351.)f(Il)f(est)i
(compris)g(entr)o(e)e(0)i(et)f(1.)g(En)269 5043 y(ef)o(fet,)23
b(c'est)g(un)f(quotient)g(de)i(deux)e(grandeurs)i(positives,)f(et)g(le)
g(d\351nominateur)f(est)h(sup\351rieur)g(au)269 5163
y(num\351rateur)c(\(l'hypot\351nuse)g(est)h(le)f(c\364t\351)g(le)h
(plus)g(long)f(d'un)h(triangle)f(r)o(ectangle\).)p 0 0 0 1
TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk 175 5282 a
Fu(3\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 29
w FD(Plus)30 b(la)h(mesur)o(e)e(d'un)h(angle)h(est)f(grande,)h(et)f
(plus)g(son)h(cosinus)g(est)f(petit.)g(Cela)h(nous)f(incite)g(\340)269
5402 y(choisir)20 b(:)1300 5521 y(cos)14 b(0)o(\011)22
b Fj(=)h FD(1)329 b(cos)14 b(90)o(\011)22 b Fj(=)h FD(0)p
0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk -109 5908 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 -109 5908
a -38 w Fv(50)-109 5908 y
tx@Dict begin  PutEnd  end
 -109 5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 0.6 0.95 0 0.2 TeXcolorcmyk 162 w Fv(Chapitre)18
b(SP14.)p 0 0 0 1 TeXcolorcmyk 48 w Fx(T)-8 b(r)q(igonom\351tr)q(ie)p
0 0 0 1 TeXcolorcmyk eop end
%%Page: 51 4
TeXDict begin 51 3 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1251 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 350.82251
31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 8.53581
0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 -8.53581
17.07162 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 -8.53581
25.60744 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 0.0 8.53581
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 0.0 17.07162
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 0.0 25.60744
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 8.53581 8.53581
17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 8.53581
17.07162 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 8.53581
25.60744 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 1251 -57 a
tx@Dict begin { 312.9803 0.0 } PutCoor PutBegin  end
 1251
-57 a 1 TeXcolorgray -1461 w Fq(Cour)m(s)49 b(-)f(M\351thodes)p
0 0 0 1 TeXcolorcmyk 1251 -57 a
tx@Dict begin  PutEnd  end
 1251 -57 a 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk -109 400 a Fo(C.)p 0 0 0 1
TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk 35 w Fz(Applications)p
0 0 0 1 TeXcolorcmyk 0.3 0 0 0.05 TeXcolorcmyk 33 3276
71 2349 v 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 33 1019 648 92 v 0.6 0 0 0.1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1 TeXcolorgray 104
1011 a Fi(M\311THODE)23 b(1)p 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
119 w(Utilisation)h(de)g(la)g(calculatrice)p 0 0 0 1
TeXcolorcmyk 0.1 0 0 0 TeXcolorcmyk 0.1 0 0 0 TeXcolorcmyk
104 1452 3341 390 v 0.1 0 0 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 175 1167 a FD(Il)e(faut)h(commencer)e(par)j(deux)e
(mises)h(en)f(gar)o(de)h(concernant)f(l'utilisation)g(de)h(la)g
(calculatrice)g(en)f(tri-)175 1287 y(gonom\351trie)i(:)h(d'une)f(part,)
i(la)f(calculatrice)g(ne)g(fournit)g(la)g(plupart)h(du)f(temps)g(que)g
(des)g(valeurs)g(ap-)175 1406 y(pr)o(och\351es,)19 b(et)h(d'autr)o(e)f
(part,)h(il)f(faut)h(v\351ri\002er)f(qu'elle)g(est)g(bien)g
(param\351tr\351e)h(en)g(degr\351s.)p 0 0 0 1 TeXcolorcmyk
0.1 0 0 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 175 1650
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175 1650 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175 1650 a 1 TeXcolorgray
-331 w Fx(Ex)n(ercice)g(d'application)p 0 0 0 1 TeXcolorcmyk
175 1650 a
tx@Dict begin  PutEnd  end
 175 1650 a 919 1667 a FD(Calculer)105 b(cos)13
b(37)o(\011,)105 b(cos)13 b(45)o(\011,)175 1787 y(cos)g(85)o(\011,)38
b(cos)14 b(90)o(\011,)38 b(et)g(en)h(d\351terminer)e(un)i(arr)o(ondi)g
(au)175 1906 y(milli\350me.)175 2079 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
175 2079 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 175 2079 a 1 TeXcolorgray -158 w Fx(Correction)p
0 0 0 1 TeXcolorcmyk 175 2079 a
tx@Dict begin  PutEnd  end
 175 2079 a 565 2097 a
FD(A)24 b(la)h(calculatrice,)f(en)f(utilisant)h(la)h(touche)175
2216 y(COS)20 b(on)g(doit)f(obtenir)g(:)668 2419 y(cos)14
b(37)o(\011)22 b Ft(\031)h FD(0,799)668 2616 y(cos)14
b(45)o(\011)22 b Fj(=)1016 2495 y Ft(p)p 1086 2495 40
4 v 1086 2563 a FD(2)p 1015 2598 110 4 v 1050 2670 a(2)1158
2616 y Ft(\031)h FD(0,707)668 2787 y(cos)14 b(85)o(\011)22
b Ft(\031)h FD(0,087)668 2932 y(cos)14 b(90)o(\011)22
b Fj(=)h FD(0)175 3135 y(Ce)f(dernier)h(r\351sultat)f(nous)h(permet)f
(de)h(v\351ri\002er)f(facile-)175 3254 y(ment)d(que)g(la)h
(calculatrice)g(est)f(bien)g(param\351tr\351e.)p 0.3 0 0 0.05
TeXcolorcmyk 1987 3276 71 1698 v 0 0 0 1 TeXcolorcmyk
2128 1650 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2128 1650 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 2128 1650 a 1 TeXcolorgray
-330 w Fx(Ex)n(ercice)h(d'application)p 0 0 0 1 TeXcolorcmyk
2128 1650 a
tx@Dict begin  PutEnd  end
 2128 1650 a 2872 1667 a FD(D\351terminer)g(la)h(mesur)o(e)g
Fn(a)q FD(,)i Fn(b)f FD(et)2129 1787 y Fn(g)f FD(au)f(degr\351)f
(pr\350s)i(des)f(angles)g(tels)g(que)f(:)2225 1989 y(cos)c
Fn(a)24 b Fj(=)e FD(0,7)172 b(cos)16 b Fn(b)24 b Fj(=)f
FD(0,1)171 b(cos)15 b Fn(g)24 b Fj(=)g Ft(\000)q FD(0,6)2128
2245 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2128 2245 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 2128 2245 a 1 TeXcolorgray
-158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk 2128 2245
a
tx@Dict begin  PutEnd  end
 2128 2245 a 2518 2263 a FD(La)47 b(calculatrice)f(nous)g(permet)g
(d'\351crir)o(e)2128 2382 y(que)20 b(:)2664 2502 y Fn(a)j
Ft(\031)g FD(46)o(\011)160 b Fn(b)24 b Ft(\031)f FD(84)o(\011)2128
2671 y(Attention,)e(la)h(calculatrice)g(nous)g(donne)g(une)f
(r\351ponse)2128 2791 y(pour)26 b Fn(g)q FD(,)e(mais)h(elle)e(n'a)i
(aucun)f(sens)g(en)g(classe)i(de)e(col-)2128 2910 y(l\350ge)13
b(!)g(!)22 b(On)f(rappelle)i(que)f(le)f(cosinus)h(d'un)g(angle)f(aigu)
2128 3030 y(est)f(compris)g(entr)o(e)f(0)h(et)f(1.)p
0.3 0 0 0.05 TeXcolorcmyk 33 5666 71 1885 v 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 33
3873 648 92 v 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1 TeXcolorgray 104 3865 a Fi(M\311THODE)k(2)p 0 0 0 1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 119 w(Calcul)h(de)g(longueur)p
0 0 0 1 TeXcolorcmyk 175 3999 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175
3999 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175 3999 a 1 TeXcolorgray -331 w Fx(Ex)n(ercice)c(d'application)
p 0 0 0 1 TeXcolorcmyk 175 3999 a
tx@Dict begin  PutEnd  end
 175 3999 a 919 4017
a FD(On)38 b(consid\350r)o(e)g(la)g(\002gur)o(e)e(sui-)175
4136 y(vante.)19 b(On)g(pr\351cise)h(que)961 4119 y(\210)950
4136 y(B)j Fj(=)g FD(40)o(\011)o(.)p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 660 4627 a

 660 4627 a 660 4627 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray

660 4627 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.71716 -9.9127 ] concat

 pgfs



 0 setgray
 660 4627 a FD(A)660 4627
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.9127 ] concat

 pgfs



 0 setgray
 660 4627 a FD(B)660 4627 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.06415 37.57512 ] concat

 pgfs



 0 setgray
 660 4627
a FD(C)660 4627 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc


 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 175 4975 a Fu(1\))p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 29 w FD(Si)30 b(BC)40
b Fj(=)g FD(7)30 b(cm,)e(d\351terminez)h(la)g(valeur)g(exacte)f(et)269
5095 y(l'arr)o(ondi)20 b(de)g(AB)g(au)g(millim\350tr)o(e.)p
0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 175 5214
a Fu(2\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
29 w FD(Si)29 b(AB)40 b Fj(=)f FD(3)29 b(cm,)f(d\351terminez)g(la)h
(valeur)f(exacte)g(et)269 5334 y(l'arr)o(ondi)20 b(de)g(BC)g(au)g
(millim\350tr)o(e.)175 5626 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175
5626 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 175 5626 a 1 TeXcolorgray -158 w Fx(Correction)p
0 0 0 1 TeXcolorcmyk 175 5626 a
tx@Dict begin  PutEnd  end
 175 5626 a 565 5644 a
FD(Le)41 b(triangle)f(ABC)i(est)f(r)o(ectangle)f(en)h(A.)p
0.3 0 0 0.05 TeXcolorcmyk 2002 5666 9 1738 v 0 0 0 1
TeXcolorcmyk 2081 4049 a(Donc)20 b(:)2744 4168 y(cos)2879
4150 y(\210)2868 4168 y(B)k Fj(=)3036 4115 y FD(AB)p
3036 4150 110 4 v 3039 4222 a(BC)p 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 2081 4337 a Fu(1\))p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 2437 4457 a FD(AB)f
Fj(=)g FD(BC)17 b Ft(\002)f FD(cos)2992 4439 y(\210)2981
4457 y(B)24 b Fj(=)e FD(7)17 b Ft(\002)f FD(cos)r Fj(\()q
FD(40)o(\011)p Fj(\))2838 4626 y FD(AB)24 b Ft(\031)e
FD(5,4)2176 4796 y(A)-7 b(vec)22 b(la)g(caclulatrice,)g(on)g(tr)o(ouve)
f(que)h(l'arr)o(ondi)g(de)2176 4915 y(AB)e(au)g(millim\350tr)o(e)e
(vaut)h(5,4)h(cm.)p 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1
TeXcolorcmyk 2081 5035 a Fu(2\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 2588 5154 a FD(BC)j Fj(=)2843 5101
y FD(AB)p 2812 5136 173 4 v 2812 5216 a(cos)2947 5199
y(\210)2936 5216 y(B)3018 5154 y Fj(=)3235 5101 y FD(3)p
3114 5136 282 4 v 3114 5208 a(cos)r Fj(\()q FD(40)o(\011)p
Fj(\))2841 5342 y FD(BC)g Ft(\031)g FD(3,9)2176 5511
y(A)-7 b(vec)22 b(la)g(calculatrice,)g(on)g(tr)o(ouve)f(que)h(l'arr)o
(ondi)g(de)2176 5631 y(BC)e(au)f(millim\350tr)o(e)f(vaut)h(3,9)h(cm.)p
0 0 0 1 TeXcolorcmyk 0.6 0.95 0 0.2 TeXcolorcmyk 2758
5908 a Fv(Chapitre)f(SP14.)p 0 0 0 1 TeXcolorcmyk 48
w Fx(T)-8 b(r)q(igonom\351tr)q(ie)3728 5908 y
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 3728 5908
a -38 w Fv(51)3728 5908 y
tx@Dict begin  PutEnd  end
 3728 5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 0 0 0 1 TeXcolorcmyk eop end
%%Page: 52 5
TeXDict begin 52 4 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
-109 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true -37.84221 -8.53581
312.9803 31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 -8.53581
295.90868 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 -8.53581
304.44449 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 -8.53581
312.9803 0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 0.0 295.90868
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 0.0 304.44449
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 0.0 312.9803
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 8.53581
295.90868 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 8.53581
304.44449 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 8.53581
312.9803 17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 -57 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 -109
-57 a 1 TeXcolorgray Fq(Cour)m(s)50 b(-)e(M\351thodes)p
0 0 0 1 TeXcolorcmyk -109 -57 a
tx@Dict begin  PutEnd  end
 -109 -57 a 0 0 0 1 TeXcolorcmyk
0.3 0 0 0.05 TeXcolorcmyk 33 1782 71 1473 v 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 33
401 648 92 v 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1 TeXcolorgray 104 393 a Fi(M\311THODE)23 b(3)p 0 0 0 1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 119 w(D\351terminer)g(un)h(angle)p
0 0 0 1 TeXcolorcmyk 175 955 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175
955 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175 955 a 1 TeXcolorgray -331 w Fx(Ex)n(ercice)c(d'application)p
0 0 0 1 TeXcolorcmyk 175 955 a
tx@Dict begin  PutEnd  end
 175 955 a 919 973 a FD(On)38
b(consid\350r)o(e)g(la)g(\002gur)o(e)e(sui-)175 1092
y(vante.)24 b(On)g(pr\351cise)i(que)e(AB)33 b Fj(=)f
FD(5)26 b(cm)e(et)g(BC)33 b Fj(=)f FD(8)25 b(cm.)175
1212 y(D\351terminer)18 b(l'arr)o(ondi)i(de)1037 1194
y(\210)1026 1212 y(B)g(au)g(degr\351)f(pr\350s.)p 0.3 0 0 0.05
TeXcolorcmyk 2002 1782 9 1326 v 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 2567 850 a


2567 850 a 2567 850 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 2567 850 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1
TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.71716 -9.9127 ] concat

 pgfs



 0 setgray

2567 850 a FD(A)2567 850 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.9127 ] concat

 pgfs



 0 setgray
 2567 850 a FD(B)2567 850
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.06415 37.57512 ] concat

 pgfs



 0 setgray
 2567 850 a FD(C)2567 850 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc



2081 1198 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2081 1198 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 2081 1198 a 1 TeXcolorgray
-158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk 2081 1198
a
tx@Dict begin  PutEnd  end
 2081 1198 a 2471 1216 a FD(Le)41 b(triangle)g(ABC)g(est)g(r)o
(ectangle)f(en)h(A.)2081 1336 y(Donc)20 b(:)2659 1455
y(cos)2795 1438 y(\210)2784 1455 y(B)j Fj(=)2952 1402
y FD(AB)p 2952 1437 110 4 v 2955 1509 a(BC)3094 1455
y Fj(=)3191 1402 y FD(5)p 3191 1437 40 4 v 3191 1509
a(8)2081 1640 y(A)-7 b(vec)25 b(la)h(calculatrice,)f(on)g(tr)o(ouve)e
(que)i(l'arr)o(ondi)h(de)3781 1622 y(\210)3770 1640 y(B)2081
1759 y(au)20 b(degr\351)g(vaut)f(51)o(\011)o(.)-109 2197
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.15 0  setcmykcolor   0. true
0.0 0.0 25.60744 25.60744 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 8.53581 25.60744 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 25.60744 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor   0. true 0.0
0.0 8.53581 8.53581 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 2197 a
tx@Dict begin { 25.60744 8.53581 } PutCoor PutBegin  end
 -109
2197 a 1 0 0 0.5 TeXcolorcmyk -124 w Fp(3)p 0 0 0 1 TeXcolorcmyk
1 0 0 0.5 TeXcolorcmyk(.)p 0 0 0 1 TeXcolorcmyk -109
2197 a
tx@Dict begin  PutEnd  end
 -109 2197 a 1 0 0 0.5 TeXcolorcmyk 175 2126 a
Fo(Sin)o(us)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
-109 2369 a(A.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk
35 w Fz(D\351\002nition)p 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1498 3000 a

 1498 3000
a 1498 3000 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 1498 3000 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.89706 -10.02159 ] concat

 pgfs



 0 setgray
 1503 3000
a Fm(A)1498 3000 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.89856 ] concat

 pgfs



 0 setgray
 1501 3000 a Fm(B)1498 3000
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -9.96007 37.55151 ] concat

 pgfs



 0 setgray
 1499 3000 a Fm(C)1498 3000 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc



0 0.85 0.6 0.15 TeXcolorcmyk 33 3428 71 71 v 0 0 0 1
TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk 124 3428 a Fl(D\311FINITION)p
0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0
TeXcolorcmyk 104 4102 3341 612 v 0 0.1 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 175 3599 a
FD(Dans)e(le)f(triangle)g(ABC)h(r)o(ectangle)e(en)h(A,)g(on)h(appelle)g
Fu(sinus)g FD(de)f(l'angle)g(aigu)2562 3582 y Fk([)2557
3599 y FD(ABC)h(et)e(on)i(note)e(sin)3213 3582 y Fk([)3208
3599 y FD(ABC)175 3718 y(le)k(quotient)g(de)g(la)i(longueur)d(du)i
(c\364t\351)f(oppos\351)i(AC)f(et)f(de)h(celle)f(de)h(l'hypot\351nuse)f
(BC.)1510 3940 y(sin)1631 3923 y Fk([)1626 3940 y FD(ABC)k
Fj(=)1911 3887 y FD(AC)p 1911 3922 118 4 v 1918 3994
a(BC)p 0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk -109
4322 a Fo(B.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk
35 w Fz(Pr)n(opri\351t\351s)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk 33 4541 71 71 v 0 0 0 1 TeXcolorcmyk 1 0 0 0.5
TeXcolorcmyk 124 4541 a Fl(PR)n(OPRI\311T\311)p 0 0 0 1
TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk
104 5666 3341 1062 v 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 175 4685 a Fu(1\))p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 29 w FD(Apr\350s)k(avoir)e
(constat\351)g(que)g(le)g(sinus)g(d'un)g(angle)g(est)h(\351gal)f(au)g
(cosinus)h(de)f(l'angle)g(compl\351men-)269 4804 y(tair)o(e,)h(on)f
(peut)h(af)o(\002rmer)f(que)h(la)g(plupart)h(des)f(pr)o(opri\351t\351s)
g(du)g(cosinus)g(r)o(estent)f(valables)h(pour)g(le)269
4924 y(sinus)g(:)f(le)h(sinus)g(d'un)f(angle)g(ne)g(d\351pend)h(pas)h
(du)e(triangle)h(r)o(ectangle)e(consid\351r\351,)i(mais)g(unique-)269
5043 y(ment)20 b(de)h(la)g(mesur)o(e)e(de)i(l'angle.)f(Le)h(sinus)g
(d'un)f(angle)h(aigu)f(est)h(une)f(grandeur)h(sans)h(unit\351.)d(Il)h
(est)269 5163 y(compris)h(entr)o(e)d(0)i(et)g(1.)p 0 0 0 1
TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk 175 5282 a
Fu(2\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 29
w FD(Plus)27 b(la)h(mesur)o(e)e(d'un)h(angle)h(est)f(grande,)g(et)g
(plus)h(son)g(cosinus)f(est)h(grand.)f(Cela)h(nous)f(incite)g(\340)269
5402 y(choisir)20 b(:)1310 5521 y(sin)13 b(0)o(\011)22
b Fj(=)h FD(0)329 b(sin)13 b(90)o(\011)23 b Fj(=)g FD(1)p
0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk -109 5908 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 -109 5908
a -38 w Fv(52)-109 5908 y
tx@Dict begin  PutEnd  end
 -109 5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 0.6 0.95 0 0.2 TeXcolorcmyk 162 w Fv(Chapitre)18
b(SP14.)p 0 0 0 1 TeXcolorcmyk 48 w Fx(T)-8 b(r)q(igonom\351tr)q(ie)p
0 0 0 1 TeXcolorcmyk eop end
%%Page: 53 6
TeXDict begin 53 5 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1251 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 350.82251
31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 8.53581
0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 -8.53581
17.07162 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 -8.53581
25.60744 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 0.0 8.53581
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 0.0 17.07162
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 0.0 25.60744
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 8.53581 8.53581
17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 8.53581
17.07162 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 8.53581
25.60744 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 1251 -57 a
tx@Dict begin { 312.9803 0.0 } PutCoor PutBegin  end
 1251
-57 a 1 TeXcolorgray -1461 w Fq(Cour)m(s)49 b(-)f(M\351thodes)p
0 0 0 1 TeXcolorcmyk 1251 -57 a
tx@Dict begin  PutEnd  end
 1251 -57 a 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk -109 400 a Fo(C.)p 0 0 0 1
TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk 35 w Fz(Applications)p
0 0 0 1 TeXcolorcmyk 0.3 0 0 0.05 TeXcolorcmyk 33 2134
71 1624 v 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 33 602 648 92 v 0.6 0 0 0.1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1 TeXcolorgray 104
594 a Fi(M\311THODE)23 b(4)p 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
119 w(Utilisation)h(de)g(la)g(calculatrice)p 0 0 0 1
TeXcolorcmyk 175 731 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175 731 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175
731 a 1 TeXcolorgray -331 w Fx(Ex)n(ercice)c(d'application)p
0 0 0 1 TeXcolorcmyk 175 731 a
tx@Dict begin  PutEnd  end
 175 731 a 919 749 a FD(Calculer)114
b(sin)13 b(37)o(\011,)114 b(sin)13 b(45)o(\011,)175 868
y(sin)g(85)o(\011,)41 b(sin)13 b(90)o(\011,)41 b(et)g(en)g
(d\351terminer)f(un)h(arr)o(ondi)h(au)175 988 y(milli\350me.)175
1160 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175 1160 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 175 1160 a 1 TeXcolorgray
-158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk 175 1160
a
tx@Dict begin  PutEnd  end
 175 1160 a 565 1178 a FD(A)24 b(la)h(calculatrice,)f(en)f(utilisant)h
(la)h(touche)175 1298 y(SIN)19 b(on)h(doit)f(obtenir)g(:)673
1500 y(sin)13 b(37)o(\011)23 b Ft(\031)g FD(0,602)673
1697 y(sin)13 b(45)o(\011)23 b Fj(=)1012 1576 y Ft(p)p
1081 1576 40 4 v 1081 1644 a FD(2)p 1011 1679 110 4 v
1046 1751 a(2)1153 1697 y Ft(\031)g FD(0,707)673 1869
y(sin)13 b(85)o(\011)23 b Ft(\031)g FD(0,996)673 2013
y(sin)13 b(90)o(\011)23 b Fj(=)g FD(1)p 0.3 0 0 0.05
TeXcolorcmyk 1987 2134 71 1474 v 0 0 0 1 TeXcolorcmyk
2128 731 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2128 731 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 2128 731 a 1 TeXcolorgray
-330 w Fx(Ex)n(ercice)d(d'application)p 0 0 0 1 TeXcolorcmyk
2128 731 a
tx@Dict begin  PutEnd  end
 2128 731 a 2872 749 a FD(D\351terminer)g(la)h(mesur)o(e)g
Fn(a)q FD(,)i Fn(b)f FD(et)2129 868 y Fn(g)f FD(au)f(degr\351)f
(pr\350s)i(des)f(angles)g(tels)g(que)f(:)2239 1071 y(sin)c
Fn(a)23 b Fj(=)g FD(0,7)171 b(sin)17 b Fn(b)23 b Fj(=)g
FD(0,1)172 b(sin)14 b Fn(g)24 b Fj(=)g Ft(\000)q FD(0,6)2128
1326 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2128 1326 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 2128 1326 a 1 TeXcolorgray
-158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk 2128 1326
a
tx@Dict begin  PutEnd  end
 2128 1326 a 2518 1344 a FD(La)47 b(calculatrice)f(nous)g(permet)g
(d'\351crir)o(e)2128 1464 y(que)20 b(:)2683 1583 y Fn(a)k
Ft(\031)f FD(44)o(\011)160 b Fn(b)23 b Ft(\031)g FD(6)o(\011)2128
1753 y(Attention,)e(la)h(calculatrice)g(nous)g(donne)g(une)f
(r\351ponse)2128 1872 y(pour)26 b Fn(g)q FD(,)e(mais)h(elle)e(n'a)i
(aucun)f(sens)g(en)g(classe)i(de)e(col-)2128 1992 y(l\350ge)13
b(!)g(!)k(On)g(rappelle)i(que)d(le)h(sinus)h(d'un)f(angle)g(aigu)g(est)
2128 2111 y(compris)k(entr)o(e)d(0)j(et)e(1.)p 0.3 0 0 0.05
TeXcolorcmyk 33 4106 71 1885 v 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 33 2313 648 92
v 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1 TeXcolorgray
104 2305 a Fi(M\311THODE)k(5)p 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
119 w(Calcul)h(de)g(longueur)p 0 0 0 1 TeXcolorcmyk 175
2439 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175 2439 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175 2439 a 1 TeXcolorgray
-331 w Fx(Ex)n(ercice)c(d'application)p 0 0 0 1 TeXcolorcmyk
175 2439 a
tx@Dict begin  PutEnd  end
 175 2439 a 919 2457 a FD(On)38 b(consid\350r)o(e)g(la)g
(\002gur)o(e)e(sui-)175 2576 y(vante.)19 b(On)g(pr\351cise)h(que)961
2559 y(\210)950 2576 y(B)j Fj(=)g FD(40)o(\011)o(.)p
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 660 3067 a


660 3067 a 660 3067 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 660 3067 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1
TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.71716 -9.9127 ] concat

 pgfs



 0 setgray

660 3067 a FD(A)660 3067 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.9127 ] concat

 pgfs



 0 setgray
 660 3067 a FD(B)660 3067
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.06415 37.57512 ] concat

 pgfs



 0 setgray
 660 3067 a FD(C)660 3067 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc



0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 175 3415
a Fu(1\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
29 w FD(Si)30 b(BC)40 b Fj(=)g FD(7)30 b(cm,)e(d\351terminez)h(la)g
(valeur)g(exacte)f(et)269 3535 y(l'arr)o(ondi)20 b(de)g(AC)g(au)g
(millim\350tr)o(e.)p 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1
TeXcolorcmyk 175 3654 a Fu(2\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 29 w FD(Si)29 b(AC)38 b Fj(=)g FD(3)28
b(cm,)f(d\351terminez)g(la)i(valeur)e(exacte)g(et)269
3774 y(l'arr)o(ondi)20 b(de)g(BC)g(au)g(millim\350tr)o(e.)175
4066 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175 4066 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 175 4066 a 1 TeXcolorgray
-158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk 175 4066
a
tx@Dict begin  PutEnd  end
 175 4066 a 565 4084 a FD(Le)41 b(triangle)f(ABC)i(est)f(r)o(ectangle)
f(en)h(A.)p 0.3 0 0 0.05 TeXcolorcmyk 2002 4106 9 1738
v 0 0 0 1 TeXcolorcmyk 2081 2488 a(Donc)20 b(:)2744 2608
y(sin)2871 2590 y(\210)2860 2608 y(B)j Fj(=)3028 2554
y FD(AC)p 3028 2590 118 4 v 3035 2662 a(BC)p 0 0 0 1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 2081 2777 a Fu(1\))p
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 2442 2897 a
FD(AC)h Fj(=)e FD(BC)17 b Ft(\002)f FD(sin)2996 2879
y(\210)2985 2897 y(B)23 b Fj(=)g FD(7)17 b Ft(\002)f
FD(sin)q Fj(\()q FD(40)o(\011)q Fj(\))2834 3066 y FD(AC)23
b Ft(\031)g FD(4,5)2176 3235 y(A)-7 b(vec)22 b(la)g(calculatrice,)g(on)
g(tr)o(ouve)f(que)h(l'arr)o(ondi)g(de)2176 3355 y(AC)e(au)g
(millim\350tr)o(e)d(vaut)i(4,5)i(cm.)p 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 2081 3474 a Fu(2\))p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 2597 3594 a FD(BC)i
Fj(=)2844 3541 y FD(AC)p 2821 3576 164 4 v 2821 3656
a(sin)2947 3638 y(\210)2936 3656 y(B)3018 3594 y Fj(=)3231
3541 y FD(3)p 3114 3576 273 4 v 3114 3648 a(sin)r Fj(\()q
FD(40)o(\011)p Fj(\))2841 3782 y FD(BC)g Ft(\031)g FD(4,7)2176
3951 y(A)-7 b(vec)22 b(la)g(calculatrice,)g(on)g(tr)o(ouve)f(que)h
(l'arr)o(ondi)g(de)2176 4071 y(BC)e(au)f(millim\350tr)o(e)f(vaut)h(4,7)
h(cm)p 0.3 0 0 0.05 TeXcolorcmyk 33 5666 71 1473 v 0 0 0 1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk
33 4286 648 92 v 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1 TeXcolorgray 104 4278 a Fi(M\311THODE)j(6)p 0 0 0 1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 119 w(D\351terminer)g(un)h(angle)p
0 0 0 1 TeXcolorcmyk 175 4840 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175
4840 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175 4840 a 1 TeXcolorgray -331 w Fx(Ex)n(ercice)c(d'application)
p 0 0 0 1 TeXcolorcmyk 175 4840 a
tx@Dict begin  PutEnd  end
 175 4840 a 919 4857
a FD(On)38 b(consid\350r)o(e)g(la)g(\002gur)o(e)e(sui-)175
4977 y(vante.)23 b(On)h(pr\351cise)h(que)f(AC)32 b Fj(=)f
FD(3)25 b(cm)f(et)g(BC)31 b Fj(=)g FD(8)25 b(cm.)175
5096 y(D\351terminer)18 b(l'arr)o(ondi)i(de)1037 5079
y(\210)1026 5096 y(B)g(au)g(degr\351)f(pr\350s.)p 0.3 0 0 0.05
TeXcolorcmyk 2002 5666 9 1326 v 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 2567 4735 a


2567 4735 a 2567 4735 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 2567 4735 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1
TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.71716 -9.9127 ] concat

 pgfs



 0 setgray

2567 4735 a FD(A)2567 4735 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.9127 ] concat

 pgfs



 0 setgray
 2567 4735 a FD(B)2567 4735
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.06415 37.57512 ] concat

 pgfs



 0 setgray
 2567 4735 a FD(C)2567 4735 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc



2081 5083 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2081 5083 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 2081 5083 a 1 TeXcolorgray
-158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk 2081 5083
a
tx@Dict begin  PutEnd  end
 2081 5083 a 2471 5101 a FD(Le)41 b(triangle)g(ABC)g(est)g(r)o
(ectangle)f(en)h(A.)2081 5220 y(Donc)20 b(:)2660 5340
y(sin)2786 5322 y(\210)2775 5340 y(B)k Fj(=)2943 5286
y FD(AC)p 2943 5322 118 4 v 2950 5394 a(BC)3093 5340
y Fj(=)3190 5286 y FD(3)p 3190 5322 40 4 v 3190 5394
a(8)2081 5524 y(A)-7 b(vec)25 b(la)h(calculatrice,)f(on)g(tr)o(ouve)e
(que)i(l'arr)o(ondi)h(de)3781 5506 y(\210)3770 5524 y(B)2081
5644 y(au)20 b(degr\351)g(vaut)f(22)o(\011)o(.)p 0 0 0 1
TeXcolorcmyk 0.6 0.95 0 0.2 TeXcolorcmyk 2758 5908 a
Fv(Chapitre)g(SP14.)p 0 0 0 1 TeXcolorcmyk 48 w Fx(T)-8
b(r)q(igonom\351tr)q(ie)3728 5908 y
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 3728 5908 a -38 w
Fv(53)3728 5908 y
tx@Dict begin  PutEnd  end
 3728 5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 0 0 0 1 TeXcolorcmyk eop end
%%Page: 54 7
TeXDict begin 54 6 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
-109 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true -37.84221 -8.53581
312.9803 31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 -8.53581
295.90868 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 -8.53581
304.44449 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 -8.53581
312.9803 0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 0.0 295.90868
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 0.0 304.44449
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 0.0 312.9803
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 8.53581
295.90868 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 8.53581
304.44449 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 8.53581
312.9803 17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 -57 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 -109
-57 a 1 TeXcolorgray Fq(Cour)m(s)50 b(-)e(M\351thodes)p
0 0 0 1 TeXcolorcmyk -109 -57 a
tx@Dict begin  PutEnd  end
 -109 -57 a 0 0 0 1 TeXcolorcmyk
520 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.15 0  setcmykcolor   0. true
0.0 0.0 25.60744 25.60744 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 8.53581 25.60744 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 25.60744 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor   0. true 0.0
0.0 8.53581 8.53581 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 463 a
tx@Dict begin { 25.60744 8.53581 } PutCoor PutBegin  end
 -109
463 a 1 0 0 0.5 TeXcolorcmyk -124 w Fp(4)p 0 0 0 1 TeXcolorcmyk
1 0 0 0.5 TeXcolorcmyk(.)p 0 0 0 1 TeXcolorcmyk -109
463 a
tx@Dict begin  PutEnd  end
 -109 463 a 1 0 0 0.5 TeXcolorcmyk 175 392 a Fo(T)-10
b(ang)q(ente)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
-109 639 a(A.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk
35 w Fz(D\351\002nition)p 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1498 1285 a

 1498 1285
a 1498 1285 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 1498 1285 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.89706 -10.02159 ] concat

 pgfs



 0 setgray
 1503 1285
a Fm(A)1498 1285 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.89856 ] concat

 pgfs



 0 setgray
 1501 1285 a Fm(B)1498 1285
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -9.96007 37.55151 ] concat

 pgfs



 0 setgray
 1499 1285 a Fm(C)1498 1285 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc



0 0.85 0.6 0.15 TeXcolorcmyk 33 1724 71 71 v 0 0 0 1
TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk 124 1724 a Fl(D\311FINITION)p
0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0
TeXcolorcmyk 104 2400 3341 611 v 0 0.1 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 175 1898 a
FD(Dans)28 b(le)f(triangle)g(ABC)h(r)o(ectangle)f(en)g(A,)h(on)f
(appelle)h Fu(tangente)i FD(de)d(l'angle)g(aigu)2826
1881 y Fk([)2821 1898 y FD(ABC)g(et)g(on)h(note)175 2017
y(sin)295 2001 y Fk([)290 2017 y FD(ABC)20 b(le)g(quotient)e(de)i(la)g
(longueur)f(du)g(c\364t\351)h(oppos\351)g(AC)g(et)g(de)f(celle)g(du)h
(c\364t\351)f(adjacent)i(AB.)1506 2239 y(tan)1635 2222
y Fk([)1630 2239 y FD(ABC)i Fj(=)1915 2186 y FD(AC)p
1915 2221 118 4 v 1919 2293 a(AB)p 0 0 0 1 TeXcolorcmyk
0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk -109 2623 a Fo(B.)p 0 0 0 1 TeXcolorcmyk
0 0.5 1 0 TeXcolorcmyk 35 w Fz(Pr)n(opri\351t\351s)p
0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk 33
2845 71 71 v 0 0 0 1 TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk
124 2845 a Fl(PR)n(OPRI\311T\311)p 0 0 0 1 TeXcolorcmyk
0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 104
3923 3341 1014 v 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk 175 2991 a Fu(1\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 29 w FD(La)g(tangente)e(d'un)g(angle)h(ne)g
(d\351pend)g(pas)h(du)e(triangle)h(r)o(ectangle)f(consid\351r\351,)h
(mais)g(uniquement)269 3111 y(de)d(la)g(mesur)o(e)f(de)g(l'angle.)h(Le)
f(tangente)g(d'un)h(angle)f(aigu)h(est)f(une)g(grandeur)h(positive)g
(sans)h(unit\351.)269 3230 y(Elle)g(peut)f(\352tr)o(e)g(sup\351rieur)o
(e)g(\340)h(1.)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk 175 3350 a Fu(2\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 29 w FD(Plus)25 b(la)h(mesur)o(e)f(d'un)g(angle)h
(est)f(grande,)h(et)f(plus)h(sa)g(tangente)f(est)g(grande.)h(Cela)f
(nous)h(incite)f(\340)269 3469 y(choisir)20 b(:)1653
3589 y(tan)13 b(0)o(\011)22 b Fj(=)h FD(0)269 3758 y(La)e(tangente)d
(d'un)i(angle)f(dr)o(oit)h(n'existe)f(pas.)p 0 0 0 1
TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk -109 4149 a Fo(C.)p 0 0 0 1
TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk 35 w Fz(Applications)p
0 0 0 1 TeXcolorcmyk 0.3 0 0 0.05 TeXcolorcmyk 33 5666
71 1385 v 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 33 4373 648 92 v 0.6 0 0 0.1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1 TeXcolorgray 104
4365 a Fi(M\311THODE)k(7)p 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
119 w(Utilisation)h(de)g(la)g(calculatrice)p 0 0 0 1
TeXcolorcmyk 175 4502 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175 4502 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175
4502 a 1 TeXcolorgray -331 w Fx(Ex)n(ercice)c(d'application)p
0 0 0 1 TeXcolorcmyk 175 4502 a
tx@Dict begin  PutEnd  end
 175 4502 a 919 4520 a
FD(Calculer)105 b(tan)13 b(37)o(\011,)105 b(tan)13 b(45)o(\011,)175
4640 y(tan)g(85)o(\011,)19 b(et)g(en)h(d\351terminer)e(un)i(arr)o(ondi)
g(au)f(milli\350me.)175 4812 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175
4812 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 175 4812 a 1 TeXcolorgray -158 w Fx(Correction)p
0 0 0 1 TeXcolorcmyk 175 4812 a
tx@Dict begin  PutEnd  end
 175 4812 a 565 4830 a
FD(A)24 b(la)h(calculatrice,)f(en)f(utilisant)h(la)h(touche)175
4950 y(T)-6 b(AN)20 b(on)g(doit)f(obtenir)g(:)788 5152
y(tan)14 b(37)o(\011)22 b Ft(\031)h FD(0,754)788 5297
y(tan)14 b(45)o(\011)22 b Fj(=)h FD(1)788 5441 y(tan)14
b(85)o(\011)22 b Ft(\031)h FD(11,43)p 0.3 0 0 0.05 TeXcolorcmyk
1987 5666 71 1235 v 0 0 0 1 TeXcolorcmyk 2128 4502 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2128 4502 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 2128 4502 a 1 TeXcolorgray
-330 w Fx(Ex)n(ercice)d(d'application)p 0 0 0 1 TeXcolorcmyk
2128 4502 a
tx@Dict begin  PutEnd  end
 2128 4502 a 2872 4520 a FD(D\351terminer)g(la)h(mesur)o(e)g
Fn(a)q FD(,)i Fn(b)f FD(et)2129 4640 y Fn(g)f FD(au)f(degr\351)f
(pr\350s)i(des)f(angles)g(tels)g(que)f(:)2289 4842 y(tan)14
b Fn(a)23 b Fj(=)g FD(0,7)172 b(tan)16 b Fn(b)23 b Fj(=)g
FD(0,1)172 b(tan)14 b Fn(g)24 b Fj(=)f FD(4)2128 5098
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2128 5098 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 2128 5098 a 1 TeXcolorgray
-158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk 2128 5098
a
tx@Dict begin  PutEnd  end
 2128 5098 a 2518 5116 a FD(La)47 b(calculatrice)f(nous)g(permet)g
(d'\351crir)o(e)2128 5235 y(que)20 b(:)2473 5355 y Fn(a)k
Ft(\031)f FD(35)o(\011)160 b Fn(b)23 b Ft(\031)g FD(6)o(\011)158
b Fn(g)24 b Ft(\031)f FD(76)o(\011)2128 5524 y(Attention,)g(on)g
(rappelle)h(que)f(la)h(tangente)e(d'un)h(angle)2128 5644
y(aigu)d(peut)f(\352tr)o(e)g(sup\351rieur)o(e)g(\340)h(1.)p
0 0 0 1 TeXcolorcmyk -109 5908 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 -109 5908 a -38 w Fv(54)-109
5908 y
tx@Dict begin  PutEnd  end
 -109 5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
0.6 0.95 0 0.2 TeXcolorcmyk 162 w Fv(Chapitre)e(SP14.)p
0 0 0 1 TeXcolorcmyk 48 w Fx(T)-8 b(r)q(igonom\351tr)q(ie)p
0 0 0 1 TeXcolorcmyk eop end
%%Page: 55 8
TeXDict begin 55 7 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1251 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 350.82251
31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 8.53581
0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 -8.53581
17.07162 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 -8.53581
25.60744 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 0.0 8.53581
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 0.0 17.07162
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 0.0 25.60744
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 8.53581 8.53581
17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 8.53581
17.07162 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 8.53581
25.60744 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 1251 -57 a
tx@Dict begin { 312.9803 0.0 } PutCoor PutBegin  end
 1251
-57 a 1 TeXcolorgray -1461 w Fq(Cour)m(s)49 b(-)f(M\351thodes)p
0 0 0 1 TeXcolorcmyk 1251 -57 a
tx@Dict begin  PutEnd  end
 1251 -57 a 0 0 0 1 TeXcolorcmyk
0.3 0 0 0.05 TeXcolorcmyk 33 2194 71 1885 v 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 33
401 648 92 v 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1 TeXcolorgray 104 393 a Fi(M\311THODE)23 b(8)p 0 0 0 1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 119 w(Calcul)h(de)g(longueur)p
0 0 0 1 TeXcolorcmyk 175 527 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175
527 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175 527 a 1 TeXcolorgray -331 w Fx(Ex)n(ercice)c(d'application)p
0 0 0 1 TeXcolorcmyk 175 527 a
tx@Dict begin  PutEnd  end
 175 527 a 919 545 a FD(On)38
b(consid\350r)o(e)g(la)g(\002gur)o(e)e(sui-)175 664 y(vante.)19
b(On)g(pr\351cise)h(que)961 647 y(\210)950 664 y(B)j
Fj(=)g FD(40)o(\011)o(.)p 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 660 1155 a

 660 1155 a 660 1155 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 660 1155
a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.71716 -9.9127 ] concat

 pgfs



 0 setgray
 660 1155 a FD(A)660 1155
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.9127 ] concat

 pgfs



 0 setgray
 660 1155 a FD(B)660 1155 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.06415 37.57512 ] concat

 pgfs



 0 setgray
 660 1155
a FD(C)660 1155 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc


 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 175 1503 a Fu(1\))p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 29 w FD(Si)29 b(AB)40
b Fj(=)f FD(7)29 b(cm,)f(d\351terminez)g(la)h(valeur)f(exacte)g(et)269
1622 y(l'arr)o(ondi)20 b(de)g(AC)g(au)g(millim\350tr)o(e.)p
0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 175 1742
a Fu(2\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
29 w FD(Si)29 b(AC)38 b Fj(=)g FD(3)28 b(cm,)f(d\351terminez)g(la)i
(valeur)e(exacte)g(et)269 1862 y(l'arr)o(ondi)20 b(de)g(AB)g(au)g
(millim\350tr)o(e.)175 2154 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175
2154 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 175 2154 a 1 TeXcolorgray -158 w Fx(Correction)p
0 0 0 1 TeXcolorcmyk 175 2154 a
tx@Dict begin  PutEnd  end
 175 2154 a 565 2172 a
FD(Le)41 b(triangle)f(ABC)i(est)f(r)o(ectangle)f(en)h(A.)p
0.3 0 0 0.05 TeXcolorcmyk 2002 2194 9 1738 v 0 0 0 1
TeXcolorcmyk 2081 576 a(Donc)20 b(:)2740 696 y(tan)2875
678 y(\210)2864 696 y(B)j Fj(=)3032 643 y FD(AC)p 3032
678 118 4 v 3036 750 a(AB)p 0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1
TeXcolorcmyk 2081 865 a Fu(1\))p 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 2431 985 a FD(AC)g Fj(=)g FD(AB)17
b Ft(\002)f FD(tan)2999 967 y(\210)2988 985 y(B)23 b
Fj(=)g FD(7)17 b Ft(\002)f FD(tan)q Fj(\()q FD(40)o(\011)p
Fj(\))2834 1154 y FD(AC)23 b Ft(\031)g FD(5,9)2176 1324
y(A)-7 b(vec)22 b(la)g(calculatrice,)g(on)g(tr)o(ouve)f(que)h(l'arr)o
(ondi)g(de)2176 1443 y(AC)e(au)g(millim\350tr)o(e)d(vaut)i(5,9)i(cm.)p
0 0 0 1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 2081 1563
a Fu(2\))p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
2586 1682 a FD(AB)i Fj(=)2843 1629 y FD(AC)p 2815 1664
173 4 v 2815 1744 a(tan)2950 1726 y(\210)2939 1744 y(B)3020
1682 y Fj(=)3238 1629 y FD(3)p 3117 1664 282 4 v 3117
1736 a(tan)q Fj(\()q FD(40)o(\011)p Fj(\))2838 1870 y
FD(AB)h Ft(\031)e FD(3,6)2176 2039 y(A)-7 b(vec)22 b(la)g
(calculatrice,)g(on)g(tr)o(ouve)f(que)h(l'arr)o(ondi)g(de)2176
2159 y(AB)e(au)g(millim\350tr)o(e)e(vaut)h(3,6)h(cm)p
0.3 0 0 0.05 TeXcolorcmyk 33 3760 71 1472 v 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 33
2380 648 92 v 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1 TeXcolorgray 104 2372 a Fi(M\311THODE)j(9)p 0 0 0 1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 119 w(D\351terminer)g(un)h(angle)p
0 0 0 1 TeXcolorcmyk 175 2934 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175
2934 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175 2934 a 1 TeXcolorgray -331 w Fx(Ex)n(ercice)c(d'application)
p 0 0 0 1 TeXcolorcmyk 175 2934 a
tx@Dict begin  PutEnd  end
 175 2934 a 919 2952
a FD(On)38 b(consid\350r)o(e)g(la)g(\002gur)o(e)e(sui-)175
3071 y(vante.)23 b(On)h(pr\351cise)g(que)g(AC)31 b Fj(=)f
FD(3)25 b(cm)e(et)h(AB)31 b Fj(=)g FD(8)24 b(cm.)175
3191 y(D\351terminer)18 b(l'arr)o(ondi)i(de)1037 3173
y(\210)1026 3191 y(B)g(au)g(degr\351)f(pr\350s.)p 0.3 0 0 0.05
TeXcolorcmyk 2002 3760 9 1325 v 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 2567 2829 a


2567 2829 a 2567 2829 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 2567 2829 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore
 0 0 0 1
TeXcolorcmyk
 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.71716 -9.9127 ] concat

 pgfs



 0 setgray

2567 2829 a FD(A)2567 2829 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.9127 ] concat

 pgfs



 0 setgray
 2567 2829 a FD(B)2567 2829
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray
0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.06415 37.57512 ] concat

 pgfs



 0 setgray
 2567 2829 a FD(C)2567 2829 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc



2081 3177 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 2081 3177 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 2081 3177 a 1 TeXcolorgray
-158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk 2081 3177
a
tx@Dict begin  PutEnd  end
 2081 3177 a 2471 3195 a FD(Le)41 b(triangle)g(ABC)g(est)g(r)o
(ectangle)f(en)h(A.)2081 3315 y(Donc)20 b(:)2656 3434
y(tan)2791 3417 y(\210)2780 3434 y(B)j Fj(=)2948 3381
y FD(AC)p 2948 3416 118 4 v 2952 3488 a(AB)3098 3434
y Fj(=)3194 3381 y FD(3)p 3194 3416 40 4 v 3194 3488
a(8)2081 3618 y(A)-7 b(vec)25 b(la)h(calculatrice,)f(on)g(tr)o(ouve)e
(que)i(l'arr)o(ondi)h(de)3781 3601 y(\210)3770 3618 y(B)2081
3738 y(au)20 b(degr\351)g(vaut)f(21)o(\011)o(.)-109 4162
y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.15 0  setcmykcolor   0. true
0.0 0.0 25.60744 25.60744 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 8.53581 25.60744 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 25.60744 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor   0. true 0.0
0.0 8.53581 8.53581 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 4162 a
tx@Dict begin { 25.60744 8.53581 } PutCoor PutBegin  end
 -109
4162 a 1 0 0 0.5 TeXcolorcmyk -124 w Fp(5)p 0 0 0 1 TeXcolorcmyk
1 0 0 0.5 TeXcolorcmyk(.)p 0 0 0 1 TeXcolorcmyk -109
4162 a
tx@Dict begin  PutEnd  end
 -109 4162 a 1 0 0 0.5 TeXcolorcmyk 175 4091 a
Fo(Liens)36 b(entre)e(sin)o(us,)i(cosin)o(us)g(et)e(tang)q(ente)p
0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk -109
4321 a(A.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk
35 w Fz(CAS)29 b(SOH)h(T)l(O)-5 b(A)p 0 0 0 1 TeXcolorcmyk
-109 4480 a FD(La)29 b(formule)e(mn\351motechnique)f(suivante)h(est)h
(donn\351e)g(pour)g(se)g(souvenir)f(des)h(tr)o(ois)g(d\351\002nitions)g
(donn\351es)g(dans)h(les)f(para-)-109 4600 y(graphes)21
b(ci-dessus.)1533 4901 y Fm(C)7 b(A)e(H)83 b(SO)5 b(H)84
b(TO)6 b(A)-109 5117 y FD(o\371)21 b Fm(C)r FD(,)e Fm(S)i
FD(et)g Fm(T)i FD(d\351signent)c(r)o(espectivement)f(le)h(cosinus,)h
(le)g(sinus)g(et)f(la)h(tangente)f(de)g(l'angle)h(aigu,)-109
5236 y(et)g(o\371)k Fm(A)q FD(,)18 b Fm(O)j FD(et)i Fm(H)h
FD(d\351signent)19 b(r)o(espectivement)f(les)i(longueurs)f(du)g
(c\364t\351)g(adjacent,)i(du)e(c\364t\351)h(oppos\351,)g(et)f(de)h
(l'hypot\351nuse.)p 0 0.85 0.6 0.15 TeXcolorcmyk -109
5466 a Fo(B.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk
35 w Fz(Angles)28 b(compl\351mentaires)p 0 0 0 1 TeXcolorcmyk
-109 5624 a FD(Les)20 b(deux)f(r\351sultats)h(suivants)g(d\351coulent)f
(dir)o(ectement)f(des)i(tr)o(ois)f(d\351\002nitions.)p
0 0 0 1 TeXcolorcmyk 0.6 0.95 0 0.2 TeXcolorcmyk 2758
5908 a Fv(Chapitre)g(SP14.)p 0 0 0 1 TeXcolorcmyk 48
w Fx(T)-8 b(r)q(igonom\351tr)q(ie)3728 5908 y
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 3728 5908
a -38 w Fv(55)3728 5908 y
tx@Dict begin  PutEnd  end
 3728 5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 0 0 0 1 TeXcolorcmyk eop end
%%Page: 56 9
TeXDict begin 56 8 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
-109 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true -37.84221 -8.53581
312.9803 31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 -8.53581
295.90868 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 -8.53581
304.44449 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 -8.53581
312.9803 0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 0.0 295.90868
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 0.0 304.44449
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 0.0 312.9803
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 8.53581
295.90868 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 8.53581
304.44449 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 8.53581
312.9803 17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 -57 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 -109
-57 a 1 TeXcolorgray Fq(Cour)m(s)50 b(-)e(M\351thodes)p
0 0 0 1 TeXcolorcmyk -109 -57 a
tx@Dict begin  PutEnd  end
 -109 -57 a 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 33 392 71 71 v 0 0 0 1 TeXcolorcmyk
1 0 0 0.5 TeXcolorcmyk 124 392 a Fl(PR)n(OPRI\311T\311)23
b(:)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
24 w Fi(Cosin)o(us)h(de)g(l'angle)h(compl\351mentaire)p
0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0
TeXcolorcmyk 104 829 3341 247 v 0 0.1 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 175 663 a FD(Le)19
b(cosinus)i(d'un)e(angle)h(aigu)f(est)h(\351gal)f(au)h(sinus)g(de)g
(l'angle)f(compl\351mentair)o(e.)175 783 y(Le)g(sinus)i(d'un)e(angle)g
(aigu)h(est)g(\351gal)f(au)h(cosinus)g(de)g(l'angle)f(compl\351mentair)
o(e.)p 0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 1 0.6 0.4 TeXcolorcmyk 104 1423
9 377 v 0 0 0 1 TeXcolorcmyk 195 1118 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.15 0.05  setcmykcolor   0. true
0.0 -2.13394 49.63411 0.0 .5 Frame  gsave 0 0.2 0.15 0.05  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.05 0.05 0  setcmykcolor   0. true
0.0 0.0 49.63411 8.53581 .5 Frame  gsave 0 0.05 0.05 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 1 0.6 0.4  setcmykcolor  [ 8.53581
8.53581 0.0 8.53581 0.0 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0 1 0.6 0.4  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial 195 1118 a
tx@Dict begin { 11.38107 0.0 } PutCoor PutBegin  end
 195
1118 a 1 0 0 0.5 TeXcolorcmyk Fx(PREUVE)p 0 0 0 1 TeXcolorcmyk
195 1118 a
tx@Dict begin  PutEnd  end
 195 1118 a 447 w FD(Dans)27 b(le)e(triangle)h(ABC)g(r)o
(ectangle)f(en)g(A,)h(les)g(deux)f(angles)h(aigus)2774
1100 y(\210)2763 1118 y(B)g(et)2941 1100 y(\210)2926
1118 y(C)g(sont)g(compl\351-)195 1237 y(mentair)o(es,)18
b(et)i(:)1480 1367 y(cos)1616 1350 y(\210)1605 1367 y(B)j
Fj(=)1778 1314 y Fm(A)t(B)p 1773 1349 115 4 v 1780 1421
a(B)r(C)1920 1367 y Fj(=)g FD(sin)2137 1350 y(\210)2122
1367 y(C)p 0 0.5 1 0 TeXcolorcmyk 104 2059 9 395 v 204
1736 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true -3.55658
-2.13394 42.67912 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.05 0  setcmykcolor   0. true
0.0 0.0 42.67912 8.53581 .5 Frame  gsave 0 0.07 0.05 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial 204 1736 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 204 1736 a 1 0 0 0.5
TeXcolorcmyk -132 w Fx(Ex)n(emple)p 0 0.5 1 0 TeXcolorcmyk
204 1736 a
tx@Dict begin  PutEnd  end
 204 1736 a 0 0 0 1 TeXcolorcmyk 175 1855 a
FD(On)c(a)i(:)175 2058 y(cos)13 b(40)o(\011)23 b Fj(=)g
FD(sin)13 b(50)o(\011)171 b(cos)13 b(60)o(\011)23 b Fj(=)f
FD(sin)14 b(30)o(\011)170 b(cos)14 b(45)o(\011)22 b Fj(=)h
FD(sin)14 b(45)o(\011)p 0 0.5 1 0 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk 33 2358 71
71 v 0 0 0 1 TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk 124
2358 a Fl(PR)n(OPRI\311T\311)23 b(:)p 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 24 w Fi(T)-7 b(ang)q(ente)24
b(de)h(l'angle)f(compl\351mentaire)p 0 0 0 1 TeXcolorcmyk
0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 104
2684 3341 127 v 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 175 2638 a FD(La)c(tangente)f(d'un)g(angle)h(aigu)
f(est)h(\351gal)g(\340)g(l'inverse)f(de)h(la)g(tangente)f(de)g(son)h
(angle)g(compl\351mentair)o(e)p 0 0 0 1 TeXcolorcmyk
0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 1 0.6 0.4
TeXcolorcmyk 104 3286 9 385 v 0 0 0 1 TeXcolorcmyk 195
2973 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.15 0.05  setcmykcolor   0. true
0.0 -2.13394 49.63411 0.0 .5 Frame  gsave 0 0.2 0.15 0.05  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.05 0.05 0  setcmykcolor   0. true
0.0 0.0 49.63411 8.53581 .5 Frame  gsave 0 0.05 0.05 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 1 0.6 0.4  setcmykcolor  [ 8.53581
8.53581 0.0 8.53581 0.0 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0 1 0.6 0.4  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
195 2973 a
tx@Dict begin { 11.38107 0.0 } PutCoor PutBegin  end
 195 2973 a 1 0 0 0.5 TeXcolorcmyk Fx(PREUVE)p
0 0 0 1 TeXcolorcmyk 195 2973 a
tx@Dict begin  PutEnd  end
 195 2973 a 447 w FD(Dans)27
b(le)e(triangle)h(ABC)g(r)o(ectangle)f(en)g(A,)h(les)g(deux)f(angles)h
(aigus)2774 2955 y(\210)2763 2973 y(B)g(et)2941 2955
y(\210)2926 2973 y(C)g(sont)g(compl\351-)195 3092 y(mentair)o(es,)18
b(et)i(:)1464 3222 y(tan)1600 3205 y(\210)1589 3222 y(B)j
Fj(=)1761 3169 y Fm(A)r(C)p 1756 3204 118 4 v 1763 3276
a(A)t(B)1907 3222 y Fj(=)2074 3169 y FD(1)p 2004 3204
181 4 v 2004 3284 a(tan)2143 3267 y(\210)2128 3284 y(C)p
0 0.5 1 0 TeXcolorcmyk 104 3976 9 449 v 204 3598 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true -3.55658
-2.13394 42.67912 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.05 0  setcmykcolor   0. true
0.0 0.0 42.67912 8.53581 .5 Frame  gsave 0 0.07 0.05 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial
204 3598 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 204 3598 a 1 0 0 0.5 TeXcolorcmyk -132 w Fx(Ex)n(emple)p
0 0.5 1 0 TeXcolorcmyk 204 3598 a
tx@Dict begin  PutEnd  end
 204 3598 a 0 0 0 1
TeXcolorcmyk 175 3718 a FD(On)c(a)i(:)175 3921 y(tan)13
b(40)o(\011)22 b Fj(=)615 3867 y FD(1)p 521 3902 227
4 v 521 3975 a(tan)13 b(50)o(\011)929 3921 y(tan)g(60)o(\011)22
b Fj(=)1369 3867 y FD(1)p 1275 3902 V 1275 3975 a(tan)13
b(30)o(\011)1683 3921 y(tan)g(45)o(\011)22 b Fj(=)2123
3867 y FD(1)p 2029 3902 V 2029 3975 a(tan)13 b(45)o(\011)p
0 0.5 1 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk -109 4309 a Fo(C.)p 0 0 0 1 TeXcolorcmyk
0 0.5 1 0 TeXcolorcmyk 35 w Fz(Th\351or\350me)28 b(de)g(Pytha)o(gore)p
0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk 33
4638 71 71 v 0 0 0 1 TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk
124 4638 a Fl(PR)n(OPRI\311T\311)p 0 0 0 1 TeXcolorcmyk
0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 104
5327 3341 517 v 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 175 4891 a FD(Soit)22 b Fm(x)g FD(la)e(mesur)o(e)f
(en)g(degr\351s)h(d'un)f(angle)h(aigu.)175 5011 y(On)f(a)i(toujours)e
(la)h(r)o(elation)g(suivante)f(:)1453 5213 y(cos)1565
5181 y Fh(2)1614 5213 y Fm(x)g Fj(+)d FD(sin)1855 5181
y Fh(2)1904 5213 y Fm(x)25 b Fj(=)e FD(1)p 0 0 0 1 TeXcolorcmyk
0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0.4 0 1 0.1
TeXcolorcmyk 177 5628 a Fu(R)t Fg(E)t(M)t(A)t(R)t(Q)t(U)t(E)e
Fu(:)p 0 0 0 1 TeXcolorcmyk 22 w FD(Au)e(lieu)g(d'\351crir)o(e)1227
5629 y Fj(\()1260 5628 y FD(cos)d Fm(x)1429 5629 y Fj(\))1462
5591 y Fh(2)1496 5628 y FD(,)k(on)g(\351crit)f(cos)1928
5600 y Fh(2)1978 5628 y Fm(x)r FD(.)p 0 0 0 1 TeXcolorcmyk
-109 5908 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 -109 5908 a -38 w Fv(56)-109 5908 y
tx@Dict begin  PutEnd  end
 -109
5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.6 0.95 0 0.2
TeXcolorcmyk 162 w Fv(Chapitre)f(SP14.)p 0 0 0 1 TeXcolorcmyk
48 w Fx(T)-8 b(r)q(igonom\351tr)q(ie)p 0 0 0 1 TeXcolorcmyk
eop end
%%Page: 57 10
TeXDict begin 57 9 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1251 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 350.82251
31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 8.53581
0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 -8.53581
17.07162 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 -8.53581
25.60744 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 0.0 8.53581
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 0.0 17.07162
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 0.0 25.60744
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 8.53581 8.53581
17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 8.53581
17.07162 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 8.53581
25.60744 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 1251 -57 a
tx@Dict begin { 312.9803 0.0 } PutCoor PutBegin  end
 1251
-57 a 1 TeXcolorgray -1461 w Fq(Cour)m(s)49 b(-)f(M\351thodes)p
0 0 0 1 TeXcolorcmyk 1251 -57 a
tx@Dict begin  PutEnd  end
 1251 -57 a 0 0 0 1 TeXcolorcmyk
0 1 0.6 0.4 TeXcolorcmyk 104 2286 9 1977 v 0 0 0 1 TeXcolorcmyk
195 380 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.15 0.05  setcmykcolor   0. true
0.0 -2.13394 49.63411 0.0 .5 Frame  gsave 0 0.2 0.15 0.05  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.05 0.05 0  setcmykcolor   0. true
0.0 0.0 49.63411 8.53581 .5 Frame  gsave 0 0.05 0.05 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 1 0.6 0.4  setcmykcolor  [ 8.53581
8.53581 0.0 8.53581 0.0 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0 1 0.6 0.4  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial
195 380 a
tx@Dict begin { 11.38107 0.0 } PutCoor PutBegin  end
 195 380 a 1 0 0 0.5 TeXcolorcmyk Fx(PREUVE)p
0 0 0 1 TeXcolorcmyk 195 380 a
tx@Dict begin  PutEnd  end
 195 380 a 447 w FD(On)29
b(consid\350r)o(e)f(le)h(triangle)f(ABC)h(r)o(ectangle)f(en)g(A,)h(tel)
f(que)g(BC)40 b Fj(=)f FD(1)29 b(ci-dessous.)3301 363
y(\210)3290 380 y(B)g(est)195 500 y(d\351sign\351)19
b(par)k Fm(x)r FD(.)p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1446 991 a

 1446 991 a 1446 991 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 0.0 0.0 moveto

 5.66943 0.0 lineto

 5.66943 5.66943 lineto

 0.0 5.66943 lineto

 closepath

 pgfstr

 save

 36.2867 6.80301 moveto

 34.81506 4.84088 34.01868 2.45279 34.01868 0.0 curveto

 pgfstr

 restore

 save

 save

 0 setgray

 save

 0 setgray

 restore

 save

 [1.0 0.0 0.0 1.0 102.63861 3.58531 ] concat

 pgfs



 0 setgray
 1446 991 a


 pgfr

 restore

 restore

 restore

 save

 save
 0 TeXcolorgray
 save

 save

 38.38522 2.32399 moveto

 30.81657 4.84776 lineto

 pgfstr

 restore

 restore

0 0 0 1 TeXcolorcmyk
 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 26.02287 1.34221 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1448 991 a Fm(x)1446 991 y


 pgfr

 restore

 restore

 save

 save

 [0.80385 -0.60289 0.60289 0.80385 22.83272 21.17697 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1446
991 a FD(1)1446 991 y


 pgfr

 restore

 restore

 save

 0.59776 pgfw

 0 setgray

 [ ] 0.0 setdash

 0.0 0.0 moveto

 45.35722 0.0 lineto

 0.0 34.0179 lineto

 closepath

 pgfstr

 restore

 save
 0 TeXcolorgray
 save
 0 TeXcolorgray 0
TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.71716 -9.9127 ] concat

 pgfs



 0 setgray
 1446 991 a FD(A)1446 991 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save

0 TeXcolorgray
 save
 0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 48.71101 -9.9127 ] concat

 pgfs



 0 setgray
 1446 991
a FD(B)1446 991 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save
 0 TeXcolorgray
 save

0 TeXcolorgray 0 TeXcolorgray
 restore

 save

 [1.0 0.0 0.0 1.0 -10.06415 37.57512 ] concat

 pgfs



 0 setgray
 1446 991 a FD(C)1446 991
y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 restore

 newpath

 restore

 pgfc


 195 1286 a FD(D'une)18 b(part,)j(le)e
(th\351or\350me)g(de)g(Pythagor)o(e)g(nous)h(permet)f(d'\351crir)o(e)g
(:)1343 1489 y(AB)1453 1456 y Fh(2)1503 1489 y Fj(+)d
FD(AC)1701 1456 y Fh(2)1758 1489 y Fj(=)23 b FD(BC)1949
1456 y Fh(2)2006 1489 y Fj(=)f FD(1)2131 1456 y Fh(2)2189
1489 y Fj(=)h FD(1)195 1691 y(D'autr)o(e)18 b(part,)551
1937 y(cos)663 1904 y Fh(2)712 1937 y Fm(x)h Fj(+)d FD(sin)952
1904 y Fh(2)1002 1937 y Fm(x)25 b Fj(=)1154 1826 y Ff(\022)1223
1883 y FD(AB)p 1223 1919 110 4 v 1226 1991 a(BC)1343
1826 y Ff(\023)1402 1846 y Fh(2)1453 1937 y Fj(+)1534
1826 y Ff(\022)1603 1883 y FD(AC)p 1603 1919 118 4 v
1610 1991 a(BC)1731 1826 y Ff(\023)1790 1846 y Fh(2)1847
1937 y Fj(=)1935 1826 y Ff(\022)2004 1883 y FD(AB)p 2004
1919 110 4 v 2039 1991 a(1)2125 1826 y Ff(\023)2184 1846
y Fh(2)2234 1937 y Fj(+)2315 1826 y Ff(\022)2384 1883
y FD(AC)p 2384 1919 118 4 v 2423 1991 a(1)2513 1826 y
Ff(\023)2572 1846 y Fh(2)2629 1937 y Fj(=)d FD(AB)2825
1904 y Fh(2)2875 1937 y Fj(+)17 b FD(AC)3073 1904 y Fh(2)195
2160 y FD(On)i(en)h(d\351duit)f(:)1509 2280 y(cos)1620
2247 y Fh(2)1669 2280 y Fm(x)g Fj(+)d FD(sin)1910 2247
y Fh(2)1959 2280 y Fm(x)25 b Fj(=)e FD(1)p 0 0.5 1 0
TeXcolorcmyk 104 3065 9 400 v 204 2736 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true -3.55658
-2.13394 42.67912 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.05 0  setcmykcolor   0. true
0.0 0.0 42.67912 8.53581 .5 Frame  gsave 0 0.07 0.05 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial
204 2736 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 204 2736 a 1 0 0 0.5 TeXcolorcmyk -132 w Fx(Ex)n(emple)p
0 0.5 1 0 TeXcolorcmyk 204 2736 a
tx@Dict begin  PutEnd  end
 204 2736 a 0 0 0 1
TeXcolorcmyk 175 2856 a FD(On)c(a)i(:)175 3058 y(cos)286
3026 y Fh(2)334 3058 y FD(30)o(\011)11 b Fj(+)h FD(sin)626
3026 y Fh(2)673 3058 y FD(30)o(\011)23 b Fj(=)g FD(1)171
b(cos)1208 3026 y Fh(2)1255 3058 y FD(67)o(\011)11 b
Fj(+)h FD(sin)1547 3026 y Fh(2)1595 3058 y FD(67)o(\011)22
b Fj(=)h FD(1)171 b(cos)2129 3026 y Fh(2)2176 3058 y
FD(0)o(\011)11 b Fj(+)h FD(sin)2429 3026 y Fh(2)2476
3058 y FD(0)o(\011)22 b Fj(=)h FD(1)p 0 0.5 1 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk -109
3532 a Fo(D)l(.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk
35 w Fz(Expression)28 b(de)g(la)h(tang)q(ente)d(\340)j(par)r(tir)g(du)f
(sin)o(us)f(et)i(du)f(cosin)o(us)p 0 0 0 1 TeXcolorcmyk
0 0.85 0.6 0.15 TeXcolorcmyk 33 3999 71 71 v 0 0 0 1
TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk 124 3999 a Fl(PR)n(OPRI\311T\311)p
0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0.1 0.2 0
TeXcolorcmyk 104 4775 3341 467 v 0 0.1 0.2 0 TeXcolorcmyk
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 175 4389 a
FD(Soit)22 b Fm(x)g FD(la)e(mesur)o(e)f(en)g(degr\351s)h(d'un)f(angle)h
(aigu.)175 4509 y(On)f(a)i(toujours)e(la)h(r\351lation)g(suivante)f(:)
1541 4646 y(tan)c Fm(x)26 b Fj(=)1833 4593 y FD(sin)16
b Fm(x)p 1829 4628 169 4 v 1829 4700 a FD(cos)f Fm(x)p
0 0 0 1 TeXcolorcmyk 0 0.1 0.2 0 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 0 1 0.6 0.4 TeXcolorcmyk 104 5666 9 536
v 0 0 0 1 TeXcolorcmyk 195 5201 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.15 0.05  setcmykcolor   0. true
0.0 -2.13394 49.63411 0.0 .5 Frame  gsave 0 0.2 0.15 0.05  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.05 0.05 0  setcmykcolor   0. true
0.0 0.0 49.63411 8.53581 .5 Frame  gsave 0 0.05 0.05 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 1 0.6 0.4  setcmykcolor  [ 8.53581
8.53581 0.0 8.53581 0.0 0.0  /Lineto /lineto load def 0  setlinejoin
false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat
}{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1
ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1
add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5
 1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length
x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos
ArrowPos dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha
cos ArrowPos mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside
known { ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos
1.  1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0 1 0.6 0.4  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial 195 5201 a
tx@Dict begin { 11.38107 0.0 } PutCoor PutBegin  end
 195 5201 a 1 0 0 0.5
TeXcolorcmyk Fx(PREUVE)p 0 0 0 1 TeXcolorcmyk 195 5201
a
tx@Dict begin  PutEnd  end
 195 5201 a 447 w FD(Dans)21 b(le)e(m\352me)g(triangle)g(que)g
(ci-dessus,)i(on)e(a)i(:)875 5457 y(sin)15 b Fm(x)p 870
5492 169 4 v 870 5564 a FD(cos)h Fm(x)1071 5510 y Fj(=)1183
5370 y Fm(A)r(C)p 1178 5406 118 4 v 1187 5478 a(B)r(C)p
1168 5492 138 4 v 1185 5557 a(A)t(B)p 1180 5592 115 4
v 1187 5664 a(B)r(C)1339 5510 y Fj(=)1441 5457 y Fm(A)r(C)p
1436 5492 118 4 v 1445 5564 a(B)r(C)1580 5510 y Ft(\004)1675
5457 y Fm(A)t(B)p 1670 5492 115 4 v 1677 5564 a(B)r(C)1817
5510 y Fj(=)1919 5457 y Fm(A)r(C)p 1914 5492 118 4 v
1923 5564 a(B)r(C)2058 5510 y Ft(\002)2155 5457 y Fm(B)r(C)p
2148 5492 115 4 v 2153 5564 a(A)t(B)2296 5510 y Fj(=)2398
5457 y Fm(A)r(C)p 2393 5492 118 4 v 2400 5564 a(A)t(B)2543
5510 y Fj(=)23 b FD(tan)15 b Fm(x)p 0 0 0 1 TeXcolorcmyk
0.6 0.95 0 0.2 TeXcolorcmyk 2758 5908 a Fv(Chapitre)k(SP14.)p
0 0 0 1 TeXcolorcmyk 48 w Fx(T)-8 b(r)q(igonom\351tr)q(ie)3728
5908 y
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 3728 5908 a -38 w Fv(57)3728 5908 y
tx@Dict begin  PutEnd  end
 3728 5908
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0 0 0 1 TeXcolorcmyk
eop end
%%Page: 58 11
TeXDict begin 58 10 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk -109 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true -37.84221 -8.53581
312.9803 31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 -8.53581
295.90868 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 -8.53581
304.44449 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 -8.53581
312.9803 0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 0.0 295.90868
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 0.0 304.44449
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 0.0 312.9803
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 287.37286 8.53581
295.90868 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 295.90868 8.53581
304.44449 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 304.44449 8.53581
312.9803 17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-109 -57 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 -109 -57 a 1 TeXcolorgray Fq(Cour)m(s)50 b(-)e(M\351thodes)p
0 0 0 1 TeXcolorcmyk -109 -57 a
tx@Dict begin  PutEnd  end
 -109 -57 a 0 0 0 1 TeXcolorcmyk
0.3 0 0 0.05 TeXcolorcmyk 33 2141 71 1832 v 0 0 0 1 TeXcolorcmyk
0.6 0 0 0.1 TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 33
401 696 92 v 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1 TeXcolorgray 104 393 a Fi(M\311THODE)23 b(10)p 0 0 0 1
TeXcolorcmyk 0.6 0 0 0.1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
175 516 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
-2.13394 85.35826 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
0.0 85.35826 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175 516 a
tx@Dict begin { 42.67914 0.0 } PutCoor PutBegin  end
 175 516 a 1 TeXcolorgray
-331 w Fx(Ex)n(ercice)d(d'application)p 0 0 0 1 TeXcolorcmyk
175 516 a
tx@Dict begin  PutEnd  end
 175 516 a 919 534 a FD(Soit)38 b Fm(x)h FD(la)e(mesur)o(e)e
(en)h(degr\351s)175 673 y(d'un)28 b(angle)h(aigu,)f(tel)g(que)g(sin)16
b Fm(x)42 b Fj(=)1373 619 y FD(12)p 1373 655 79 4 v 1373
727 a(13)1462 673 y(.)29 b(D\351terminer)175 792 y(les)20
b(valeurs)f(exactes)h(de)g(cos)15 b Fm(x)22 b FD(et)e(tan)15
b Fm(x)r FD(.)175 965 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.4 0 1 0.1  setcmykcolor   0. true 0.0
-2.13394 42.67912 8.53581 .5 Frame  gsave 0.4 0 1 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.6 0 0 0.1  setcmykcolor   0. true 0.0
0.0 42.67912 8.53581 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial 175 965 a
tx@Dict begin { 21.33957 0.0 } PutCoor PutBegin  end
 175
965 a 1 TeXcolorgray -158 w Fx(Correction)p 0 0 0 1 TeXcolorcmyk
175 965 a
tx@Dict begin  PutEnd  end
 175 965 a 565 983 a Fu(Calcul)20 b(de)h FD(cos)15
b Fm(x)175 1102 y FD(On)k(sait)i(que)e(:)723 1271 y(cos)834
1239 y Fh(2)883 1271 y Fm(x)g Fj(+)e FD(sin)1124 1239
y Fh(2)1173 1271 y Fm(x)26 b Fj(=)c FD(1)231 1468 y(Donc)33
b(cos)560 1435 y Fh(2)609 1468 y Fm(x)26 b Fj(=)d FD(1)16
b Ft(\000)g FD(sin)999 1435 y Fh(2)1048 1468 y Fm(x)25
b Fj(=)e FD(1)17 b Ft(\000)1336 1356 y Ff(\022)1405 1414
y FD(12)p 1405 1449 79 4 v 1405 1522 a(13)1495 1356 y
Ff(\023)1554 1376 y Fh(2)1611 1468 y Fj(=)1728 1414 y
FD(25)p 1708 1449 119 4 v 1708 1522 a(169)1836 1468 y(.)175
1650 y(On)27 b(r)o(econna\356t)f(une)g(\351quation)h(du)g(type)g
Fm(y)1499 1621 y Fh(2)1570 1650 y Fj(=)39 b Fm(a)q FD(,)27
b(o\371)h Fm(a)175 1769 y FD(est)19 b(un)h(nombr)o(e)e(positif.)175
1889 y(Donc)175 2079 y(cos)d Fm(x)26 b Fj(=)454 1954
y Ff(r)p 534 1954 139 4 v 563 2026 a FD(25)p 544 2061
119 4 v 544 2133 a(169)695 2079 y Fj(=)811 2026 y FD(5)p
791 2061 79 4 v 791 2133 a(13)959 2079 y(ou)92 b(cos)15
b Fm(x)26 b Fj(=)e Ft(\000)1487 1954 y Ff(r)p 1566 1954
139 4 v 1596 2026 a FD(25)p 1576 2061 119 4 v 1576 2133
a(169)1727 2079 y Fj(=)g Ft(\000)1910 2026 y FD(5)p 1890
2061 79 4 v 1890 2133 a(13)p 0.3 0 0 0.05 TeXcolorcmyk
2002 2141 9 1696 v 0 0 0 1 TeXcolorcmyk 2081 769 a(or)c(le)g(cosinus)g
(d'un)f(angle)h(aigu)f(est)h(positif,)g(d'o\371)g(:)2761
990 y(cos)c Fm(x)26 b Fj(=)3069 937 y FD(5)p 3049 972
79 4 v 3049 1044 a(13)2081 1193 y Fu(Calcul)21 b(de)g
FD(tan)15 b Fm(x)2081 1312 y FD(On)20 b(sait)g(que)f(:)2095
1620 y(tan)c Fm(x)25 b Fj(=)2387 1567 y FD(sin)15 b Fm(x)p
2382 1602 169 4 v 2382 1674 a FD(cos)h Fm(x)2583 1620
y Fj(=)2690 1481 y FD(12)p 2690 1516 79 4 v 2690 1588
a(13)p 2680 1602 99 4 v 2710 1666 a(5)p 2690 1701 79
4 v 2690 1773 a(13)2812 1620 y Fj(=)2908 1567 y FD(12)p
2908 1602 V 2908 1674 a(13)3013 1620 y Ft(\004)3123 1567
y FD(5)p 3104 1602 V 3104 1674 a(13)3215 1620 y Fj(=)3312
1567 y FD(12)p 3312 1602 V 3312 1674 a(13)3417 1620 y
Ft(\002)3507 1567 y FD(13)p 3507 1602 V 3527 1674 a(5)3619
1620 y Fj(=)3716 1567 y FD(12)p 3716 1602 V 3736 1674
a(5)2762 1974 y(tan)f Fm(x)25 b Fj(=)3049 1921 y FD(12)p
3049 1956 V 3069 2028 a(5)-109 2529 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.07 0.15 0  setcmykcolor   0. true
0.0 0.0 25.60744 25.60744 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor
 1. .setopacityalpha  fill  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 8.53581 25.60744 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.2 0.5 0  setcmykcolor   0. true 0.0
0.0 25.60744 8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0 0.5 1 0  setcmykcolor   0. true 0.0
0.0 8.53581 8.53581 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
-109 2529 a
tx@Dict begin { 25.60744 8.53581 } PutCoor PutBegin  end
 -109 2529 a 1 0 0 0.5 TeXcolorcmyk -124 w
Fp(6)p 0 0 0 1 TeXcolorcmyk 1 0 0 0.5 TeXcolorcmyk(.)p
0 0 0 1 TeXcolorcmyk -109 2529 a
tx@Dict begin  PutEnd  end
 -109 2529 a 1 0 0 0.5
TeXcolorcmyk 175 2458 a Fo(P)-5 b(our)35 b(quelques)h(e)n(x)o(er)n
(cices)h(de)e(plus)p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk -109 2675 a(A.)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0
TeXcolorcmyk 35 w Fz(V)-6 b(aleur)n(s)29 b(remar)n(quab)o(les)p
0 0 0 1 TeXcolorcmyk -109 2821 a FD(En)i(consid\351rant)h(un)e
(triangle)h(\351quilat\351ral)f(coup\351)h(en)g(deux)f(par)h(une)g
(m\351diatrice,)f(ou)g(un)h(carr\351)g(coup\351)g(en)f(deux)g(par)i
(une)-109 2940 y(diagonale,)24 b(on)f(peut)g(d\351terminer)g(des)h
(valeurs)f(exactes)g(des)h(cosinus,)f(sinus)h(et)f(tangentes)g(des)h
(angles)g(ayant)f(pour)h(mesur)o(es)-109 3060 y(30)o(\011,)19
b(45)o(\011et)g(60)o(\011.)-109 3182 y(Il)h(convient)e(de)i(r)o(etenir)
f(ces)h(valeurs,)f(elles)g(ser)o(ont)h(utiles)f(dans)i(la)f(suite)f(de)
h(vos)f(\351tudes.)p 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 903 3281 1955 4 v 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 903 3581 4 299 v 0 0 0 1 TeXcolorcmyk
956 3491 a(Mesur)o(e)i Fm(x)h FD(de)e(l'angle)p 0 0 0 0.5
TeXcolorcmyk 1690 3581 V 0 0 0 1 TeXcolorcmyk 136 w(0)o(\011)p
0 0 0 0.5 TeXcolorcmyk 1923 3581 V 0 0 0 1 TeXcolorcmyk
149 w(30)o(\011)p 0 0 0 0.5 TeXcolorcmyk 2156 3581 V
0 0 0 1 TeXcolorcmyk 130 w(45)o(\011)p 0 0 0 0.5 TeXcolorcmyk
2389 3581 V 0 0 0 1 TeXcolorcmyk 129 w(60)o(\011)p 0 0 0 0.5
TeXcolorcmyk 2621 3581 V 0 0 0 1 TeXcolorcmyk 130 w(90)o(\011)p
0 0 0 0.5 TeXcolorcmyk 2854 3581 V 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 903 3584 1955 4 v 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 903 3883 4 299 v 0 0 0 1 TeXcolorcmyk
1219 3793 a(sin)15 b Fm(x)p 0 0 0 0.5 TeXcolorcmyk 1690
3883 V 0 0 0 1 TeXcolorcmyk 1755 3672 a Ft(p)p 1824 3672
40 4 v 1824 3740 a FD(0)p 1754 3775 110 4 v 1789 3847
a(2)p 0 0 0 0.5 TeXcolorcmyk 1923 3883 4 299 v 0 0 0 1
TeXcolorcmyk 1987 3671 a Ft(p)p 2057 3671 40 4 v 2057
3740 a FD(1)p 1986 3775 110 4 v 2022 3847 a(2)p 0 0 0 0.5
TeXcolorcmyk 2156 3883 4 299 v 0 0 0 1 TeXcolorcmyk 2220
3672 a Ft(p)p 2289 3672 40 4 v 2289 3740 a FD(2)p 2219
3775 110 4 v 2254 3847 a(2)p 0 0 0 0.5 TeXcolorcmyk 2389
3883 4 299 v 0 0 0 1 TeXcolorcmyk 2453 3672 a Ft(p)p
2522 3672 40 4 v 2522 3740 a FD(3)p 2452 3775 110 4 v
2487 3847 a(2)p 0 0 0 0.5 TeXcolorcmyk 2621 3883 4 299
v 0 0 0 1 TeXcolorcmyk 2686 3671 a Ft(p)p 2755 3671 40
4 v 2755 3740 a FD(4)p 2685 3775 110 4 v 2720 3847 a(2)p
0 0 0 0.5 TeXcolorcmyk 2854 3883 4 299 v 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 903 3886 1955 4 v 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 903 4185 4 299 v 0 0 0 1 TeXcolorcmyk
1219 4095 a(sin)g Fm(x)p 0 0 0 0.5 TeXcolorcmyk 1690
4185 V 0 0 0 1 TeXcolorcmyk 414 w FD(0)p 0 0 0 0.5 TeXcolorcmyk
1923 4185 V 0 0 0 1 TeXcolorcmyk 2022 4042 a(1)p 2022
4077 40 4 v 2022 4150 a(2)p 0 0 0 0.5 TeXcolorcmyk 2156
4185 4 299 v 0 0 0 1 TeXcolorcmyk 2220 3974 a Ft(p)p
2289 3974 40 4 v 2289 4042 a FD(2)p 2219 4077 110 4 v
2254 4150 a(2)p 0 0 0 0.5 TeXcolorcmyk 2389 4185 4 299
v 0 0 0 1 TeXcolorcmyk 2453 3974 a Ft(p)p 2522 3974 40
4 v 2522 4042 a FD(3)p 2452 4077 110 4 v 2487 4150 a(2)p
0 0 0 0.5 TeXcolorcmyk 2621 4185 4 299 v 0 0 0 1 TeXcolorcmyk
2720 4095 a(1)p 0 0 0 0.5 TeXcolorcmyk 2854 4185 V 0 0 0 1
TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 903 4188 1955 4 v
0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 903 4487
4 299 v 0 0 0 1 TeXcolorcmyk 1214 4398 a(cos)h Fm(x)p
0 0 0 0.5 TeXcolorcmyk 1690 4487 V 0 0 0 1 TeXcolorcmyk
1755 4276 a Ft(p)p 1824 4276 40 4 v 1824 4344 a FD(4)p
1754 4379 110 4 v 1789 4452 a(2)p 0 0 0 0.5 TeXcolorcmyk
1923 4487 4 299 v 0 0 0 1 TeXcolorcmyk 1987 4276 a Ft(p)p
2057 4276 40 4 v 2057 4344 a FD(3)p 1986 4379 110 4 v
2022 4452 a(2)p 0 0 0 0.5 TeXcolorcmyk 2156 4487 4 299
v 0 0 0 1 TeXcolorcmyk 2220 4276 a Ft(p)p 2289 4276 40
4 v 2289 4344 a FD(2)p 2219 4379 110 4 v 2254 4452 a(2)p
0 0 0 0.5 TeXcolorcmyk 2389 4487 4 299 v 0 0 0 1 TeXcolorcmyk
2453 4276 a Ft(p)p 2522 4276 40 4 v 2522 4344 a FD(1)p
2452 4379 110 4 v 2487 4452 a(2)p 0 0 0 0.5 TeXcolorcmyk
2621 4487 4 299 v 0 0 0 1 TeXcolorcmyk 2686 4276 a Ft(p)p
2755 4276 40 4 v 2755 4344 a FD(0)p 2685 4379 110 4 v
2720 4452 a(2)p 0 0 0 0.5 TeXcolorcmyk 2854 4487 4 299
v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 903 4490
1955 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
903 4789 4 299 v 0 0 0 1 TeXcolorcmyk 1214 4700 a(cos)g
Fm(x)p 0 0 0 0.5 TeXcolorcmyk 1690 4789 V 0 0 0 1 TeXcolorcmyk
409 w FD(1)p 0 0 0 0.5 TeXcolorcmyk 1923 4789 V 0 0 0 1
TeXcolorcmyk 1987 4579 a Ft(p)p 2057 4579 40 4 v 2057
4646 a FD(3)p 1986 4682 110 4 v 2022 4754 a(2)p 0 0 0 0.5
TeXcolorcmyk 2156 4789 4 299 v 0 0 0 1 TeXcolorcmyk 2220
4578 a Ft(p)p 2289 4578 40 4 v 2289 4646 a FD(2)p 2219
4682 110 4 v 2254 4754 a(2)p 0 0 0 0.5 TeXcolorcmyk 2389
4789 4 299 v 0 0 0 1 TeXcolorcmyk 2487 4646 a(1)p 2487
4682 40 4 v 2487 4754 a(2)p 0 0 0 0.5 TeXcolorcmyk 2621
4789 4 299 v 0 0 0 1 TeXcolorcmyk 2720 4700 a(0)p 0 0 0 0.5
TeXcolorcmyk 2854 4789 V 0 0 0 1 TeXcolorcmyk 0 0 0 0.5
TeXcolorcmyk 903 4792 1955 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5
TeXcolorcmyk 903 5092 4 299 v 0 0 0 1 TeXcolorcmyk 1215
5002 a(tan)f Fm(x)p 0 0 0 0.5 TeXcolorcmyk 1690 5092
V 0 0 0 1 TeXcolorcmyk 409 w FD(0)p 0 0 0 0.5 TeXcolorcmyk
1923 5092 V 0 0 0 1 TeXcolorcmyk 1987 4881 a Ft(p)p 2057
4881 40 4 v 2057 4949 a FD(3)p 1986 4984 110 4 v 2022
5056 a(3)p 0 0 0 0.5 TeXcolorcmyk 2156 5092 4 299 v 0 0 0 1
TeXcolorcmyk 2254 5002 a(1)p 0 0 0 0.5 TeXcolorcmyk 2389
5092 V 0 0 0 1 TeXcolorcmyk 2453 4934 a Ft(p)p 2522 4934
40 4 v 2522 5002 a FD(3)p 0 0 0 0.5 TeXcolorcmyk 2621
5092 4 299 v 0 0 0 1 TeXcolorcmyk 0 TeXcolorgray 2625
5092 230 299 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
2854 5092 4 299 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
903 5095 1955 4 v 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15
TeXcolorcmyk -109 5359 a Fo(B.)p 0 0 0 1 TeXcolorcmyk
0 0.5 1 0 TeXcolorcmyk 35 w Fz(Kit)28 b(de)h(sur)q(vie)p
0 0 0 1 TeXcolorcmyk -109 5505 a FD(Si)19 b(on)g(doit)g(d\351terminer)e
(le)i(cosinus,)g(le)f(sinus,)h(la)g(tangente)e(d'un)i(angle,)f(ou)g(la)
h(mesur)o(e)f(de)h(l'angle)f(\340)h(partir)h(de)e(son)i(cosinus,)e(de)
-109 5624 y(son)i(sinus)g(ou)g(de)g(sa)g(tangente,)f(on)g(peut)g
(obtenir)g(des)h(valeurs)g(appr)o(och\351es)h(satisfaisantes)h(\340)e
(partir)g(du)g(dessin)g(suivant)g(:)p 0 0 0 1 TeXcolorcmyk
-109 5908 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 -109 5908 a -38 w Fv(58)-109 5908 y
tx@Dict begin  PutEnd  end
 -109
5908 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.6 0.95 0 0.2
TeXcolorcmyk 162 w Fv(Chapitre)e(SP14.)p 0 0 0 1 TeXcolorcmyk
48 w Fx(T)-8 b(r)q(igonom\351tr)q(ie)p 0 0 0 1 TeXcolorcmyk
eop end
%%Page: 59 12
TeXDict begin 59 11 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 1251 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 350.82251
31.2982 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -8.53581 8.53581
0.0 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 -8.53581
17.07162 0.0 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 -8.53581
25.60744 0.0 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 0.0 8.53581
8.53581 .5 Frame  gsave 0 0.2 0.5 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 0.0 17.07162
8.53581 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 0.0 25.60744
8.53581 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 8.53581 8.53581
17.07162 .5 Frame  gsave 0 0.07 0.15 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 8.53581 8.53581
17.07162 17.07162 .5 Frame  gsave 0.3 0 0 0.05  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 17.07162 8.53581
25.60744 17.07162 .5 Frame  gsave 0.6 0 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
1251 -57 a
tx@Dict begin { 312.9803 0.0 } PutCoor PutBegin  end
 1251 -57 a 1 TeXcolorgray -1461 w Fq(Cour)m(s)49
b(-)f(M\351thodes)p 0 0 0 1 TeXcolorcmyk 1251 -57 a
tx@Dict begin  PutEnd  end
 1251
-57 a 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk 1332 1345 a

 1332 1345 a 1332 1345 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 1 setlinecap

 save

 0.5 setgray

 0.19925 pgfw

 -17.00781 -17.00781 moveto

 -17.00781 0.0 moveto

 110.5528 0.0 lineto

 -17.00781 42.52019 moveto

 110.5528 42.52019 lineto

 -17.00781 85.04037 moveto

 110.5528 85.04037 lineto

 0.0 -17.00781 moveto

 0.0 110.5528 lineto

 42.52019 -17.00781 moveto

 42.52019 110.5528 lineto

 85.04037 -17.00781 moveto

 85.04037 110.5528 lineto

 pgfstr

 restore

 save

 1.19553 pgfw

 85.04042 0.0 moveto

 85.04042 46.96713 46.96713 85.04042 0.0 85.04042 curveto

 pgfstr

 restore

 save

 -17.00781 0.0 moveto

 110.09451 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 110.09451 0.0 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 113.90657 -2.2431 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1334
1345 a Fm(x)1332 1345 y


 pgfr

 restore

 restore

 0.0 -17.00781 moveto

 0.0 110.09451 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 110.09451 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.48445 116.52354 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1333 1345 a Fm(y)1332 1345 y


 pgfr

 restore

 restore

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.92471 11.04137 -11.24063 -13.12396 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -8.08609 -9.81802 ] concat

 pgfs



 0 0 0 1 setcmykcolor

1332 1345 a FD(0)1332 1345 y


 pgfr

 restore

 restore

 85.04042 2.98883 moveto

 85.04042 -2.98883 lineto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.972 11.04137 79.51973 -16.16008 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 82.67427 -12.94884 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1332 1345 a FD(1)1332 1345
y


 pgfr

 restore

 restore

 2.98883 42.52019 moveto

 -2.98883 42.52019 lineto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 18.3672 12.29663 -15.48471 33.33658 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -12.33018 39.79951 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1342 1314 a Fh(1)p 1342 1327 30 4 v 1342 1372 a(2)1332
1345 y


 pgfr

 restore

 restore

 2.98883 85.04042 moveto

 -2.98883 85.04042 lineto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.972 11.04137 -14.22946 78.55443 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -11.07492 81.76566 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 1332 1345 a FD(1)1332 1345 y


 pgfr

 restore

 restore

 restore

 save

 /pgffc{0.8 1 0.8 setrgbcolor}def

 /pgfsc{0 0.5 0 setrgbcolor}def

 0.0 0.0 moveto

 25.51208 0.0 lineto

 25.51208 4.47713 24.33272 8.87874 22.09415 12.75601 curveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 16.42853 4.40196 moveto

 pgfstr

 save
 0 0.5 0 TeXcolorrgb
 save

0 0.5 0 TeXcolorrgb 0 0.5 0 TeXcolorrgb
 restore

 save

 [1.0 0.0 0.0 1.0 13.81157 2.15886 ] concat

 pgfs



 0 0.5 0 setrgbcolor
 1333 1345 a Fn(a)1332
1345 y


 pgfr

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save

 1.19553 pgfw
 1 0 0 TeXcolorrgb
 73.64732 42.52019 moveto

 73.64732 0.0 lineto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.92471 25.39587 46.65742 14.79774 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 49.81195 18.1037 ] concat

 pgfs



 1 0 0 setrgbcolor
 1332 1345
a FD(sin)14 b Fn(a)1332 1345 y


 pgfr

 restore

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 save

 1.19553 pgfw
 0 0 1
TeXcolorrgb
 0.0 0.0 moveto

 73.64732 0.0 lineto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.0366 26.50328 23.57199 -13.6269 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 26.72653 -10.32097 ] concat

 pgfs



 0 0 1 setrgbcolor
 1332 1345 a FD(cos)h Fn(a)1332 1345 y


 pgfr

 restore

 restore
 0 0 0 1
TeXcolorcmyk
 restore

 save

 1.19553 pgfw
 0.8 0.4 0 TeXcolorrgb
 85.04042 0.0 moveto

 85.0432 49.09998 lineto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 25.825 62.19263 86.63582 11.63748 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 89.79036 21.43617 ] concat

 pgfs



 0.8 0.4 0 setrgbcolor
 1332 1345 a FD(tan)f
Fn(a)p 0 TeXcolorgray 24 w Fj(=)p 1 0 0 TeXcolorrgb 1624
1291 a FD(sin)g Fn(a)p 0 TeXcolorgray 1619 1327 169 4
v 0 0 1 TeXcolorrgb 1619 1399 a FD(cos)h Fn(a)p 0 TeXcolorgray
0.8 0.4 0 TeXcolorrgb 1332 1345 a


 pgfr

 restore

 restore

 save

 restore
 0 0 0 1 TeXcolorcmyk
 restore

 0.0 0.0 moveto

 85.04189 49.09921 lineto

 pgfstr

 restore

 newpath

 restore

 pgfc



0 0.85 0.6 0.15 TeXcolorcmyk -109 1785 a Fo(C.)p 0 0 0 1
TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk 35 w Fz(Fonctions)26
b(trigonom\351triques)p 0 0 0 1 TeXcolorcmyk -109 1929
a FD(Soient)32 b Fm(f)12 b FD(,)24 b Fm(g)f FD(et)f Fm(h)h
FD(les)e(tr)o(ois)h(fonctions)f(qui)g(\340)h(toute)e(mesur)o(e)g
(d'angle)i(aigu)f(\(en)g(degr\351s\))h(associe)h(r)o(espectivement)c
(le)i(cosinus,)h(le)-109 2048 y(sinus)e(et)g(la)g(tangente)e(de)i
(l'angle.)872 2251 y Fm(f)35 b FD(:)46 b Fm(x)26 b Ft(7)r(!)d
FD(cos)16 b Fm(x)321 b(g)24 b FD(:)46 b Fm(x)26 b Ft(7)r(!)d
FD(sin)15 b Fm(x)319 b(h)25 b FD(:)46 b Fm(x)26 b Ft(7)r(!)d
FD(tan)15 b Fm(x)-109 2453 y FD(Les)20 b(r)o(epr\351sentations)g
(graphiques)h(de)e(ces)h(3)h(fonctions)f(sont)f(trac\351es)h(dans)h
(les)f(deux)f(r)o(ep\350r)o(es)g(ci-dessous.)p 0 0 0 1
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 376 3956 a

 376 3956
a 376 3956 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 0.19925 pgfw

 0.5 setgray

 0.0 0.0 moveto

 0.0 0.0 moveto

 127.56755 0.0 lineto

 0.0 28.3468 moveto

 127.56755 28.3468 lineto

 0.0 56.69362 moveto

 127.56755 56.69362 lineto

 0.0 0.0 moveto

 0.0 56.69363 lineto

 21.26125 0.0 moveto

 21.26125 56.69363 lineto

 42.5225 0.0 moveto

 42.5225 56.69363 lineto

 63.78377 0.0 moveto

 63.78377 56.69363 lineto

 85.04503 0.0 moveto

 85.04503 56.69363 lineto

 106.30629 0.0 moveto

 106.30629 56.69363 lineto

 127.55759 0.0 moveto

 127.55759 56.69363 lineto

 pgfstr

 restore

 -0.28346 0.0 moveto

 141.28345 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 141.28345 0.0 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 145.0955 -2.2431 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 378 3956 a Fm(x)376 3956 y


 pgfr

 restore

 restore

 0.0 -2.83484 moveto

 0.0 67.5739 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 67.5739 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.36043 74.00291 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 387 3956 a Fm(f)13
b Fj(\()s Fm(x)s Fj(\))376 3956 y


 pgfr

 restore

 restore

 save

 0 0 1 setrgbcolor

 0.0 0.0 moveto

 5.3153 3.70769 lineto

 10.63062 7.39897 lineto

 15.94592 11.05911 lineto

 21.26125 14.67342 lineto

 26.57657 18.22282 lineto

 31.89188 21.69437 lineto

 37.20718 25.07336 lineto

 42.5225 28.3468 lineto

 47.83781 31.49568 lineto

 53.15314 34.51134 lineto

 58.46844 37.37993 lineto

 63.78377 40.08847 lineto

 69.09908 42.6223 lineto

 74.4144 44.97615 lineto

 79.7297 47.13712 lineto

 85.04503 49.09825 lineto

 90.36034 50.84483 lineto

 95.67564 52.37602 lineto

 100.99097 53.68315 lineto

 106.30629 54.76192 lineto

 111.6216 55.60277 lineto

 116.9369 56.20659 lineto

 122.25221 56.56992 lineto

 127.56755 56.69363 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 130.92133 54.30144 ] concat

 pgfs



 0 0 1 setrgbcolor
 379 3956 a Fm(g)r Fj(\()s
Fm(x)s Fj(\))24 b(=)f FD(sin)16 b Fm(x)376 3956 y


 pgfr

 restore

 restore

 restore

 save

 1 0 0 setrgbcolor

 0.0 56.69363 moveto

 5.3153 56.56992 lineto

 10.63062 56.20659 lineto

 15.94592 55.60277 lineto

 21.26125 54.76192 lineto

 26.57657 53.68315 lineto

 31.89188 52.37602 lineto

 37.20718 50.84483 lineto

 42.5225 49.09825 lineto

 47.83781 47.13712 lineto

 53.15314 44.97615 lineto

 58.46844 42.6223 lineto

 63.78377 40.08847 lineto

 69.09908 37.37993 lineto

 74.4144 34.51134 lineto

 79.7297 31.49568 lineto

 85.04503 28.3468 lineto

 90.36034 25.07336 lineto

 95.67564 21.69437 lineto

 100.99097 18.22282 lineto

 106.30629 14.67342 lineto

 111.6216 11.05911 lineto

 116.9369 7.39897 lineto

 122.25221 3.70769 lineto

 127.56755 0.0 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 130.92133 5.97073 ] concat

 pgfs



 1 0 0 setrgbcolor
 387
3956 a Fm(f)d Fj(\()s Fm(x)s Fj(\))24 b(=)f FD(cos)15
b Fm(x)376 3956 y


 pgfr

 restore

 restore

 restore

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.22832 10.54323 -10.7425 -12.42757 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -7.58795 -9.13757 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 376 3956 a Fe(0)376 3956 y


 pgfr

 restore

 restore

 42.5225 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31302 17.31793 33.86354 -12.51227 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 37.01807 -9.22229 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 376 3956
a Fe(30)o(\011)376 3956 y


 pgfr

 restore

 restore

 85.04503 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31302 17.31793 76.38606 -12.51227 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 79.54059 -9.22229 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 376 3956 a Fe(60)o(\011)376
3956 y


 pgfr

 restore

 restore

 127.56755 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31302 17.31793 118.90857 -12.51227 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 122.06311 -9.22229 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 376 3956 a Fe(90)o(\011)376 3956 y


 pgfr

 restore

 restore

 0.0 28.3468 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.09793 11.91805 -12.1173 19.79784 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -8.96275 25.9125 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 386 3929 a
Fd(1)p 386 3941 27 3 v 386 3981 a(2)376 3956 y


 pgfr

 restore

 restore

 0.0 56.69363 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.27063 10.54323 -10.7425 50.5583 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -7.58795 53.76358 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 376 3956
a Fe(1)376 3956 y


 pgfr

 restore

 restore

 restore

 restore

 newpath

 restore

 pgfc


 2210 3956 a

 2210 3956 a 2210 3956 a


 pgfo

 save

 0 0 0 1 setcmykcolor

 0.3985 pgfw

 save

 save

 0.19925 pgfw

 0.5 setgray

 0.0 0.0 moveto

 0.0 0.0 moveto

 127.56755 0.0 lineto

 0.0 14.17339 moveto

 127.56755 14.17339 lineto

 0.0 28.34679 moveto

 127.56755 28.34679 lineto

 0.0 42.52019 moveto

 127.56755 42.52019 lineto

 0.0 56.69359 moveto

 127.56755 56.69359 lineto

 0.0 70.86697 moveto

 127.56755 70.86697 lineto

 0.0 85.04037 moveto

 127.56755 85.04037 lineto

 0.0 99.21378 moveto

 127.56755 99.21378 lineto

 0.0 113.38718 moveto

 127.56755 113.38718 lineto

 0.0 127.56056 moveto

 127.56755 127.56056 lineto

 0.0 141.72401 moveto

 127.56755 141.72401 lineto

 0.0 0.0 moveto

 0.0 141.73396 lineto

 21.26125 0.0 moveto

 21.26125 141.73396 lineto

 42.5225 0.0 moveto

 42.5225 141.73396 lineto

 63.78377 0.0 moveto

 63.78377 141.73396 lineto

 85.04503 0.0 moveto

 85.04503 141.73396 lineto

 106.30629 0.0 moveto

 106.30629 141.73396 lineto

 127.55759 0.0 moveto

 127.55759 141.73396 lineto

 pgfstr

 restore

 -0.28346 0.0 moveto

 141.28345 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 141.28345 0.0 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 145.0955 -2.2431 ] concat

 pgfs



 0 0 0 1 setcmykcolor

2212 3956 a Fm(x)2210 3956 y


 pgfr

 restore

 restore

 0.0 -0.7087 moveto

 0.0 149.77982 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 149.77982 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.36043 156.20883 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2221 3956 a Fm(f)e Fj(\()s
Fm(x)s Fj(\))2210 3956 y


 pgfr

 restore

 restore

 save

 0 0 1 setrgbcolor

 0.0 0.0 moveto

 4.93141 0.86139 lineto

 9.86282 1.72949 lineto

 14.79424 2.61035 lineto

 19.72565 3.51134 lineto

 24.65707 4.43999 lineto

 29.58849 5.40454 lineto

 34.5199 6.41537 lineto

 39.45131 7.48267 lineto

 44.38274 8.62132 lineto

 49.31415 9.84737 lineto

 54.24556 11.18109 lineto

 59.17697 12.6504 lineto

 64.1084 14.28735 lineto

 69.03983 16.13818 lineto

 73.97124 18.26431 lineto

 78.90265 20.75337 lineto

 83.83408 23.72598 lineto

 88.76549 27.37097 lineto

 93.6969 31.99112 lineto

 98.62831 38.08038 lineto

 103.55972 46.54062 lineto

 108.49115 59.23236 lineto

 113.42256 80.55885 lineto

 118.35397 124.40843 lineto

 pgfstr

 restore

 save

 0 0 1 setrgbcolor

 [ 2.98883 2.98883 ] 0.0 setdash

 118.35432 124.41039 moveto

 118.41338 125.22702 lineto

 118.47241 126.04366 lineto

 118.53146 126.8672 lineto

 118.5905 127.71973 lineto

 118.64955 128.58092 lineto

 118.70859 129.4179 lineto

 118.76764 130.31474 lineto

 118.82668 131.2114 lineto

 118.88573 132.08275 lineto

 118.94478 133.00534 lineto

 119.00381 133.95044 lineto

 119.06287 134.88623 lineto

 119.1219 135.81792 lineto

 119.18095 136.77751 lineto

 119.23999 137.76175 lineto

 119.29904 138.74814 lineto

 119.35808 139.74818 lineto

 119.41713 140.79146 lineto

 119.47617 141.81851 lineto

 119.53522 142.86137 lineto

 119.59425 143.93732 lineto

 119.6533 145.0113 lineto

 119.71236 146.08919 lineto

 119.7714 147.21378 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 64.76764 153.03783 ] concat

 pgfs



 0 0 1 setrgbcolor
 2211 3956 a Fm(h)r Fj(\()s Fm(x)s
Fj(\))25 b(=)e FD(tan)15 b Fm(x)2210 3956 y


 pgfr

 restore

 restore

 restore

 save

 0.0 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.22832 10.54323 -10.7425 -12.42757 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -7.58795 -9.13757 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2210 3956
a Fe(0)2210 3956 y


 pgfr

 restore

 restore

 42.5225 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31302 17.31793 33.86354 -12.51227 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 37.01807 -9.22229 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2210 3956 a Fe(30)o(\011)2210 3956
y


 pgfr

 restore

 restore

 85.04503 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31302 17.31793 76.38606 -12.51227 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 79.54059 -9.22229 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2210 3956 a Fe(60)o(\011)2210 3956 y


 pgfr

 restore

 restore

 127.56755 0.0 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.31302 17.31793 118.90857 -12.51227 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 122.06311 -9.22229 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2210 3956 a Fe(90)o(\011)2210
3956 y


 pgfr

 restore

 restore

 0.0 14.17339 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.27063 10.54323 -10.7425 8.03807 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -7.58795 11.24335 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2210 3956 a Fe(1)2210 3956 y


 pgfr

 restore

 restore

 0.0 28.34679 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.14357 10.54323 -10.7425 22.275 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -7.58795 25.48027 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2210 3956 a Fe(2)2210
3956 y


 pgfr

 restore

 restore

 0.0 70.86697 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.22832 10.54323 -10.7425 64.75282 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -7.58795 68.04282 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2210 3956 a Fe(5)2210 3956 y


 pgfr

 restore

 restore

 0.0 141.73396 moveto

 pgfstr

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 12.35535 14.7774 -14.97667 135.55629 pgfe

 gsave pgffc pgffill grestore newpath

 restore

 save

 [1.0 0.0 0.0 1.0 -11.82213 138.84627 ] concat

 pgfs



 0 0 0 1 setcmykcolor
 2210 3956 a Fe(10)2210
3956 y


 pgfr

 restore

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 0 0 1 TeXcolorcmyk 0.6 0.95 0 0.2 TeXcolorcmyk
2758 5908 a Fv(Chapitre)k(SP14.)p 0 0 0 1 TeXcolorcmyk
48 w Fx(T)-8 b(r)q(igonom\351tr)q(ie)3728 5908 y
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 3728
5908 a -38 w Fv(59)3728 5908 y
tx@Dict begin  PutEnd  end
 3728 5908 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -2.84526 17.07164
-19.91702 .5 Frame  gsave 0.15 0 0 0.03  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0 0 0 1 TeXcolorcmyk eop end
%%Page: 60 13
TeXDict begin 60 12 bop 0 0 0 1 TeXcolorcmyk 0 0 0 1
TeXcolorcmyk -109 -57 a
tx@Dict begin { -37.84221 31.2982 } PutCoor PutBegin  end
 -109 -57 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray  [ 51.21494 0.0 51.21494 -25.60747
25.60747 -25.60747 25.60747 -768.2244 0.0 -768.2244 0.0 0.0  /Lineto
/lineto load def 0  setlinejoin false NArray n 2 eq { 0 0 /n 3 def
} if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed } if n 2
mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1
y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto /n
n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12
x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11 sub
Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos add
def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add y11
Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 0 0.2
0.5 0  setcmykcolor  1. .setopacityalpha  fill  grestore end


@endspecial -109 -57 a
tx@Dict begin  PutEnd  end
 -109 -57 a 0 0 0 1 TeXcolorcmyk
-109 392 a
tx@Dict begin { 0.0 25.60747 } PutCoor PutBegin  end
 -109 392 a Fc(SOLUTIONS)-109 392 y
tx@Dict begin  PutEnd  end
 -109 392
a 125 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 0.0 148.33368
12.80373 .5 Frame  gsave 0.6 0.95 0 0.2  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -109 517
a
tx@Dict begin { 74.16684 2.84526 } PutCoor PutBegin  end
 -109 517 a 0 0 0 0 TeXcolorcmyk -293 w Fi(Chapitre)23
b(SP14)p 0 0 0 1 TeXcolorcmyk -109 517 a
tx@Dict begin  PutEnd  end
 -109 517 a 0.6 0.95 0 0.2
TeXcolorcmyk 219 613 a Fi(T)-7 b(rigonom\351trie)p 0 0 0 1
TeXcolorcmyk 0 0.8 0.5 0 TeXcolorcmyk -109 1844 a Fb(A)n(uto-\351v)n
(aluation)p 0 0 0 1 TeXcolorcmyk 0 0.5 1 0 TeXcolorcmyk
1193 1885 2 1475 v 0 0 0 1 TeXcolorcmyk 1265 621 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -1.42262 14.22636
7.11317 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 1265 621 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 1265 621 a 0 0 0 0
TeXcolorcmyk -19 w Fv(1)p 0 0 0 1 TeXcolorcmyk 1265 621
a
tx@Dict begin  PutEnd  end
 1265 621 a 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 1400 534 4 124 v 0 0 0 1 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk 1408 534
493 124 v 0 0 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1454 498 a FD(Couleur)p 0 0 0 0.5 TeXcolorcmyk 1905 534
4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk 1908
534 282 124 v 0 0 0 1 TeXcolorcmyk 217 w(Jaune)p 0 0 0 0.5
TeXcolorcmyk 2190 534 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0
TeXcolorcmyk 2193 534 282 124 v 0 0 0 1 TeXcolorcmyk
88 w(Blanc)p 0 0 0 0.5 TeXcolorcmyk 2475 534 4 124 v
0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 1400 537
1078 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
1400 661 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
1408 661 493 124 v 0 0 0 1 TeXcolorcmyk 1454 625 a(Fr\351quences)p
0 0 0 0.5 TeXcolorcmyk 1905 661 4 124 v 0 0 0 1 TeXcolorcmyk
131 w(0,02)p 0 0 0 0.5 TeXcolorcmyk 2190 661 V 0 0 0 1
TeXcolorcmyk 148 w(0,56)p 0 0 0 0.5 TeXcolorcmyk 2475
661 V 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 1400
664 1078 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
1400 788 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
1408 788 493 124 v 0 0 0 1 TeXcolorcmyk 1454 752 a(Pour)o(centage)p
0 0 0 0.5 TeXcolorcmyk 1905 788 4 124 v 0 0 0 1 TeXcolorcmyk
140 w(2)p 0 0 0 0.5 TeXcolorcmyk 2190 788 V 0 0 0 1 TeXcolorcmyk
227 w(56)p 0 0 0 0.5 TeXcolorcmyk 2475 788 V 0 0 0 1
TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 1400 791 1078 4 v
0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 1400 1007 4 124 v 0 0 0 1 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk 1408 1007
493 124 v 0 0 0.2 0 TeXcolorcmyk 0 0 0 1 TeXcolorcmyk
1454 971 a(Couleur)p 0 0 0 0.5 TeXcolorcmyk 1905 1007
4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk 1908
1007 282 124 v 0 0 0 1 TeXcolorcmyk 217 w(Rouge)p 0 0 0 0.5
TeXcolorcmyk 2190 1007 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0
TeXcolorcmyk 2193 1007 282 124 v 0 0 0 1 TeXcolorcmyk
72 w(Bleu)p 0 0 0 0.5 TeXcolorcmyk 2475 1007 4 124 v
0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 1400 1010
1078 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
1400 1134 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
1408 1134 493 124 v 0 0 0 1 TeXcolorcmyk 1454 1098 a(Fr\351quences)p
0 0 0 0.5 TeXcolorcmyk 1905 1134 4 124 v 0 0 0 1 TeXcolorcmyk
131 w(0,03)p 0 0 0 0.5 TeXcolorcmyk 2190 1134 V 0 0 0 1
TeXcolorcmyk 148 w(0,01)p 0 0 0 0.5 TeXcolorcmyk 2475
1134 V 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 1400
1137 1078 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
1400 1261 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
1408 1261 493 124 v 0 0 0 1 TeXcolorcmyk 1454 1225 a(Pour)o(centage)p
0 0 0 0.5 TeXcolorcmyk 1905 1261 4 124 v 0 0 0 1 TeXcolorcmyk
140 w(3)p 0 0 0 0.5 TeXcolorcmyk 2190 1261 V 0 0 0 1
TeXcolorcmyk 246 w(1)p 0 0 0 0.5 TeXcolorcmyk 2475 1261
V 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk 1400 1264
1078 4 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5 TeXcolorcmyk
1400 1432 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk 1408 1432 493 124 v 0 0 0.2 0
TeXcolorcmyk 0 0 0 1 TeXcolorcmyk 1454 1396 a(Couleur)p
0 0 0 0.5 TeXcolorcmyk 1905 1432 4 124 v 0 0 0 1 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk 1908 1432 282 124 v 0 0 0 1 TeXcolorcmyk
237 w(V)e(ert)p 0 0 0 0.5 TeXcolorcmyk 2190 1432 4 124
v 0 0 0 1 TeXcolorcmyk 0 0 0.2 0 TeXcolorcmyk 2193 1432
282 124 v 0 0 0 1 TeXcolorcmyk 132 w(Noir)p 0 0 0 0.5
TeXcolorcmyk 2475 1432 4 124 v 0 0 0 1 TeXcolorcmyk 0 0 0 0.5
TeXcolorcmyk 1400 1435 1078 4 v 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 1400 1559 4 124 v 0 0 0 1 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk 1408 1559 493 124 v 0 0 0 1 TeXcolorcmyk
1454 1523 a(fr\351quences)p 0 0 0 0.5 TeXcolorcmyk 1905
1559 4 124 v 0 0 0 1 TeXcolorcmyk 149 w(0,06)p 0 0 0 0.5
TeXcolorcmyk 2190 1559 V 0 0 0 1 TeXcolorcmyk 148 w(0,31)p
0 0 0 0.5 TeXcolorcmyk 2475 1559 V 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 1400 1562 1078 4 v 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 1400 1686 4 124 v 0 0 0 1 TeXcolorcmyk
0 0 0.2 0 TeXcolorcmyk 1408 1686 493 124 v 0 0 0 1 TeXcolorcmyk
1454 1650 a(pour)o(centage)p 0 0 0 0.5 TeXcolorcmyk 1905
1686 4 124 v 0 0 0 1 TeXcolorcmyk 141 w(6)p 0 0 0 0.5
TeXcolorcmyk 2190 1686 V 0 0 0 1 TeXcolorcmyk 227 w(31)p
0 0 0 0.5 TeXcolorcmyk 2475 1686 V 0 0 0 1 TeXcolorcmyk
0 0 0 0.5 TeXcolorcmyk 1400 1689 1078 4 v 0 0 0 1 TeXcolorcmyk
0 0.5 1 0 TeXcolorcmyk 2566 1885 2 1475 v 0 0 0 1 TeXcolorcmyk
2638 494 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -1.42262 14.22636
7.11317 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 2638
494 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 2638 494 a 0 0 0 0 TeXcolorcmyk -19 w Fv(2)p 0 0 0 1
TeXcolorcmyk 2638 494 a
tx@Dict begin  PutEnd  end
 2638 494 a 0 0.85 0.6 0.15 TeXcolorcmyk
136 w Fu(1\))p 0 0 0 1 TeXcolorcmyk 0 0.85 0.6 0.15 TeXcolorcmyk
2783 613 a(a\))p 0 0 0 1 TeXcolorcmyk 20 w FD(12)q(/)q(87)p
0 0.85 0.6 0.15 TeXcolorcmyk 269 w Fu(b\))p 0 0 0 1 TeXcolorcmyk
14 w FD(53)q(/)q(87)p 0 0.85 0.6 0.15 TeXcolorcmyk 2774
733 a Fu(2\))p 0 0 0 1 TeXcolorcmyk 40 w FD(22)q(/)q(34)2638
836 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -1.42262 14.22636
7.11317 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 2638 836
a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 2638 836 a 0 0 0 0 TeXcolorcmyk -19 w Fv(3)p 0 0 0 1
TeXcolorcmyk 2638 836 a
tx@Dict begin  PutEnd  end
 2638 836 a 0 0.85 0.6 0.15 TeXcolorcmyk
145 w Fu(1\))p 0 0 0 1 TeXcolorcmyk 20 w FD(657)21 b(579)p
0 0.85 0.6 0.15 TeXcolorcmyk 223 w Fu(2\))p 0 0 0 1 TeXcolorcmyk
20 w FD(700)g(380)2638 957 y @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -1.42262 14.22636
7.11317 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end


@endspecial 2638 957 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 2638 957 a 0 0 0 0 TeXcolorcmyk
-19 w Fv(4)p 0 0 0 1 TeXcolorcmyk 2638 957 a
tx@Dict begin  PutEnd  end
 2638 957
a 0 0.85 0.6 0.15 TeXcolorcmyk 2774 1077 a Fu(1\))p 0 0 0 1
TeXcolorcmyk 40 w FD(1,)f(3,)f(5,)h(7,)g(9,)g(11,)g(13,)h(15,)f(17,)g
(19.)p 0 0.85 0.6 0.15 TeXcolorcmyk 2774 1196 a Fu(2\))p
0 0 0 1 TeXcolorcmyk 40 w FD(0,)g(3,)f(6,)h(9,)g(12,)h(15,)f(18.)p
0 0.85 0.6 0.15 TeXcolorcmyk 2774 1316 a Fu(3\))p 0 0 0 1
TeXcolorcmyk 40 w FD(0,)g(1,)f(3,)h(5,)g(6,)g(7,)g(9,)g(11,)g(12,)g
(13,)2774 1435 y(15,)g(17,)g(18,)h(19.)p 0 0.85 0.6 0.15
TeXcolorcmyk 2774 1555 a Fu(4\))p 0 0 0 1 TeXcolorcmyk
40 w FD(0,)f(3,)f(9,)h(15.)2638 1637 y @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0  setgray   0. true 0.0 -1.42262 14.22636
7.11317 .5 Frame  gsave 0 0.5 1 0  setcmykcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 2638 1637 a
tx@Dict begin { 7.11317 0.0 } PutCoor PutBegin  end
 2638 1637 a 0 0 0 0
TeXcolorcmyk -19 w Fv(5)p 0 0 0 1 TeXcolorcmyk 2638 1637
a
tx@Dict begin  PutEnd  end
 2638 1637 a 0 0.85 0.6 0.15 TeXcolorcmyk 2774 1757
a Fu(1\))p 0 0 0 1 TeXcolorcmyk 40 w FD(43,9)13 b(\045)p
0 0.85 0.6 0.15 TeXcolorcmyk 2774 1876 a Fu(2\))p 0 0 0 1
TeXcolorcmyk 40 w FD(197)p 0 0 0 1 TeXcolorcmyk -109
5908 a Fb(60)20 b Fa(SOLUTIONS)p 0 0 0 1 TeXcolorcmyk
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
